{"id":"9c019aa533e7cdaec1080cdd19c9be8c","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/AtomicSwap.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * @title AtomicSwap\n * @dev Implements atomic swap functionality with hashlock and timelock\n * This is the core contract for cross-chain swaps between Ethereum and Aptos\n * Supports both ETH and ERC-20 tokens\n */\ncontract AtomicSwap is ReentrancyGuard, Ownable {\n    constructor() Ownable(msg.sender) {}\n    using SafeERC20 for IERC20;\n    \n    // Events\n    event SwapInitiated(\n        bytes32 indexed hashlock,\n        address indexed initiator,\n        address indexed recipient,\n        address token,\n        uint256 amount,\n        uint256 timelock\n    );\n    \n    event SwapCompleted(\n        bytes32 indexed hashlock,\n        address indexed recipient,\n        address token,\n        uint256 amount,\n        bytes32 secret\n    );\n    \n    event SwapRefunded(\n        bytes32 indexed hashlock,\n        address indexed initiator,\n        address token,\n        uint256 amount\n    );\n    \n    // Struct to store swap information\n    struct Swap {\n        bytes32 hashlock;        // Hash of the secret\n        uint256 timelock;        // Expiration timestamp\n        address initiator;       // Address that initiated the swap\n        address recipient;       // Address that will receive the tokens\n        address token;           // Token address (address(0) for ETH)\n        uint256 amount;          // Amount of tokens to swap\n        bool completed;          // Whether the swap has been completed\n        bool refunded;           // Whether the swap has been refunded\n    }\n    \n    // Mapping from hashlock to swap details\n    mapping(bytes32 => Swap) public swaps;\n    \n    // Mapping to track if a hashlock has been used\n    mapping(bytes32 => bool) public hashlockUsed;\n    \n    // Minimum timelock duration (1 hour)\n    uint256 public constant MIN_TIMELOCK = 1 hours;\n    \n    // Maximum timelock duration (7 days)\n    uint256 public constant MAX_TIMELOCK = 7 days;\n    \n    // Errors\n    error HashlockAlreadyUsed();\n    error SwapNotFound();\n    error SwapAlreadyCompleted();\n    error SwapAlreadyRefunded();\n    error TimelockNotExpired();\n    error TimelockExpired();\n    error InvalidSecret();\n    error InvalidTimelock();\n    error InvalidRecipient();\n    error InvalidAmount();\n    error InsufficientBalance();\n    error TransferFailed();\n    \n    /**\n     * @dev Initiates a new atomic swap with ETH\n     * @param hashlock The hash of the secret only (keccak256(secret))\n     * @param timelock The expiration timestamp\n     * @param recipient The address that will receive the tokens\n     * @param amount The amount of ETH to swap\n     */\n    function initiateSwap(\n        bytes32 hashlock,\n        uint256 timelock,\n        address recipient,\n        uint256 amount\n    ) external payable nonReentrant {\n        _initiateSwap(hashlock, timelock, recipient, address(0), amount);\n    }\n    \n    /**\n     * @dev Initiates a new atomic swap with ERC-20 tokens\n     * @param hashlock The hash of the secret only (keccak256(secret))\n     * @param timelock The expiration timestamp\n     * @param recipient The address that will receive the tokens\n     * @param token The ERC-20 token address\n     * @param amount The amount of tokens to swap\n     */\n    function initiateTokenSwap(\n        bytes32 hashlock,\n        uint256 timelock,\n        address recipient,\n        address token,\n        uint256 amount\n    ) external nonReentrant {\n        _initiateSwap(hashlock, timelock, recipient, token, amount);\n        \n        // Transfer tokens from initiator to contract\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n    }\n    \n    /**\n     * @dev Internal function to initiate a swap\n     * @param hashlock The hash of the secret\n     * @param timelock The expiration timestamp\n     * @param recipient The address that will receive the tokens\n     * @param token The token address (address(0) for ETH)\n     * @param amount The amount of tokens to swap\n     */\n    function _initiateSwap(\n        bytes32 hashlock,\n        uint256 timelock,\n        address recipient,\n        address token,\n        uint256 amount\n    ) internal {\n        if (hashlockUsed[hashlock]) {\n            revert HashlockAlreadyUsed();\n        }\n        \n        if (timelock < block.timestamp + MIN_TIMELOCK || timelock > block.timestamp + MAX_TIMELOCK) {\n            revert InvalidTimelock();\n        }\n        \n        if (recipient == address(0)) {\n            revert InvalidRecipient();\n        }\n        \n        if (amount == 0) {\n            revert InvalidAmount();\n        }\n        \n        // For ETH swaps, verify the correct amount was sent\n        if (token == address(0)) {\n            if (msg.value != amount) {\n                revert InvalidAmount();\n            }\n        }\n        \n        // Check balance for token swaps\n        if (token != address(0)) {\n            if (IERC20(token).balanceOf(msg.sender) < amount) {\n                revert InsufficientBalance();\n            }\n        }\n        \n        swaps[hashlock] = Swap({\n            hashlock: hashlock,\n            timelock: timelock,\n            initiator: msg.sender,\n            recipient: recipient,\n            token: token,\n            amount: amount,\n            completed: false,\n            refunded: false\n        });\n        \n        hashlockUsed[hashlock] = true;\n        \n        emit SwapInitiated(hashlock, msg.sender, recipient, token, amount, timelock);\n    }\n    \n    /**\n     * @dev Completes a swap by providing the secret\n     * @param hashlock The hash of the secret\n     * @param secret The secret that generates the hashlock\n     */\n    function completeSwap(bytes32 hashlock, bytes32 secret) external nonReentrant {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0)) {\n            revert SwapNotFound();\n        }\n        \n        if (swap.completed) {\n            revert SwapAlreadyCompleted();\n        }\n        \n        if (swap.refunded) {\n            revert SwapAlreadyRefunded();\n        }\n        \n        if (block.timestamp >= swap.timelock) {\n            revert TimelockExpired();\n        }\n        \n        // Verify the secret matches the hashlock (recipient-agnostic)\n        if (keccak256(abi.encodePacked(secret)) != hashlock) {\n            revert InvalidSecret();\n        }\n        \n        // No recipient check - anyone with the secret can complete the swap\n        \n        swap.completed = true;\n        \n        // Transfer tokens to recipient\n        if (swap.token == address(0)) {\n            // ETH transfer\n            (bool success, ) = swap.recipient.call{value: swap.amount}(\"\");\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            // ERC-20 transfer\n            IERC20(swap.token).safeTransfer(swap.recipient, swap.amount);\n        }\n        \n        emit SwapCompleted(hashlock, swap.recipient, swap.token, swap.amount, secret);\n    }\n\n    /**\n     * @dev Completes a swap by the initiator (for cross-chain atomic swaps)\n     * This allows the initiator to complete their own swap when they are also the recipient\n     * @param hashlock The hash of the secret\n     * @param secret The secret that generates the hashlock\n     */\n    function completeSwapAsInitiator(bytes32 hashlock, bytes32 secret) external nonReentrant {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0)) {\n            revert SwapNotFound();\n        }\n        \n        if (swap.completed) {\n            revert SwapAlreadyCompleted();\n        }\n        \n        if (swap.refunded) {\n            revert SwapAlreadyRefunded();\n        }\n        \n        if (block.timestamp >= swap.timelock) {\n            revert TimelockExpired();\n        }\n        \n        // Verify the secret matches the hashlock (recipient-agnostic)\n        if (keccak256(abi.encodePacked(secret)) != hashlock) {\n            revert InvalidSecret();\n        }\n        \n        // Only the initiator can complete their own swap\n        if (msg.sender != swap.initiator) {\n            revert InvalidRecipient();\n        }\n        \n        // For cross-chain swaps, the initiator should also be the recipient\n        if (msg.sender != swap.recipient) {\n            revert InvalidRecipient();\n        }\n        \n        swap.completed = true;\n        \n        // Transfer tokens to recipient (which is the initiator)\n        if (swap.token == address(0)) {\n            // ETH transfer\n            (bool success, ) = swap.recipient.call{value: swap.amount}(\"\");\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            // ERC-20 transfer\n            IERC20(swap.token).safeTransfer(swap.recipient, swap.amount);\n        }\n        \n        emit SwapCompleted(hashlock, swap.recipient, swap.token, swap.amount, secret);\n    }\n    \n    /**\n     * @dev Refunds a swap after the timelock expires\n     * @param hashlock The hash of the secret\n     */\n    function refundSwap(bytes32 hashlock) external nonReentrant {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0)) {\n            revert SwapNotFound();\n        }\n        \n        if (swap.completed) {\n            revert SwapAlreadyCompleted();\n        }\n        \n        if (swap.refunded) {\n            revert SwapAlreadyRefunded();\n        }\n        \n        if (block.timestamp < swap.timelock) {\n            revert TimelockNotExpired();\n        }\n        \n        // Only the initiator can refund\n        if (msg.sender != swap.initiator) {\n            revert InvalidRecipient();\n        }\n        \n        swap.refunded = true;\n        \n        // Transfer tokens back to initiator\n        if (swap.token == address(0)) {\n            // ETH transfer\n            (bool success, ) = swap.initiator.call{value: swap.amount}(\"\");\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            // ERC-20 transfer\n            IERC20(swap.token).safeTransfer(swap.initiator, swap.amount);\n        }\n        \n        emit SwapRefunded(hashlock, swap.initiator, swap.token, swap.amount);\n    }\n    \n    /**\n     * @dev Checks if a swap can be completed\n     * @param hashlock The hash of the secret\n     * @return bool True if the swap can be completed\n     */\n    function canComplete(bytes32 hashlock) external view returns (bool) {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0) || swap.completed || swap.refunded) {\n            return false;\n        }\n        \n        return block.timestamp < swap.timelock;\n    }\n    \n    /**\n     * @dev Checks if a swap can be refunded\n     * @param hashlock The hash of the secret\n     * @return bool True if the swap can be refunded\n     */\n    function canRefund(bytes32 hashlock) external view returns (bool) {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0) || swap.completed || swap.refunded) {\n            return false;\n        }\n        \n        return block.timestamp >= swap.timelock;\n    }\n    \n    /**\n     * @dev Gets the details of a swap\n     * @param hashlock The hash of the secret\n     * @return initiator The address that initiated the swap\n     * @return recipient The address that will receive the tokens\n     * @return token The token address\n     * @return amount The amount of tokens\n     * @return timelock The expiration timestamp\n     * @return completed Whether the swap has been completed\n     * @return refunded Whether the swap has been refunded\n     */\n    function getSwap(bytes32 hashlock) external view returns (\n        address initiator,\n        address recipient,\n        address token,\n        uint256 amount,\n        uint256 timelock,\n        bool completed,\n        bool refunded\n    ) {\n        Swap storage swap = swaps[hashlock];\n        return (\n            swap.initiator,\n            swap.recipient,\n            swap.token,\n            swap.amount,\n            swap.timelock,\n            swap.completed,\n            swap.refunded\n        );\n    }\n    \n    /**\n     * @dev Allows the owner to withdraw any stuck tokens (emergency only)\n     * @param token The token address to withdraw\n     * @param amount The amount to withdraw\n     */\n    function emergencyWithdraw(address token, uint256 amount) external onlyOwner {\n        if (token == address(0)) {\n            (bool success, ) = owner().call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            IERC20(token).safeTransfer(owner(), amount);\n        }\n    }\n    \n    /**\n     * @dev Allows the contract to receive ETH\n     */\n    receive() external payable {}\n} "}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[809],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":810,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,809],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[890],"IERC20":[315]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":890,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,890,315],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[249,258]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[890]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":891,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":316,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"133:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":315,"linearizedBaseContracts":[315],"name":"IERC20","nameLocation":"215:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"228:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":249,"name":"Transfer","nameLocation":"397:8:4","nodeType":"EventDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:4","nodeType":"VariableDeclaration","scope":249,"src":"406:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:4","nodeType":"VariableDeclaration","scope":249,"src":"428:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:4","nodeType":"VariableDeclaration","scope":249,"src":"448:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:4"},"src":"391:72:4"},{"anonymous":false,"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"469:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":258,"name":"Approval","nameLocation":"628:8:4","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:4","nodeType":"VariableDeclaration","scope":258,"src":"637:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:4","nodeType":"VariableDeclaration","scope":258,"src":"660:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:4","nodeType":"VariableDeclaration","scope":258,"src":"685:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:4"},"src":"622:78:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"706:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:4","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"796:2:4"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"822:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:4"},"scope":315,"src":"776:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"837:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:4","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"account","nameLocation":"940:7:4","nodeType":"VariableDeclaration","scope":272,"src":"932:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:4"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":272,"src":"972:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:4"},"scope":315,"src":"913:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"987:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:4","nodeType":"FunctionDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"to","nameLocation":"1231:2:4","nodeType":"VariableDeclaration","scope":282,"src":"1223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"value","nameLocation":"1243:5:4","nodeType":"VariableDeclaration","scope":282,"src":"1235:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:4"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"1268:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":279,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:4"},"scope":315,"src":"1205:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1280:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:4","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"owner","nameLocation":"1576:5:4","nodeType":"VariableDeclaration","scope":292,"src":"1568:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1591:7:4","nodeType":"VariableDeclaration","scope":292,"src":"1583:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:4"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"1623:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:4"},"scope":315,"src":"1549:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1638:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:4","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"spender","nameLocation":"2335:7:4","nodeType":"VariableDeclaration","scope":302,"src":"2327:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"value","nameLocation":"2352:5:4","nodeType":"VariableDeclaration","scope":302,"src":"2344:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:4"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"2377:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":299,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:4"},"scope":315,"src":"2310:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"2389:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:4","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"2721:4:4","nodeType":"VariableDeclaration","scope":314,"src":"2713:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"2735:2:4","nodeType":"VariableDeclaration","scope":314,"src":"2727:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"2747:5:4","nodeType":"VariableDeclaration","scope":314,"src":"2739:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:4"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"2772:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:4"},"scope":315,"src":"2691:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":316,"src":"205:2575:4","usedErrors":[],"usedEvents":[249,258]}],"src":"106:2675:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[315],"SafeERC20":[779]},"id":780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":316,"src":"141:37:5","symbolAliases":[{"foreign":{"id":318,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"149:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":230,"src":"179:58:5","symbolAliases":[{"foreign":{"id":320,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"239:458:5","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":779,"linearizedBaseContracts":[779],"name":"SafeERC20","nameLocation":"706:9:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"722:65:5","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":327,"name":"SafeERC20FailedOperation","nameLocation":"798:24:5","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"token","nameLocation":"831:5:5","nodeType":"VariableDeclaration","scope":327,"src":"823:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:5"},"src":"792:46:5"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"844:71:5","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":336,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:5","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"spender","nameLocation":"967:7:5","nodeType":"VariableDeclaration","scope":336,"src":"959:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:5","nodeType":"VariableDeclaration","scope":336,"src":"976:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:5","nodeType":"VariableDeclaration","scope":336,"src":"1002:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:5"},"src":"920:109:5"},{"body":{"id":359,"nodeType":"Block","src":"1291:88:5","statements":[{"expression":{"arguments":[{"id":348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1321:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":351,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1343:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"1343:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1360:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1364:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":349,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":347,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1301:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"1301:71:5"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1035:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":360,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:5","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"token","nameLocation":"1248:5:5","nodeType":"VariableDeclaration","scope":360,"src":"1241:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":339,"nodeType":"UserDefinedTypeName","pathNode":{"id":338,"name":"IERC20","nameLocations":["1241:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1241:6:5"},"referencedDeclaration":315,"src":"1241:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"to","nameLocation":"1263:2:5","nodeType":"VariableDeclaration","scope":360,"src":"1255:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"value","nameLocation":"1275:5:5","nodeType":"VariableDeclaration","scope":360,"src":"1267:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:5"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"1291:0:5"},"scope":779,"src":"1219:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"1708:98:5","statements":[{"expression":{"arguments":[{"id":374,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1738:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":377,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1760:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"1760:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":379,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1781:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1787:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1791:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":375,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":373,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1718:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"ExpressionStatement","src":"1718:81:5"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"1385:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:5","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"token","nameLocation":"1651:5:5","nodeType":"VariableDeclaration","scope":387,"src":"1644:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":363,"nodeType":"UserDefinedTypeName","pathNode":{"id":362,"name":"IERC20","nameLocations":["1644:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1644:6:5"},"referencedDeclaration":315,"src":"1644:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"from","nameLocation":"1666:4:5","nodeType":"VariableDeclaration","scope":387,"src":"1658:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"to","nameLocation":"1680:2:5","nodeType":"VariableDeclaration","scope":387,"src":"1672:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"value","nameLocation":"1692:5:5","nodeType":"VariableDeclaration","scope":387,"src":"1684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:5"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1708:0:5"},"scope":779,"src":"1618:188:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"2033:99:5","statements":[{"expression":{"arguments":[{"id":401,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2074:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":404,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2096:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"2096:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2113:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2117:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":402,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":400,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2050:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":399,"id":411,"nodeType":"Return","src":"2043:82:5"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"1812:126:5","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:5","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"token","nameLocation":"1975:5:5","nodeType":"VariableDeclaration","scope":413,"src":"1968:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":390,"nodeType":"UserDefinedTypeName","pathNode":{"id":389,"name":"IERC20","nameLocations":["1968:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1968:6:5"},"referencedDeclaration":315,"src":"1968:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"to","nameLocation":"1990:2:5","nodeType":"VariableDeclaration","scope":413,"src":"1982:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"value","nameLocation":"2002:5:5","nodeType":"VariableDeclaration","scope":413,"src":"1994:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"2027:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:5"},"scope":779,"src":"1943:189:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"2381:109:5","statements":[{"expression":{"arguments":[{"id":429,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2422:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2444:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2444:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":434,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2465:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2471:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2475:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":430,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":428,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2398:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":427,"id":440,"nodeType":"Return","src":"2391:92:5"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2138:130:5","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:5","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"token","nameLocation":"2309:5:5","nodeType":"VariableDeclaration","scope":442,"src":"2302:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"IERC20","nameLocations":["2302:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"2302:6:5"},"referencedDeclaration":315,"src":"2302:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"from","nameLocation":"2324:4:5","nodeType":"VariableDeclaration","scope":442,"src":"2316:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"to","nameLocation":"2338:2:5","nodeType":"VariableDeclaration","scope":442,"src":"2330:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"value","nameLocation":"2350:5:5","nodeType":"VariableDeclaration","scope":442,"src":"2342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:5"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"2375:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":425,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:5"},"scope":779,"src":"2273:217:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":472,"nodeType":"Block","src":"3232:139:5","statements":[{"assignments":[454],"declarations":[{"constant":false,"id":454,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:5","nodeType":"VariableDeclaration","scope":472,"src":"3242:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":463,"initialValue":{"arguments":[{"arguments":[{"id":459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:5","typeDescriptions":{}}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3296:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3265:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"3265:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:5"},{"expression":{"arguments":[{"id":465,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3327:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":466,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3334:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3343:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"3358:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":464,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3314:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"3314:50:5"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"2496:645:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:5","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"token","nameLocation":"3184:5:5","nodeType":"VariableDeclaration","scope":473,"src":"3177:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":445,"nodeType":"UserDefinedTypeName","pathNode":{"id":444,"name":"IERC20","nameLocations":["3177:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"3177:6:5"},"referencedDeclaration":315,"src":"3177:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"spender","nameLocation":"3199:7:5","nodeType":"VariableDeclaration","scope":473,"src":"3191:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"value","nameLocation":"3216:5:5","nodeType":"VariableDeclaration","scope":473,"src":"3208:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:5"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"3232:0:5"},"scope":779,"src":"3146:225:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"4137:370:5","statements":[{"id":514,"nodeType":"UncheckedBlock","src":"4147:354:5","statements":[{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:5","nodeType":"VariableDeclaration","scope":514,"src":"4171:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":494,"initialValue":{"arguments":[{"arguments":[{"id":490,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:5","typeDescriptions":{}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4229:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4198:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"4198:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4255:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":496,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4274:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"IfStatement","src":"4251:160:5","trueBody":{"id":504,"nodeType":"Block","src":"4293:118:5","statements":[{"errorCall":{"arguments":[{"id":499,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4351:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4360:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":501,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4378:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4318:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"RevertStatement","src":"4311:85:5"}]}},{"expression":{"arguments":[{"id":507,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4437:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":508,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4444:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":509,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4453:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":510,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4472:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4424:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"4424:66:5"}]}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"3377:657:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:5","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"token","nameLocation":"4077:5:5","nodeType":"VariableDeclaration","scope":516,"src":"4070:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"IERC20","nameLocations":["4070:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"4070:6:5"},"referencedDeclaration":315,"src":"4070:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"spender","nameLocation":"4092:7:5","nodeType":"VariableDeclaration","scope":516,"src":"4084:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:5","nodeType":"VariableDeclaration","scope":516,"src":"4101:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"4137:0:5"},"scope":779,"src":"4039:468:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"5161:303:5","statements":[{"assignments":[528],"declarations":[{"constant":false,"id":528,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:5","nodeType":"VariableDeclaration","scope":562,"src":"5171:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":537,"initialValue":{"arguments":[{"expression":{"id":531,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5214:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5214:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5230:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5239:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:5"},{"condition":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:5","subExpression":{"arguments":[{"id":539,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5286:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":540,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5293:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":538,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"5262:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"5257:201:5","trueBody":{"id":560,"nodeType":"Block","src":"5308:150:5","statements":[{"expression":{"arguments":[{"id":544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5342:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5364:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5364:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":549,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5380:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":545,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":543,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5322:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"5322:71:5"},{"expression":{"arguments":[{"id":556,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5427:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":557,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5434:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":555,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5407:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"5407:40:5"}]}}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"4513:566:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:5","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"token","nameLocation":"5113:5:5","nodeType":"VariableDeclaration","scope":563,"src":"5106:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"IERC20","nameLocations":["5106:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"5106:6:5"},"referencedDeclaration":315,"src":"5106:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"spender","nameLocation":"5128:7:5","nodeType":"VariableDeclaration","scope":563,"src":"5120:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"value","nameLocation":"5145:5:5","nodeType":"VariableDeclaration","scope":563,"src":"5137:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:5"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"5161:0:5"},"scope":779,"src":"5084:380:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"5911:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5925:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:5","memberName":"code","nodeType":"MemberAccess","src":"5925:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:5","memberName":"length","nodeType":"MemberAccess","src":"5925:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:5","subExpression":{"arguments":[{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"6034:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6038:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":592,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6045:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":588,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6012:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:5","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"nodeType":"IfStatement","src":"6007:117:5","trueBody":{"id":602,"nodeType":"Block","src":"6052:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":598,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6106:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:5","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6073:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"RevertStatement","src":"6066:47:5"}]}},"id":604,"nodeType":"IfStatement","src":"5921:203:5","trueBody":{"id":587,"nodeType":"Block","src":"5946:55:5","statements":[{"expression":{"arguments":[{"id":582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"5973:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5980:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5984:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":581,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5960:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"5960:30:5"}]}}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"5470:333:5","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:5","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"token","nameLocation":"5849:5:5","nodeType":"VariableDeclaration","scope":606,"src":"5840:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":566,"nodeType":"UserDefinedTypeName","pathNode":{"id":565,"name":"IERC1363","nameLocations":["5840:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:5"},"referencedDeclaration":229,"src":"5840:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"to","nameLocation":"5864:2:5","nodeType":"VariableDeclaration","scope":606,"src":"5856:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"value","nameLocation":"5876:5:5","nodeType":"VariableDeclaration","scope":606,"src":"5868:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"data","nameLocation":"5896:4:5","nodeType":"VariableDeclaration","scope":606,"src":"5883:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:5"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"5911:0:5"},"scope":779,"src":"5808:322:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":652,"nodeType":"Block","src":"6649:239:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6663:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:5","memberName":"code","nodeType":"MemberAccess","src":"6663:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:5","memberName":"length","nodeType":"MemberAccess","src":"6663:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:5","subExpression":{"arguments":[{"id":636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6786:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6792:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6803:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":634,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6760:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:5","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"6755:127:5","trueBody":{"id":649,"nodeType":"Block","src":"6810:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":645,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6864:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:5","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":642,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6831:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"RevertStatement","src":"6824:47:5"}]}},"id":651,"nodeType":"IfStatement","src":"6659:223:5","trueBody":{"id":633,"nodeType":"Block","src":"6684:65:5","statements":[{"expression":{"arguments":[{"id":627,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6715:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":628,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6722:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6728:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6732:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6698:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"6698:40:5"}]}}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"6136:341:5","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":653,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:5","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"token","nameLocation":"6536:5:5","nodeType":"VariableDeclaration","scope":653,"src":"6527:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":609,"nodeType":"UserDefinedTypeName","pathNode":{"id":608,"name":"IERC1363","nameLocations":["6527:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:5"},"referencedDeclaration":229,"src":"6527:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"from","nameLocation":"6559:4:5","nodeType":"VariableDeclaration","scope":653,"src":"6551:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"to","nameLocation":"6581:2:5","nodeType":"VariableDeclaration","scope":653,"src":"6573:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"value","nameLocation":"6601:5:5","nodeType":"VariableDeclaration","scope":653,"src":"6593:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"data","nameLocation":"6629:4:5","nodeType":"VariableDeclaration","scope":653,"src":"6616:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":617,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:5"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[],"src":"6649:0:5"},"scope":779,"src":"6482:406:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"7655:218:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7669:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:5","memberName":"code","nodeType":"MemberAccess","src":"7669:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:5","memberName":"length","nodeType":"MemberAccess","src":"7669:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:5","subExpression":{"arguments":[{"id":680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7777:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7781:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":682,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7788:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":678,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7756:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:5","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"7751:116:5","trueBody":{"id":692,"nodeType":"Block","src":"7795:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":688,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7849:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:5","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":685,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7816:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"7809:47:5"}]}},"id":694,"nodeType":"IfStatement","src":"7665:202:5","trueBody":{"id":677,"nodeType":"Block","src":"7690:55:5","statements":[{"expression":{"arguments":[{"id":672,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7717:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7724:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":671,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"7704:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"7704:30:5"}]}}]},"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"6894:654:5","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:5","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"token","nameLocation":"7593:5:5","nodeType":"VariableDeclaration","scope":696,"src":"7584:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"IERC1363","nameLocations":["7584:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:5"},"referencedDeclaration":229,"src":"7584:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"7608:2:5","nodeType":"VariableDeclaration","scope":696,"src":"7600:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"value","nameLocation":"7620:5:5","nodeType":"VariableDeclaration","scope":696,"src":"7612:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"data","nameLocation":"7640:4:5","nodeType":"VariableDeclaration","scope":696,"src":"7627:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":662,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:5"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"7655:0:5"},"scope":779,"src":"7553:320:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"8440:650:5","statements":[{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:5","nodeType":"VariableDeclaration","scope":736,"src":"8450:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":707,"nodeType":"VariableDeclarationStatement","src":"8450:18:5"},{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:5","nodeType":"VariableDeclaration","scope":736,"src":"8478:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":710,"nodeType":"VariableDeclarationStatement","src":"8478:19:5"},{"AST":{"nativeSrc":"8532:396:5","nodeType":"YulBlock","src":"8532:396:5","statements":[{"nativeSrc":"8546:75:5","nodeType":"YulVariableDeclaration","src":"8546:75:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:5","nodeType":"YulIdentifier","src":"8566:3:5"},"nativeSrc":"8566:5:5","nodeType":"YulFunctionCall","src":"8566:5:5"},{"name":"token","nativeSrc":"8573:5:5","nodeType":"YulIdentifier","src":"8573:5:5"},{"kind":"number","nativeSrc":"8580:1:5","nodeType":"YulLiteral","src":"8580:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:5","nodeType":"YulIdentifier","src":"8587:4:5"},{"kind":"number","nativeSrc":"8593:4:5","nodeType":"YulLiteral","src":"8593:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:5","nodeType":"YulIdentifier","src":"8583:3:5"},"nativeSrc":"8583:15:5","nodeType":"YulFunctionCall","src":"8583:15:5"},{"arguments":[{"name":"data","nativeSrc":"8606:4:5","nodeType":"YulIdentifier","src":"8606:4:5"}],"functionName":{"name":"mload","nativeSrc":"8600:5:5","nodeType":"YulIdentifier","src":"8600:5:5"},"nativeSrc":"8600:11:5","nodeType":"YulFunctionCall","src":"8600:11:5"},{"kind":"number","nativeSrc":"8613:1:5","nodeType":"YulLiteral","src":"8613:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:5","nodeType":"YulLiteral","src":"8616:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:5","nodeType":"YulIdentifier","src":"8561:4:5"},"nativeSrc":"8561:60:5","nodeType":"YulFunctionCall","src":"8561:60:5"},"variables":[{"name":"success","nativeSrc":"8550:7:5","nodeType":"YulTypedName","src":"8550:7:5","type":""}]},{"body":{"nativeSrc":"8682:157:5","nodeType":"YulBlock","src":"8682:157:5","statements":[{"nativeSrc":"8700:22:5","nodeType":"YulVariableDeclaration","src":"8700:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:5","nodeType":"YulLiteral","src":"8717:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:5","nodeType":"YulIdentifier","src":"8711:5:5"},"nativeSrc":"8711:11:5","nodeType":"YulFunctionCall","src":"8711:11:5"},"variables":[{"name":"ptr","nativeSrc":"8704:3:5","nodeType":"YulTypedName","src":"8704:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:5","nodeType":"YulIdentifier","src":"8754:3:5"},{"kind":"number","nativeSrc":"8759:1:5","nodeType":"YulLiteral","src":"8759:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:5","nodeType":"YulIdentifier","src":"8762:14:5"},"nativeSrc":"8762:16:5","nodeType":"YulFunctionCall","src":"8762:16:5"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:5","nodeType":"YulIdentifier","src":"8739:14:5"},"nativeSrc":"8739:40:5","nodeType":"YulFunctionCall","src":"8739:40:5"},"nativeSrc":"8739:40:5","nodeType":"YulExpressionStatement","src":"8739:40:5"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:5","nodeType":"YulIdentifier","src":"8803:3:5"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:5","nodeType":"YulIdentifier","src":"8808:14:5"},"nativeSrc":"8808:16:5","nodeType":"YulFunctionCall","src":"8808:16:5"}],"functionName":{"name":"revert","nativeSrc":"8796:6:5","nodeType":"YulIdentifier","src":"8796:6:5"},"nativeSrc":"8796:29:5","nodeType":"YulFunctionCall","src":"8796:29:5"},"nativeSrc":"8796:29:5","nodeType":"YulExpressionStatement","src":"8796:29:5"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:5","nodeType":"YulIdentifier","src":"8673:7:5"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:5","nodeType":"YulIdentifier","src":"8666:6:5"},"nativeSrc":"8666:15:5","nodeType":"YulFunctionCall","src":"8666:15:5"},"nativeSrc":"8663:176:5","nodeType":"YulIf","src":"8663:176:5"},{"nativeSrc":"8852:30:5","nodeType":"YulAssignment","src":"8852:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:5","nodeType":"YulIdentifier","src":"8866:14:5"},"nativeSrc":"8866:16:5","nodeType":"YulFunctionCall","src":"8866:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:5","nodeType":"YulIdentifier","src":"8852:10:5"}]},{"nativeSrc":"8895:23:5","nodeType":"YulAssignment","src":"8895:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:5","nodeType":"YulLiteral","src":"8916:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:5","nodeType":"YulIdentifier","src":"8910:5:5"},"nativeSrc":"8910:8:5","nodeType":"YulFunctionCall","src":"8910:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:5","nodeType":"YulIdentifier","src":"8895:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":702,"isOffset":false,"isSlot":false,"src":"8587:4:5","valueSize":1},{"declaration":702,"isOffset":false,"isSlot":false,"src":"8606:4:5","valueSize":1},{"declaration":706,"isOffset":false,"isSlot":false,"src":"8852:10:5","valueSize":1},{"declaration":709,"isOffset":false,"isSlot":false,"src":"8895:11:5","valueSize":1},{"declaration":700,"isOffset":false,"isSlot":false,"src":"8573:5:5","valueSize":1}],"flags":["memory-safe"],"id":711,"nodeType":"InlineAssembly","src":"8507:421:5"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"8942:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"8994:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":717,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8968:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:5","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:5","memberName":"code","nodeType":"MemberAccess","src":"8960:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:5","memberName":"length","nodeType":"MemberAccess","src":"8960:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"8938:146:5","trueBody":{"id":734,"nodeType":"Block","src":"9012:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":730,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9066:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:5","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":727,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9033:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"RevertStatement","src":"9026:47:5"}]}}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7879:486:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:5","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"token","nameLocation":"8406:5:5","nodeType":"VariableDeclaration","scope":737,"src":"8399:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":699,"nodeType":"UserDefinedTypeName","pathNode":{"id":698,"name":"IERC20","nameLocations":["8399:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"8399:6:5"},"referencedDeclaration":315,"src":"8399:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"data","nameLocation":"8426:4:5","nodeType":"VariableDeclaration","scope":737,"src":"8413:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":701,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:5"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"8440:0:5"},"scope":779,"src":"8370:720:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":777,"nodeType":"Block","src":"9681:391:5","statements":[{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"success","nameLocation":"9696:7:5","nodeType":"VariableDeclaration","scope":777,"src":"9691:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":748,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":750,"nodeType":"VariableDeclarationStatement","src":"9691:12:5"},{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:5","nodeType":"VariableDeclaration","scope":777,"src":"9713:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":753,"nodeType":"VariableDeclarationStatement","src":"9713:18:5"},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:5","nodeType":"VariableDeclaration","scope":777,"src":"9741:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"nodeType":"VariableDeclarationStatement","src":"9741:19:5"},{"AST":{"nativeSrc":"9795:174:5","nodeType":"YulBlock","src":"9795:174:5","statements":[{"nativeSrc":"9809:71:5","nodeType":"YulAssignment","src":"9809:71:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:5","nodeType":"YulIdentifier","src":"9825:3:5"},"nativeSrc":"9825:5:5","nodeType":"YulFunctionCall","src":"9825:5:5"},{"name":"token","nativeSrc":"9832:5:5","nodeType":"YulIdentifier","src":"9832:5:5"},{"kind":"number","nativeSrc":"9839:1:5","nodeType":"YulLiteral","src":"9839:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:5","nodeType":"YulIdentifier","src":"9846:4:5"},{"kind":"number","nativeSrc":"9852:4:5","nodeType":"YulLiteral","src":"9852:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:5","nodeType":"YulIdentifier","src":"9842:3:5"},"nativeSrc":"9842:15:5","nodeType":"YulFunctionCall","src":"9842:15:5"},{"arguments":[{"name":"data","nativeSrc":"9865:4:5","nodeType":"YulIdentifier","src":"9865:4:5"}],"functionName":{"name":"mload","nativeSrc":"9859:5:5","nodeType":"YulIdentifier","src":"9859:5:5"},"nativeSrc":"9859:11:5","nodeType":"YulFunctionCall","src":"9859:11:5"},{"kind":"number","nativeSrc":"9872:1:5","nodeType":"YulLiteral","src":"9872:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:5","nodeType":"YulLiteral","src":"9875:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:5","nodeType":"YulIdentifier","src":"9820:4:5"},"nativeSrc":"9820:60:5","nodeType":"YulFunctionCall","src":"9820:60:5"},"variableNames":[{"name":"success","nativeSrc":"9809:7:5","nodeType":"YulIdentifier","src":"9809:7:5"}]},{"nativeSrc":"9893:30:5","nodeType":"YulAssignment","src":"9893:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:5","nodeType":"YulIdentifier","src":"9907:14:5"},"nativeSrc":"9907:16:5","nodeType":"YulFunctionCall","src":"9907:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:5","nodeType":"YulIdentifier","src":"9893:10:5"}]},{"nativeSrc":"9936:23:5","nodeType":"YulAssignment","src":"9936:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:5","nodeType":"YulLiteral","src":"9957:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:5","nodeType":"YulIdentifier","src":"9951:5:5"},"nativeSrc":"9951:8:5","nodeType":"YulFunctionCall","src":"9951:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:5","nodeType":"YulIdentifier","src":"9936:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":743,"isOffset":false,"isSlot":false,"src":"9846:4:5","valueSize":1},{"declaration":743,"isOffset":false,"isSlot":false,"src":"9865:4:5","valueSize":1},{"declaration":752,"isOffset":false,"isSlot":false,"src":"9893:10:5","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"9936:11:5","valueSize":1},{"declaration":749,"isOffset":false,"isSlot":false,"src":"9809:7:5","valueSize":1},{"declaration":741,"isOffset":false,"isSlot":false,"src":"9832:5:5","valueSize":1}],"flags":["memory-safe"],"id":757,"nodeType":"InlineAssembly","src":"9770:199:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"9985:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9997:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10048:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":764,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"10023:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:5","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:5","memberName":"code","nodeType":"MemberAccess","src":"10015:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:5","memberName":"length","nodeType":"MemberAccess","src":"10015:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":776,"nodeType":"Return","src":"9978:87:5"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"9096:491:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"token","nameLocation":"9632:5:5","nodeType":"VariableDeclaration","scope":778,"src":"9625:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":740,"nodeType":"UserDefinedTypeName","pathNode":{"id":739,"name":"IERC20","nameLocations":["9625:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"9625:6:5"},"referencedDeclaration":315,"src":"9625:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"data","nameLocation":"9652:4:5","nodeType":"VariableDeclaration","scope":778,"src":"9639:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":742,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"9675:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:5"},"scope":779,"src":"9592:480:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":780,"src":"698:9376:5","usedErrors":[327,336],"usedEvents":[]}],"src":"115:9960:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[809]},"id":810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":781,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":809,"linearizedBaseContracts":[809],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":790,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":786,"id":789,"nodeType":"Return","src":"728:17:6"}]},"id":791,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":809,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":796,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":795,"id":798,"nodeType":"Return","src":"835:15:6"}]},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":809,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":804,"id":806,"nodeType":"Return","src":"945:8:6"}]},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":809,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":810,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[878]},"id":879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"135:894:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":878,"linearizedBaseContracts":[878],"name":"ReentrancyGuard","nameLocation":"1048:15:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":815,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:7","nodeType":"VariableDeclaration","scope":878,"src":"1818:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":818,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:7","nodeType":"VariableDeclaration","scope":878,"src":"1864:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":820,"mutability":"mutable","name":"_status","nameLocation":"1923:7:7","nodeType":"VariableDeclaration","scope":878,"src":"1907:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"1937:52:7","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":823,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:7","nodeType":"ErrorDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"2028:2:7"},"src":"1994:37:7"},{"body":{"id":830,"nodeType":"Block","src":"2051:38:7","statements":[{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":826,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":827,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2071:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"2061:21:7"}]},"id":831,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"2048:2:7"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"2051:0:7"},"scope":878,"src":"2037:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"2490:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":834,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2500:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"2500:21:7"},{"id":837,"nodeType":"PlaceholderStatement","src":"2531:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":838,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2542:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"2542:20:7"}]},"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"2095:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":842,"name":"nonReentrant","nameLocation":"2475:12:7","nodeType":"ModifierDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"2487:2:7"},"src":"2466:103:7","virtual":false,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"2614:268:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":846,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":852,"nodeType":"IfStatement","src":"2698:86:7","trueBody":{"id":851,"nodeType":"Block","src":"2722:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2743:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"RevertStatement","src":"2736:37:7"}]}},{"expression":{"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":853,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":854,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":856,"nodeType":"ExpressionStatement","src":"2858:17:7"}]},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:7","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"2603:2:7"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"2614:0:7"},"scope":878,"src":"2575:307:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":865,"nodeType":"Block","src":"2926:170:7","statements":[{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":861,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":862,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3078:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":864,"nodeType":"ExpressionStatement","src":"3068:21:7"}]},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:7","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"2915:2:7"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"2926:0:7"},"scope":878,"src":"2888:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":876,"nodeType":"Block","src":"3339:42:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":872,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":873,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":871,"id":875,"nodeType":"Return","src":"3349:25:7"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"3102:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":877,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:7","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"3307:2:7"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"3333:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":869,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:7"},"scope":878,"src":"3275:106:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":879,"src":"1030:2353:7","usedErrors":[823],"usedEvents":[]}],"src":"109:3275:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[890]},"id":891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":880,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"142:280:8","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":890,"linearizedBaseContracts":[890],"name":"IERC165","nameLocation":"433:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"447:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:8","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:8","nodeType":"VariableDeclaration","scope":889,"src":"819:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":883,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:8"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"862:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:8"},"scope":890,"src":"792:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":891,"src":"423:447:8","usedErrors":[],"usedEvents":[]}],"src":"115:756:8"},"id":8},"contracts/AtomicSwap.sol":{"ast":{"absolutePath":"contracts/AtomicSwap.sol","exportedSymbols":{"AtomicSwap":[1755],"Context":[809],"IERC1363":[229],"IERC20":[315],"Ownable":[147],"ReentrancyGuard":[878],"SafeERC20":[779]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":892,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":879,"src":"58:59:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":148,"src":"118:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":316,"src":"171:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":780,"src":"228:65:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":898,"name":"ReentrancyGuard","nameLocations":["536:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":878,"src":"536:15:9"},"id":899,"nodeType":"InheritanceSpecifier","src":"536:15:9"},{"baseName":{"id":900,"name":"Ownable","nameLocations":["553:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"553:7:9"},"id":901,"nodeType":"InheritanceSpecifier","src":"553:7:9"}],"canonicalName":"AtomicSwap","contractDependencies":[],"contractKind":"contract","documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"295:217:9","text":" @title AtomicSwap\n @dev Implements atomic swap functionality with hashlock and timelock\n This is the core contract for cross-chain swaps between Ethereum and Aptos\n Supports both ETH and ERC-20 tokens"},"fullyImplemented":true,"id":1755,"linearizedBaseContracts":[1755,147,809,878],"name":"AtomicSwap","nameLocation":"522:10:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":908,"nodeType":"Block","src":"601:2:9","statements":[]},"id":909,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":904,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"589:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"593:6:9","memberName":"sender","nodeType":"MemberAccess","src":"589:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":906,"kind":"baseConstructorSpecifier","modifierName":{"id":903,"name":"Ownable","nameLocations":["581:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"581:7:9"},"nodeType":"ModifierInvocation","src":"581:19:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"578:2:9"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"601:0:9"},"scope":1755,"src":"567:36:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"global":false,"id":913,"libraryName":{"id":910,"name":"SafeERC20","nameLocations":["614:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"614:9:9"},"nodeType":"UsingForDirective","src":"608:27:9","typeName":{"id":912,"nodeType":"UserDefinedTypeName","pathNode":{"id":911,"name":"IERC20","nameLocations":["628:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"628:6:9"},"referencedDeclaration":315,"src":"628:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}},{"anonymous":false,"eventSelector":"f7fed894f2fc26a47c345a04b644fb954bf11c27c2eec80f3f7ffb2cb07ea742","id":927,"name":"SwapInitiated","nameLocation":"665:13:9","nodeType":"EventDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"indexed":true,"mutability":"mutable","name":"hashlock","nameLocation":"704:8:9","nodeType":"VariableDeclaration","scope":927,"src":"688:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"688:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":917,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"738:9:9","nodeType":"VariableDeclaration","scope":927,"src":"722:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":919,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"773:9:9","nodeType":"VariableDeclaration","scope":927,"src":"757:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":921,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"800:5:9","nodeType":"VariableDeclaration","scope":927,"src":"792:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"823:6:9","nodeType":"VariableDeclaration","scope":927,"src":"815:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":925,"indexed":false,"mutability":"mutable","name":"timelock","nameLocation":"847:8:9","nodeType":"VariableDeclaration","scope":927,"src":"839:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"678:183:9"},"src":"659:203:9"},{"anonymous":false,"eventSelector":"7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c87701","id":939,"name":"SwapCompleted","nameLocation":"878:13:9","nodeType":"EventDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"indexed":true,"mutability":"mutable","name":"hashlock","nameLocation":"917:8:9","nodeType":"VariableDeclaration","scope":939,"src":"901:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"901:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":931,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"951:9:9","nodeType":"VariableDeclaration","scope":939,"src":"935:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"978:5:9","nodeType":"VariableDeclaration","scope":939,"src":"970:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1001:6:9","nodeType":"VariableDeclaration","scope":939,"src":"993:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"1025:6:9","nodeType":"VariableDeclaration","scope":939,"src":"1017:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1017:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"891:146:9"},"src":"872:166:9"},{"anonymous":false,"eventSelector":"a19ac6ff80a8c71a18b3fd648fa480fa092eceb40ca2af1fadc2a1cc6e1baf7b","id":949,"name":"SwapRefunded","nameLocation":"1054:12:9","nodeType":"EventDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"indexed":true,"mutability":"mutable","name":"hashlock","nameLocation":"1092:8:9","nodeType":"VariableDeclaration","scope":949,"src":"1076:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1076:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":943,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"1126:9:9","nodeType":"VariableDeclaration","scope":949,"src":"1110:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1153:5:9","nodeType":"VariableDeclaration","scope":949,"src":"1145:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1176:6:9","nodeType":"VariableDeclaration","scope":949,"src":"1168:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1066:122:9"},"src":"1048:141:9"},{"canonicalName":"AtomicSwap.Swap","id":966,"members":[{"constant":false,"id":951,"mutability":"mutable","name":"hashlock","nameLocation":"1269:8:9","nodeType":"VariableDeclaration","scope":966,"src":"1261:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1261:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"timelock","nameLocation":"1324:8:9","nodeType":"VariableDeclaration","scope":966,"src":"1316:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"initiator","nameLocation":"1381:9:9","nodeType":"VariableDeclaration","scope":966,"src":"1373:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"recipient","nameLocation":"1449:9:9","nodeType":"VariableDeclaration","scope":966,"src":"1441:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"token","nameLocation":"1522:5:9","nodeType":"VariableDeclaration","scope":966,"src":"1514:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"amount","nameLocation":"1593:6:9","nodeType":"VariableDeclaration","scope":966,"src":"1585:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"completed","nameLocation":"1651:9:9","nodeType":"VariableDeclaration","scope":966,"src":"1646:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":962,"name":"bool","nodeType":"ElementaryTypeName","src":"1646:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"refunded","nameLocation":"1723:8:9","nodeType":"VariableDeclaration","scope":966,"src":"1718:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"1718:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Swap","nameLocation":"1246:4:9","nodeType":"StructDefinition","scope":1755,"src":"1239:547:9","visibility":"public"},{"constant":false,"functionSelector":"eb84e7f2","id":971,"mutability":"mutable","name":"swaps","nameLocation":"1873:5:9","nodeType":"VariableDeclaration","scope":1755,"src":"1841:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap)"},"typeName":{"id":970,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1849:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1841:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":969,"nodeType":"UserDefinedTypeName","pathNode":{"id":968,"name":"Swap","nameLocations":["1860:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":966,"src":"1860:4:9"},"referencedDeclaration":966,"src":"1860:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"}}},"visibility":"public"},{"constant":false,"functionSelector":"ffdfa6de","id":975,"mutability":"mutable","name":"hashlockUsed","nameLocation":"1973:12:9","nodeType":"VariableDeclaration","scope":1755,"src":"1941:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":974,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1949:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1941:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":973,"name":"bool","nodeType":"ElementaryTypeName","src":"1960:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":true,"functionSelector":"fb0c7549","id":978,"mutability":"constant","name":"MIN_TIMELOCK","nameLocation":"2062:12:9","nodeType":"VariableDeclaration","scope":1755,"src":"2038:46:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2038:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2077:7:9","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"94f1825b","id":981,"mutability":"constant","name":"MAX_TIMELOCK","nameLocation":"2161:12:9","nodeType":"VariableDeclaration","scope":1755,"src":"2137:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:6:9","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"errorSelector":"e9204a06","id":983,"name":"HashlockAlreadyUsed","nameLocation":"2213:19:9","nodeType":"ErrorDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"2232:2:9"},"src":"2207:28:9"},{"errorSelector":"5ec69df0","id":985,"name":"SwapNotFound","nameLocation":"2246:12:9","nodeType":"ErrorDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"2258:2:9"},"src":"2240:21:9"},{"errorSelector":"f6c66187","id":987,"name":"SwapAlreadyCompleted","nameLocation":"2272:20:9","nodeType":"ErrorDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"2292:2:9"},"src":"2266:29:9"},{"errorSelector":"a2640b27","id":989,"name":"SwapAlreadyRefunded","nameLocation":"2306:19:9","nodeType":"ErrorDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"2325:2:9"},"src":"2300:28:9"},{"errorSelector":"621e25c3","id":991,"name":"TimelockNotExpired","nameLocation":"2339:18:9","nodeType":"ErrorDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"2357:2:9"},"src":"2333:27:9"},{"errorSelector":"7a6fcaa6","id":993,"name":"TimelockExpired","nameLocation":"2371:15:9","nodeType":"ErrorDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"2386:2:9"},"src":"2365:24:9"},{"errorSelector":"abab6bd7","id":995,"name":"InvalidSecret","nameLocation":"2400:13:9","nodeType":"ErrorDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"2413:2:9"},"src":"2394:22:9"},{"errorSelector":"f8d10e82","id":997,"name":"InvalidTimelock","nameLocation":"2427:15:9","nodeType":"ErrorDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"2442:2:9"},"src":"2421:24:9"},{"errorSelector":"9c8d2cd2","id":999,"name":"InvalidRecipient","nameLocation":"2456:16:9","nodeType":"ErrorDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"2472:2:9"},"src":"2450:25:9"},{"errorSelector":"2c5211c6","id":1001,"name":"InvalidAmount","nameLocation":"2486:13:9","nodeType":"ErrorDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"2499:2:9"},"src":"2480:22:9"},{"errorSelector":"f4d678b8","id":1003,"name":"InsufficientBalance","nameLocation":"2513:19:9","nodeType":"ErrorDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"2532:2:9"},"src":"2507:28:9"},{"errorSelector":"90b8ec18","id":1005,"name":"TransferFailed","nameLocation":"2546:14:9","nodeType":"ErrorDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"2560:2:9"},"src":"2540:23:9"},{"body":{"id":1030,"nodeType":"Block","src":"3030:81:9","statements":[{"expression":{"arguments":[{"id":1020,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3054:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1021,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"3064:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1022,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"3074:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3093:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3085:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"3085:7:9","typeDescriptions":{}}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3085:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1027,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"3097:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1019,"name":"_initiateSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3040:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,address,address,uint256)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3040:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"3040:64:9"}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"2573:291:9","text":" @dev Initiates a new atomic swap with ETH\n @param hashlock The hash of the secret only (keccak256(secret))\n @param timelock The expiration timestamp\n @param recipient The address that will receive the tokens\n @param amount The amount of ETH to swap"},"functionSelector":"902d7236","id":1031,"implemented":true,"kind":"function","modifiers":[{"id":1017,"kind":"modifierInvocation","modifierName":{"id":1016,"name":"nonReentrant","nameLocations":["3017:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"3017:12:9"},"nodeType":"ModifierInvocation","src":"3017:12:9"}],"name":"initiateSwap","nameLocation":"2878:12:9","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"hashlock","nameLocation":"2908:8:9","nodeType":"VariableDeclaration","scope":1031,"src":"2900:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2900:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"timelock","nameLocation":"2934:8:9","nodeType":"VariableDeclaration","scope":1031,"src":"2926:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"recipient","nameLocation":"2960:9:9","nodeType":"VariableDeclaration","scope":1031,"src":"2952:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"amount","nameLocation":"2987:6:9","nodeType":"VariableDeclaration","scope":1031,"src":"2979:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2890:109:9"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"3030:0:9"},"scope":1755,"src":"2869:242:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1068,"nodeType":"Block","src":"3656:214:9","statements":[{"expression":{"arguments":[{"id":1048,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"3680:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1049,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"3690:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1050,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"3700:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"3711:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"3718:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1047,"name":"_initiateSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3666:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,address,address,uint256)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3666:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1054,"nodeType":"ExpressionStatement","src":"3666:59:9"},{"expression":{"arguments":[{"expression":{"id":1059,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3829:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3833:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3829:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1063,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3849:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_AtomicSwap_$1755","typeString":"contract AtomicSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AtomicSwap_$1755","typeString":"contract AtomicSwap"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3841:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"3841:7:9","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3841:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1065,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"3856:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1056,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"3805:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3798:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3798:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3812:16:9","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":387,"src":"3798:30:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3798:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"3798:65:9"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"3121:349:9","text":" @dev Initiates a new atomic swap with ERC-20 tokens\n @param hashlock The hash of the secret only (keccak256(secret))\n @param timelock The expiration timestamp\n @param recipient The address that will receive the tokens\n @param token The ERC-20 token address\n @param amount The amount of tokens to swap"},"functionSelector":"dd781188","id":1069,"implemented":true,"kind":"function","modifiers":[{"id":1045,"kind":"modifierInvocation","modifierName":{"id":1044,"name":"nonReentrant","nameLocations":["3643:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"3643:12:9"},"nodeType":"ModifierInvocation","src":"3643:12:9"}],"name":"initiateTokenSwap","nameLocation":"3484:17:9","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"hashlock","nameLocation":"3519:8:9","nodeType":"VariableDeclaration","scope":1069,"src":"3511:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3511:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"timelock","nameLocation":"3545:8:9","nodeType":"VariableDeclaration","scope":1069,"src":"3537:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"3537:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"recipient","nameLocation":"3571:9:9","nodeType":"VariableDeclaration","scope":1069,"src":"3563:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"token","nameLocation":"3598:5:9","nodeType":"VariableDeclaration","scope":1069,"src":"3590:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"3590:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"amount","nameLocation":"3621:6:9","nodeType":"VariableDeclaration","scope":1069,"src":"3613:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3613:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3501:132:9"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"3656:0:9"},"scope":1755,"src":"3475:395:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1199,"nodeType":"Block","src":"4377:1304:9","statements":[{"condition":{"baseExpression":{"id":1083,"name":"hashlockUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"4391:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1085,"indexExpression":{"id":1084,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4404:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4391:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1090,"nodeType":"IfStatement","src":"4387:81:9","trueBody":{"id":1089,"nodeType":"Block","src":"4415:53:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1086,"name":"HashlockAlreadyUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"4436:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4436:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"RevertStatement","src":"4429:28:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4490:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1092,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4501:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4507:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"4501:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1094,"name":"MIN_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4519:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4501:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4490:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4535:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1098,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4546:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4552:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"4546:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1100,"name":"MAX_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"4564:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4546:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4535:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4490:86:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1108,"nodeType":"IfStatement","src":"4486:141:9","trueBody":{"id":1107,"nodeType":"Block","src":"4578:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1104,"name":"InvalidTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"4599:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4599:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"RevertStatement","src":"4592:24:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"4649:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4670:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4662:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"4662:7:9","typeDescriptions":{}}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4662:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4649:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"IfStatement","src":"4645:79:9","trueBody":{"id":1118,"nodeType":"Block","src":"4674:50:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1115,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"4695:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"RevertStatement","src":"4688:25:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4746:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4756:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4746:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1127,"nodeType":"IfStatement","src":"4742:64:9","trueBody":{"id":1126,"nodeType":"Block","src":"4759:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1123,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4780:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4780:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"RevertStatement","src":"4773:22:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4889:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4906:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4898:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"4898:7:9","typeDescriptions":{}}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4889:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1144,"nodeType":"IfStatement","src":"4885:129:9","trueBody":{"id":1143,"nodeType":"Block","src":"4910:104:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4928:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4932:5:9","memberName":"value","nodeType":"MemberAccess","src":"4928:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1136,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4941:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"IfStatement","src":"4924:80:9","trueBody":{"id":1141,"nodeType":"Block","src":"4949:55:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1138,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4974:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4974:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"RevertStatement","src":"4967:22:9"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5077:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5094:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5086:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"5086:7:9","typeDescriptions":{}}},"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5086:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5077:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"5073:160:9","trueBody":{"id":1165,"nodeType":"Block","src":"5098:135:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5140:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5144:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5140:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1152,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5123:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1151,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5116:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5130:9:9","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":272,"src":"5116:23:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1158,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5154:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5116:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"5112:111:9","trueBody":{"id":1163,"nodeType":"Block","src":"5162:61:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1160,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"5187:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"RevertStatement","src":"5180:28:9"}]}}]}},{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"5251:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1169,"indexExpression":{"id":1168,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5257:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5251:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1171,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5298:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1172,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"5330:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5363:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5367:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5363:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5398:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5428:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5486:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5515:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1170,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5269:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Swap_$966_storage_ptr_$","typeString":"type(struct AtomicSwap.Swap storage pointer)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5288:8:9","5320:8:9","5352:9:9","5387:9:9","5421:5:9","5447:6:9","5475:9:9","5505:8:9"],"names":["hashlock","timelock","initiator","recipient","token","amount","completed","refunded"],"nodeType":"FunctionCall","src":"5269:262:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_memory_ptr","typeString":"struct AtomicSwap.Swap memory"}},"src":"5251:280:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"5251:280:9"},{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1183,"name":"hashlockUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"5550:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1185,"indexExpression":{"id":1184,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5563:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5550:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5575:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5550:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1188,"nodeType":"ExpressionStatement","src":"5550:29:9"},{"eventCall":{"arguments":[{"id":1190,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5617:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5627:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5631:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5627:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5639:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1194,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5650:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5657:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1196,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"5665:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"SwapInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5603:13:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5603:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"EmitStatement","src":"5598:76:9"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"3880:328:9","text":" @dev Internal function to initiate a swap\n @param hashlock The hash of the secret\n @param timelock The expiration timestamp\n @param recipient The address that will receive the tokens\n @param token The token address (address(0) for ETH)\n @param amount The amount of tokens to swap"},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_initiateSwap","nameLocation":"4222:13:9","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"hashlock","nameLocation":"4253:8:9","nodeType":"VariableDeclaration","scope":1200,"src":"4245:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"timelock","nameLocation":"4279:8:9","nodeType":"VariableDeclaration","scope":1200,"src":"4271:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"recipient","nameLocation":"4305:9:9","nodeType":"VariableDeclaration","scope":1200,"src":"4297:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"token","nameLocation":"4332:5:9","nodeType":"VariableDeclaration","scope":1200,"src":"4324:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"4324:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"amount","nameLocation":"4355:6:9","nodeType":"VariableDeclaration","scope":1200,"src":"4347:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"4347:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4235:132:9"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[],"src":"4377:0:9"},"scope":1755,"src":"4213:1468:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1322,"nodeType":"Block","src":"5944:1256:9","statements":[{"assignments":[1212],"declarations":[{"constant":false,"id":1212,"mutability":"mutable","name":"swap","nameLocation":"5967:4:9","nodeType":"VariableDeclaration","scope":1322,"src":"5954:17:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1211,"nodeType":"UserDefinedTypeName","pathNode":{"id":1210,"name":"Swap","nameLocations":["5954:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":966,"src":"5954:4:9"},"referencedDeclaration":966,"src":"5954:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1216,"initialValue":{"baseExpression":{"id":1213,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"5974:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1215,"indexExpression":{"id":1214,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5980:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5974:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5954:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1217,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6012:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6017:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"6012:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6038:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6030:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"6030:7:9","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6030:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6012:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1228,"nodeType":"IfStatement","src":"6008:80:9","trueBody":{"id":1227,"nodeType":"Block","src":"6042:46:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1224,"name":"SwapNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6063:12:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6063:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"RevertStatement","src":"6056:21:9"}]}},{"condition":{"expression":{"id":1229,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6110:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6115:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"6110:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"IfStatement","src":"6106:74:9","trueBody":{"id":1234,"nodeType":"Block","src":"6126:54:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1231,"name":"SwapAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6147:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1233,"nodeType":"RevertStatement","src":"6140:29:9"}]}},{"condition":{"expression":{"id":1236,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6202:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6207:8:9","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":965,"src":"6202:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1242,"nodeType":"IfStatement","src":"6198:72:9","trueBody":{"id":1241,"nodeType":"Block","src":"6217:53:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1238,"name":"SwapAlreadyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"6238:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6238:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"RevertStatement","src":"6231:28:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1243,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6292:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6298:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6292:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1245,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6311:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6316:8:9","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":953,"src":"6311:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6292:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"6288:87:9","trueBody":{"id":1251,"nodeType":"Block","src":"6326:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1248,"name":"TimelockExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6347:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"RevertStatement","src":"6340:24:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1256,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"6495:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1254,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6478:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6482:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"6478:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6478:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1253,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6468:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6468:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1259,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"6507:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6468:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1265,"nodeType":"IfStatement","src":"6464:100:9","trueBody":{"id":1264,"nodeType":"Block","src":"6517:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1261,"name":"InvalidSecret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6538:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6538:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1263,"nodeType":"RevertStatement","src":"6531:22:9"}]}},{"expression":{"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1266,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6668:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6673:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"6668:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6685:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6668:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1271,"nodeType":"ExpressionStatement","src":"6668:21:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1272,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6752:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6757:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"6752:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6766:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"6766:7:9","typeDescriptions":{}}},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6752:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1309,"nodeType":"Block","src":"6982:116:9","statements":[{"expression":{"arguments":[{"expression":{"id":1303,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7059:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7064:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"7059:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1305,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7075:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7080:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"7075:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1299,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7034:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"7034:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1298,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7027:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7027:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7046:12:9","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"7027:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7027:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"7027:60:9"}]},"id":1310,"nodeType":"IfStatement","src":"6748:350:9","trueBody":{"id":1297,"nodeType":"Block","src":"6778:198:9","statements":[{"assignments":[1280,null],"declarations":[{"constant":false,"id":1280,"mutability":"mutable","name":"success","nameLocation":"6826:7:9","nodeType":"VariableDeclaration","scope":1297,"src":"6821:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"6821:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1289,"initialValue":{"arguments":[{"hexValue":"","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6879:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1281,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6839:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6844:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"6839:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6854:4:9","memberName":"call","nodeType":"MemberAccess","src":"6839:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1284,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"6866:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6871:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"6866:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6839:39:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6839:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6820:62:9"},{"condition":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6900:8:9","subExpression":{"id":1290,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6901:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1296,"nodeType":"IfStatement","src":"6896:70:9","trueBody":{"id":1295,"nodeType":"Block","src":"6910:56:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1292,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6935:14:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"RevertStatement","src":"6928:23:9"}]}}]}},{"eventCall":{"arguments":[{"id":1312,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"7135:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1313,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7145:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7150:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"7145:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1315,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7161:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7166:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"7161:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1317,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7173:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7178:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"7173:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1319,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"7186:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1311,"name":"SwapCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7121:13:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,uint256,bytes32)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7121:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1321,"nodeType":"EmitStatement","src":"7116:77:9"}]},"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"5691:170:9","text":" @dev Completes a swap by providing the secret\n @param hashlock The hash of the secret\n @param secret The secret that generates the hashlock"},"functionSelector":"78dc3356","id":1323,"implemented":true,"kind":"function","modifiers":[{"id":1208,"kind":"modifierInvocation","modifierName":{"id":1207,"name":"nonReentrant","nameLocations":["5931:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"5931:12:9"},"nodeType":"ModifierInvocation","src":"5931:12:9"}],"name":"completeSwap","nameLocation":"5875:12:9","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"hashlock","nameLocation":"5896:8:9","nodeType":"VariableDeclaration","scope":1323,"src":"5888:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5888:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"secret","nameLocation":"5914:6:9","nodeType":"VariableDeclaration","scope":1323,"src":"5906:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5906:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5887:34:9"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[],"src":"5944:0:9"},"scope":1755,"src":"5866:1334:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1465,"nodeType":"Block","src":"7587:1534:9","statements":[{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"swap","nameLocation":"7610:4:9","nodeType":"VariableDeclaration","scope":1465,"src":"7597:17:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"Swap","nameLocations":["7597:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":966,"src":"7597:4:9"},"referencedDeclaration":966,"src":"7597:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1339,"initialValue":{"baseExpression":{"id":1336,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7617:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1338,"indexExpression":{"id":1337,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"7623:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7617:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7597:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1340,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7655:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7660:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"7655:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7681:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7673:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"7673:7:9","typeDescriptions":{}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7673:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7655:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"IfStatement","src":"7651:80:9","trueBody":{"id":1350,"nodeType":"Block","src":"7685:46:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1347,"name":"SwapNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"7706:12:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7706:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"RevertStatement","src":"7699:21:9"}]}},{"condition":{"expression":{"id":1352,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7753:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7758:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"7753:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"7749:74:9","trueBody":{"id":1357,"nodeType":"Block","src":"7769:54:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1354,"name":"SwapAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"7790:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"7783:29:9"}]}},{"condition":{"expression":{"id":1359,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7845:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7850:8:9","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":965,"src":"7845:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1365,"nodeType":"IfStatement","src":"7841:72:9","trueBody":{"id":1364,"nodeType":"Block","src":"7860:53:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1361,"name":"SwapAlreadyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"7881:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1363,"nodeType":"RevertStatement","src":"7874:28:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1366,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7935:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7941:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"7935:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1368,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7954:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7959:8:9","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":953,"src":"7954:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7935:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1375,"nodeType":"IfStatement","src":"7931:87:9","trueBody":{"id":1374,"nodeType":"Block","src":"7969:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1371,"name":"TimelockExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7990:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7990:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"RevertStatement","src":"7983:24:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1379,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"8138:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1377,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8121:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8125:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"8121:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1376,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8111:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8111:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1382,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"8150:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8111:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1388,"nodeType":"IfStatement","src":"8107:100:9","trueBody":{"id":1387,"nodeType":"Block","src":"8160:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1384,"name":"InvalidSecret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"8181:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8181:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"RevertStatement","src":"8174:22:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8287:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8287:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1391,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8301:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8306:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"8301:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8287:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1398,"nodeType":"IfStatement","src":"8283:84:9","trueBody":{"id":1397,"nodeType":"Block","src":"8317:50:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1394,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"8338:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8338:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"RevertStatement","src":"8331:25:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8466:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8470:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8466:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1401,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8480:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8485:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"8480:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8466:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1408,"nodeType":"IfStatement","src":"8462:84:9","trueBody":{"id":1407,"nodeType":"Block","src":"8496:50:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1404,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"8517:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1406,"nodeType":"RevertStatement","src":"8510:25:9"}]}},{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1409,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8564:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8569:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"8564:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8581:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8564:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1414,"nodeType":"ExpressionStatement","src":"8564:21:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1415,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8673:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8678:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"8673:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8687:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"8687:7:9","typeDescriptions":{}}},"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8687:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8673:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1452,"nodeType":"Block","src":"8903:116:9","statements":[{"expression":{"arguments":[{"expression":{"id":1446,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8980:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8985:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"8980:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1448,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8996:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9001:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"8996:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1442,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8955:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8960:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"8955:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1441,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"8948:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8948:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8967:12:9","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"8948:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8948:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"8948:60:9"}]},"id":1453,"nodeType":"IfStatement","src":"8669:350:9","trueBody":{"id":1440,"nodeType":"Block","src":"8699:198:9","statements":[{"assignments":[1423,null],"declarations":[{"constant":false,"id":1423,"mutability":"mutable","name":"success","nameLocation":"8747:7:9","nodeType":"VariableDeclaration","scope":1440,"src":"8742:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1422,"name":"bool","nodeType":"ElementaryTypeName","src":"8742:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1432,"initialValue":{"arguments":[{"hexValue":"","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8800:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1424,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8760:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8765:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"8760:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8775:4:9","memberName":"call","nodeType":"MemberAccess","src":"8760:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1427,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8787:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8792:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"8787:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8760:39:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8760:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8741:62:9"},{"condition":{"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8821:8:9","subExpression":{"id":1433,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"8822:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1439,"nodeType":"IfStatement","src":"8817:70:9","trueBody":{"id":1438,"nodeType":"Block","src":"8831:56:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1435,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8856:14:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8856:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"RevertStatement","src":"8849:23:9"}]}}]}},{"eventCall":{"arguments":[{"id":1455,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"9056:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1456,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"9066:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9071:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"9066:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1458,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"9082:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9087:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"9082:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1460,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"9094:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9099:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"9094:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1462,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"9107:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1454,"name":"SwapCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9042:13:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,uint256,bytes32)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9042:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"EmitStatement","src":"9037:77:9"}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"7206:287:9","text":" @dev Completes a swap by the initiator (for cross-chain atomic swaps)\n This allows the initiator to complete their own swap when they are also the recipient\n @param hashlock The hash of the secret\n @param secret The secret that generates the hashlock"},"functionSelector":"47899a0b","id":1466,"implemented":true,"kind":"function","modifiers":[{"id":1331,"kind":"modifierInvocation","modifierName":{"id":1330,"name":"nonReentrant","nameLocations":["7574:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"7574:12:9"},"nodeType":"ModifierInvocation","src":"7574:12:9"}],"name":"completeSwapAsInitiator","nameLocation":"7507:23:9","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"hashlock","nameLocation":"7539:8:9","nodeType":"VariableDeclaration","scope":1466,"src":"7531:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7531:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"secret","nameLocation":"7557:6:9","nodeType":"VariableDeclaration","scope":1466,"src":"7549:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7549:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7530:34:9"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"7587:0:9"},"scope":1755,"src":"7498:1623:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1582,"nodeType":"Block","src":"9307:1121:9","statements":[{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"swap","nameLocation":"9330:4:9","nodeType":"VariableDeclaration","scope":1582,"src":"9317:17:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1475,"nodeType":"UserDefinedTypeName","pathNode":{"id":1474,"name":"Swap","nameLocations":["9317:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":966,"src":"9317:4:9"},"referencedDeclaration":966,"src":"9317:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1480,"initialValue":{"baseExpression":{"id":1477,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"9337:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1479,"indexExpression":{"id":1478,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9343:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9337:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9317:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1481,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9375:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9380:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"9375:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9401:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9393:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"9393:7:9","typeDescriptions":{}}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9393:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9375:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1492,"nodeType":"IfStatement","src":"9371:80:9","trueBody":{"id":1491,"nodeType":"Block","src":"9405:46:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1488,"name":"SwapNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"9426:12:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9426:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1490,"nodeType":"RevertStatement","src":"9419:21:9"}]}},{"condition":{"expression":{"id":1493,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9473:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9478:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"9473:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1499,"nodeType":"IfStatement","src":"9469:74:9","trueBody":{"id":1498,"nodeType":"Block","src":"9489:54:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1495,"name":"SwapAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9510:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9510:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1497,"nodeType":"RevertStatement","src":"9503:29:9"}]}},{"condition":{"expression":{"id":1500,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9565:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9570:8:9","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":965,"src":"9565:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"IfStatement","src":"9561:72:9","trueBody":{"id":1505,"nodeType":"Block","src":"9580:53:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1502,"name":"SwapAlreadyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"9601:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9601:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1504,"nodeType":"RevertStatement","src":"9594:28:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1507,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9655:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9661:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"9655:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1509,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9673:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9678:8:9","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":953,"src":"9673:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9655:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1516,"nodeType":"IfStatement","src":"9651:89:9","trueBody":{"id":1515,"nodeType":"Block","src":"9688:52:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1512,"name":"TimelockNotExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"9709:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9709:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"RevertStatement","src":"9702:27:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9803:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9807:6:9","memberName":"sender","nodeType":"MemberAccess","src":"9803:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1519,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9817:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9822:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"9817:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9803:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"IfStatement","src":"9799:84:9","trueBody":{"id":1525,"nodeType":"Block","src":"9833:50:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1522,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"9854:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9854:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"9847:25:9"}]}},{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1527,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9901:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9906:8:9","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":965,"src":"9901:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9917:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9901:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"nodeType":"ExpressionStatement","src":"9901:20:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1533,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"9989:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9994:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"9989:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10003:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"10003:7:9","typeDescriptions":{}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10003:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9989:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1570,"nodeType":"Block","src":"10219:116:9","statements":[{"expression":{"arguments":[{"expression":{"id":1564,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10296:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10301:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"10296:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1566,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10312:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10317:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"10312:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1560,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10271:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10276:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"10271:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1559,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"10264:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10264:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10283:12:9","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"10264:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10264:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"ExpressionStatement","src":"10264:60:9"}]},"id":1571,"nodeType":"IfStatement","src":"9985:350:9","trueBody":{"id":1558,"nodeType":"Block","src":"10015:198:9","statements":[{"assignments":[1541,null],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"success","nameLocation":"10063:7:9","nodeType":"VariableDeclaration","scope":1558,"src":"10058:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1540,"name":"bool","nodeType":"ElementaryTypeName","src":"10058:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1550,"initialValue":{"arguments":[{"hexValue":"","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10116:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1542,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10076:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10081:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"10076:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10091:4:9","memberName":"call","nodeType":"MemberAccess","src":"10076:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1545,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10103:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10108:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"10103:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10076:39:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10076:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10057:62:9"},{"condition":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10137:8:9","subExpression":{"id":1551,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"10138:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1557,"nodeType":"IfStatement","src":"10133:70:9","trueBody":{"id":1556,"nodeType":"Block","src":"10147:56:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1553,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10172:14:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10172:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"RevertStatement","src":"10165:23:9"}]}}]}},{"eventCall":{"arguments":[{"id":1573,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"10371:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1574,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10381:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10386:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"10381:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1576,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10397:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10402:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"10397:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1578,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10409:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10414:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"10409:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1572,"name":"SwapRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10358:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10358:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"EmitStatement","src":"10353:68:9"}]},"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"9131:111:9","text":" @dev Refunds a swap after the timelock expires\n @param hashlock The hash of the secret"},"functionSelector":"fe2510ee","id":1583,"implemented":true,"kind":"function","modifiers":[{"id":1472,"kind":"modifierInvocation","modifierName":{"id":1471,"name":"nonReentrant","nameLocations":["9294:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"9294:12:9"},"nodeType":"ModifierInvocation","src":"9294:12:9"}],"name":"refundSwap","nameLocation":"9256:10:9","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"hashlock","nameLocation":"9275:8:9","nodeType":"VariableDeclaration","scope":1583,"src":"9267:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9267:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9266:18:9"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"9307:0:9"},"scope":1755,"src":"9247:1181:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1621,"nodeType":"Block","src":"10668:233:9","statements":[{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"swap","nameLocation":"10691:4:9","nodeType":"VariableDeclaration","scope":1621,"src":"10678:17:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1592,"nodeType":"UserDefinedTypeName","pathNode":{"id":1591,"name":"Swap","nameLocations":["10678:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":966,"src":"10678:4:9"},"referencedDeclaration":966,"src":"10678:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1597,"initialValue":{"baseExpression":{"id":1594,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"10698:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1596,"indexExpression":{"id":1595,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"10704:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10698:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10678:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1598,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"10736:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10741:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"10736:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10762:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10754:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"10754:7:9","typeDescriptions":{}}},"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10754:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10736:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":1605,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"10768:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10773:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"10768:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10736:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":1608,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"10786:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10791:8:9","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":965,"src":"10786:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10736:63:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1614,"nodeType":"IfStatement","src":"10732:106:9","trueBody":{"id":1613,"nodeType":"Block","src":"10801:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10822:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1590,"id":1612,"nodeType":"Return","src":"10815:12:9"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1615,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10863:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10869:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"10863:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1617,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"10881:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10886:8:9","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":953,"src":"10881:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10863:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1590,"id":1620,"nodeType":"Return","src":"10856:38:9"}]},"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"10438:157:9","text":" @dev Checks if a swap can be completed\n @param hashlock The hash of the secret\n @return bool True if the swap can be completed"},"functionSelector":"f4611fae","id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"canComplete","nameLocation":"10609:11:9","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"hashlock","nameLocation":"10629:8:9","nodeType":"VariableDeclaration","scope":1622,"src":"10621:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10621:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10620:18:9"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1622,"src":"10662:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1588,"name":"bool","nodeType":"ElementaryTypeName","src":"10662:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10661:6:9"},"scope":1755,"src":"10600:301:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1660,"nodeType":"Block","src":"11137:234:9","statements":[{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"swap","nameLocation":"11160:4:9","nodeType":"VariableDeclaration","scope":1660,"src":"11147:17:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1631,"nodeType":"UserDefinedTypeName","pathNode":{"id":1630,"name":"Swap","nameLocations":["11147:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":966,"src":"11147:4:9"},"referencedDeclaration":966,"src":"11147:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1636,"initialValue":{"baseExpression":{"id":1633,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11167:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1635,"indexExpression":{"id":1634,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"11173:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11167:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11147:35:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1637,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11205:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11210:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"11205:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11223:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"11223:7:9","typeDescriptions":{}}},"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11223:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11205:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":1644,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11237:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11242:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"11237:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11205:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":1647,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11255:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11260:8:9","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":965,"src":"11255:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11205:63:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"11201:106:9","trueBody":{"id":1652,"nodeType":"Block","src":"11270:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11291:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1629,"id":1651,"nodeType":"Return","src":"11284:12:9"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1654,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11332:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11338:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"11332:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1656,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11351:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11356:8:9","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":953,"src":"11351:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11332:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1629,"id":1659,"nodeType":"Return","src":"11325:39:9"}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"10911:155:9","text":" @dev Checks if a swap can be refunded\n @param hashlock The hash of the secret\n @return bool True if the swap can be refunded"},"functionSelector":"8c8c2003","id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"canRefund","nameLocation":"11080:9:9","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"hashlock","nameLocation":"11098:8:9","nodeType":"VariableDeclaration","scope":1661,"src":"11090:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11090:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11089:18:9"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1661,"src":"11131:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1627,"name":"bool","nodeType":"ElementaryTypeName","src":"11131:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11130:6:9"},"scope":1755,"src":"11071:300:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1704,"nodeType":"Block","src":"12098:266:9","statements":[{"assignments":[1683],"declarations":[{"constant":false,"id":1683,"mutability":"mutable","name":"swap","nameLocation":"12121:4:9","nodeType":"VariableDeclaration","scope":1704,"src":"12108:17:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1682,"nodeType":"UserDefinedTypeName","pathNode":{"id":1681,"name":"Swap","nameLocations":["12108:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":966,"src":"12108:4:9"},"referencedDeclaration":966,"src":"12108:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1687,"initialValue":{"baseExpression":{"id":1684,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"12128:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$966_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1686,"indexExpression":{"id":1685,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"12134:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12128:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12108:35:9"},{"expression":{"components":[{"expression":{"id":1688,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12174:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12179:9:9","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":955,"src":"12174:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1690,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12202:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12207:9:9","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":957,"src":"12202:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1692,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12230:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12235:5:9","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":959,"src":"12230:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1694,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12254:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12259:6:9","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":961,"src":"12254:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1696,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12279:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12284:8:9","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":953,"src":"12279:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1698,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12306:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12311:9:9","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":963,"src":"12306:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1700,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12334:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$966_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12339:8:9","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":965,"src":"12334:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12160:197:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$","typeString":"tuple(address,address,address,uint256,uint256,bool,bool)"}},"functionReturnParameters":1680,"id":1703,"nodeType":"Return","src":"12153:204:9"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"11381:474:9","text":" @dev Gets the details of a swap\n @param hashlock The hash of the secret\n @return initiator The address that initiated the swap\n @return recipient The address that will receive the tokens\n @return token The token address\n @return amount The amount of tokens\n @return timelock The expiration timestamp\n @return completed Whether the swap has been completed\n @return refunded Whether the swap has been refunded"},"functionSelector":"3da0e66e","id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"getSwap","nameLocation":"11869:7:9","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"hashlock","nameLocation":"11885:8:9","nodeType":"VariableDeclaration","scope":1705,"src":"11877:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11877:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11876:18:9"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"initiator","nameLocation":"11935:9:9","nodeType":"VariableDeclaration","scope":1705,"src":"11927:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"11927:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"recipient","nameLocation":"11962:9:9","nodeType":"VariableDeclaration","scope":1705,"src":"11954:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"11954:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"token","nameLocation":"11989:5:9","nodeType":"VariableDeclaration","scope":1705,"src":"11981:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"11981:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"amount","nameLocation":"12012:6:9","nodeType":"VariableDeclaration","scope":1705,"src":"12004:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"12004:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"timelock","nameLocation":"12036:8:9","nodeType":"VariableDeclaration","scope":1705,"src":"12028:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"12028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"completed","nameLocation":"12059:9:9","nodeType":"VariableDeclaration","scope":1705,"src":"12054:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1676,"name":"bool","nodeType":"ElementaryTypeName","src":"12054:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"refunded","nameLocation":"12083:8:9","nodeType":"VariableDeclaration","scope":1705,"src":"12078:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"12078:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11917:180:9"},"scope":1755,"src":"11860:504:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1748,"nodeType":"Block","src":"12636:243:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"12650:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12667:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12659:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"12659:7:9","typeDescriptions":{}}},"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12650:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1746,"nodeType":"Block","src":"12805:68:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1741,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12846:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12846:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1743,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"12855:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1738,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"12826:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1737,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"12819:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12819:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12833:12:9","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"12819:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12819:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1745,"nodeType":"ExpressionStatement","src":"12819:43:9"}]},"id":1747,"nodeType":"IfStatement","src":"12646:227:9","trueBody":{"id":1736,"nodeType":"Block","src":"12671:128:9","statements":[{"assignments":[1722,null],"declarations":[{"constant":false,"id":1722,"mutability":"mutable","name":"success","nameLocation":"12691:7:9","nodeType":"VariableDeclaration","scope":1736,"src":"12686:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1721,"name":"bool","nodeType":"ElementaryTypeName","src":"12686:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1730,"initialValue":{"arguments":[{"hexValue":"","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12732:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1723,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12704:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12704:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12712:4:9","memberName":"call","nodeType":"MemberAccess","src":"12704:12:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"12724:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12704:27:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12704:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12685:50:9"},{"expression":{"arguments":[{"id":1732,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"12757:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12766:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":1731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12749:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12749:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"ExpressionStatement","src":"12749:39:9"}]}}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"12374:180:9","text":" @dev Allows the owner to withdraw any stuck tokens (emergency only)\n @param token The token address to withdraw\n @param amount The amount to withdraw"},"functionSelector":"95ccea67","id":1749,"implemented":true,"kind":"function","modifiers":[{"id":1713,"kind":"modifierInvocation","modifierName":{"id":1712,"name":"onlyOwner","nameLocations":["12626:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12626:9:9"},"nodeType":"ModifierInvocation","src":"12626:9:9"}],"name":"emergencyWithdraw","nameLocation":"12568:17:9","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"token","nameLocation":"12594:5:9","nodeType":"VariableDeclaration","scope":1749,"src":"12586:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"12586:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"amount","nameLocation":"12609:6:9","nodeType":"VariableDeclaration","scope":1749,"src":"12601:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"12601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12585:31:9"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[],"src":"12636:0:9"},"scope":1755,"src":"12559:320:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1753,"nodeType":"Block","src":"12979:2:9","statements":[]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"12889:58:9","text":" @dev Allows the contract to receive ETH"},"id":1754,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"12959:2:9"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[],"src":"12979:0:9"},"scope":1755,"src":"12952:29:9","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1756,"src":"513:12470:9","usedErrors":[13,18,327,823,983,985,987,989,991,993,995,997,999,1001,1003,1005],"usedEvents":[24,927,939,949]}],"src":"32:12952:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220863d87b35fe8bddf79fb3b3121870f527cb1b4ce2bd866cf7ef1804094e8b28264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 RETURNDATASIZE DUP8 0xB3 PUSH0 0xE8 0xBD 0xDF PUSH26 0xFB3B3121870F527CB1B4CE2BD866CF7EF1804094E8B28264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220863d87b35fe8bddf79fb3b3121870f527cb1b4ce2bd866cf7ef1804094e8b28264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 RETURNDATASIZE DUP8 0xB3 PUSH0 0xE8 0xBD 0xDF PUSH26 0xFB3B3121870F527CB1B4CE2BD866CF7EF1804094E8B28264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"698:9376:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"contracts/AtomicSwap.sol":{"AtomicSwap":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"HashlockAlreadyUsed","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidRecipient","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidTimelock","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"SwapAlreadyCompleted","type":"error"},{"inputs":[],"name":"SwapAlreadyRefunded","type":"error"},{"inputs":[],"name":"SwapNotFound","type":"error"},{"inputs":[],"name":"TimelockExpired","type":"error"},{"inputs":[],"name":"TimelockNotExpired","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"SwapCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timelock","type":"uint256"}],"name":"SwapInitiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SwapRefunded","type":"event"},{"inputs":[],"name":"MAX_TIMELOCK","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_TIMELOCK","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"canComplete","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"canRefund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"completeSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"completeSwapAsInitiator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"getSwap","outputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"bool","name":"refunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"hashlockUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"initiateSwap","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"initiateTokenSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"refundSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"swaps","outputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"bool","name":"refunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_831":{"entryPoint":null,"id":831,"parameterSlots":0,"returnSlots":0},"@_909":{"entryPoint":null,"id":909,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":168,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":418,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":435,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":398,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":366,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:590:10","nodeType":"YulBlock","src":"0:590:10","statements":[{"body":{"nativeSrc":"52:81:10","nodeType":"YulBlock","src":"52:81:10","statements":[{"nativeSrc":"62:65:10","nodeType":"YulAssignment","src":"62:65:10","value":{"arguments":[{"name":"value","nativeSrc":"77:5:10","nodeType":"YulIdentifier","src":"77:5:10"},{"kind":"number","nativeSrc":"84:42:10","nodeType":"YulLiteral","src":"84:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:10","nodeType":"YulIdentifier","src":"73:3:10"},"nativeSrc":"73:54:10","nodeType":"YulFunctionCall","src":"73:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:10","nodeType":"YulIdentifier","src":"62:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:10","nodeType":"YulTypedName","src":"34:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:10","nodeType":"YulTypedName","src":"44:7:10","type":""}],"src":"7:126:10"},{"body":{"nativeSrc":"184:51:10","nodeType":"YulBlock","src":"184:51:10","statements":[{"nativeSrc":"194:35:10","nodeType":"YulAssignment","src":"194:35:10","value":{"arguments":[{"name":"value","nativeSrc":"223:5:10","nodeType":"YulIdentifier","src":"223:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:10","nodeType":"YulIdentifier","src":"205:17:10"},"nativeSrc":"205:24:10","nodeType":"YulFunctionCall","src":"205:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:10","nodeType":"YulIdentifier","src":"194:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:10","nodeType":"YulTypedName","src":"166:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:10","nodeType":"YulTypedName","src":"176:7:10","type":""}],"src":"139:96:10"},{"body":{"nativeSrc":"306:53:10","nodeType":"YulBlock","src":"306:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:10","nodeType":"YulIdentifier","src":"323:3:10"},{"arguments":[{"name":"value","nativeSrc":"346:5:10","nodeType":"YulIdentifier","src":"346:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:10","nodeType":"YulIdentifier","src":"328:17:10"},"nativeSrc":"328:24:10","nodeType":"YulFunctionCall","src":"328:24:10"}],"functionName":{"name":"mstore","nativeSrc":"316:6:10","nodeType":"YulIdentifier","src":"316:6:10"},"nativeSrc":"316:37:10","nodeType":"YulFunctionCall","src":"316:37:10"},"nativeSrc":"316:37:10","nodeType":"YulExpressionStatement","src":"316:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:10","nodeType":"YulTypedName","src":"294:5:10","type":""},{"name":"pos","nativeSrc":"301:3:10","nodeType":"YulTypedName","src":"301:3:10","type":""}],"src":"241:118:10"},{"body":{"nativeSrc":"463:124:10","nodeType":"YulBlock","src":"463:124:10","statements":[{"nativeSrc":"473:26:10","nodeType":"YulAssignment","src":"473:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:10","nodeType":"YulIdentifier","src":"485:9:10"},{"kind":"number","nativeSrc":"496:2:10","nodeType":"YulLiteral","src":"496:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:10","nodeType":"YulIdentifier","src":"481:3:10"},"nativeSrc":"481:18:10","nodeType":"YulFunctionCall","src":"481:18:10"},"variableNames":[{"name":"tail","nativeSrc":"473:4:10","nodeType":"YulIdentifier","src":"473:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:10","nodeType":"YulIdentifier","src":"553:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:10","nodeType":"YulIdentifier","src":"566:9:10"},{"kind":"number","nativeSrc":"577:1:10","nodeType":"YulLiteral","src":"577:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:10","nodeType":"YulIdentifier","src":"562:3:10"},"nativeSrc":"562:17:10","nodeType":"YulFunctionCall","src":"562:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:10","nodeType":"YulIdentifier","src":"509:43:10"},"nativeSrc":"509:71:10","nodeType":"YulFunctionCall","src":"509:71:10"},"nativeSrc":"509:71:10","nodeType":"YulExpressionStatement","src":"509:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:10","nodeType":"YulTypedName","src":"435:9:10","type":""},{"name":"value0","nativeSrc":"447:6:10","nodeType":"YulTypedName","src":"447:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:10","nodeType":"YulTypedName","src":"458:4:10","type":""}],"src":"365:222:10"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000905760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000879190620001b3565b60405180910390fd5b620000a181620000a860201b60201c565b50620001d0565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019b826200016e565b9050919050565b620001ad816200018e565b82525050565b6000602082019050620001ca6000830184620001a2565b92915050565b6126a580620001e06000396000f3fe6080604052600436106100f75760003560e01c806395ccea671161008a578063f4611fae11610059578063f4611fae1461031d578063fb0c75491461035a578063fe2510ee14610385578063ffdfa6de146103ae576100fe565b806395ccea671461025e578063dd78118814610287578063eb84e7f2146102b0578063f2fde38b146102f4576100fe565b80638c8c2003116100c65780638c8c2003146101af5780638da5cb5b146101ec578063902d72361461021757806394f1825b14610233576100fe565b80633da0e66e1461010357806347899a0b14610146578063715018a61461016f57806378dc335614610186576100fe565b366100fe57005b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190612027565b6103eb565b60405161013d97969594939291906120c9565b60405180910390f35b34801561015257600080fd5b5061016d60048036038101906101689190612138565b6104c3565b005b34801561017b57600080fd5b50610184610a16565b005b34801561019257600080fd5b506101ad60048036038101906101a89190612138565b610a2a565b005b3480156101bb57600080fd5b506101d660048036038101906101d19190612027565b610e6b565b6040516101e39190612178565b60405180910390f35b3480156101f857600080fd5b50610201610f29565b60405161020e9190612193565b60405180910390f35b610231600480360381019061022c9190612206565b610f53565b005b34801561023f57600080fd5b50610248610f77565b604051610255919061226d565b60405180910390f35b34801561026a57600080fd5b5061028560048036038101906102809190612288565b610f7e565b005b34801561029357600080fd5b506102ae60048036038101906102a991906122c8565b6110aa565b005b3480156102bc57600080fd5b506102d760048036038101906102d29190612027565b6110fb565b6040516102eb989796959493929190612352565b60405180910390f35b34801561030057600080fd5b5061031b600480360381019061031691906123d0565b6111bd565b005b34801561032957600080fd5b50610344600480360381019061033f9190612027565b611243565b6040516103519190612178565b60405180910390f35b34801561036657600080fd5b5061036f611300565b60405161037c919061226d565b60405180910390f35b34801561039157600080fd5b506103ac60048036038101906103a79190612027565b611306565b005b3480156103ba57600080fd5b506103d560048036038101906103d09190612027565b61176f565b6040516103e29190612178565b60405180910390f35b600080600080600080600080600260008a815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836005015484600101548560060160009054906101000a900460ff168660060160019054906101000a900460ff16975097509750975097509750975050919395979092949650565b6104cb61178f565b6000600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361056c576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff16156105b5576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff16156105fe576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010154421061063b576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828260405160200161064d919061241e565b604051602081830303815290604052805190602001201461069a576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610723576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ac576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108f25760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826005015460405161086f9061246a565b60006040518083038185875af1925050503d80600081146108ac576040519150601f19603f3d011682016040523d82523d6000602084013e6108b1565b606091505b50509050806108ec576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061096a565b6109698160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610a019392919061247f565b60405180910390a350610a12611854565b5050565b610a1e61185e565b610a2860006118e5565b565b610a3261178f565b6000600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ad3576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff1615610b1c576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615610b65576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600101544210610ba2576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282604051602001610bb4919061241e565b6040516020818303038152906040528051906020012014610c01576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d475760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260050154604051610cc49061246a565b60006040518083038185875af1925050503d8060008114610d01576040519150601f19603f3d011682016040523d82523d6000602084013e610d06565b606091505b5050905080610d41576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610dbf565b610dbe8160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610e569392919061247f565b60405180910390a350610e67611854565b5050565b600080600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610ef057508060060160009054906101000a900460ff165b80610f0957508060060160019054906101000a900460ff165b15610f18576000915050610f24565b80600101544210159150505b919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f5b61178f565b610f698484846000856119ab565b610f71611854565b50505050565b62093a8081565b610f8661185e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611073576000610fc4610f29565b73ffffffffffffffffffffffffffffffffffffffff1682604051610fe79061246a565b60006040518083038185875af1925050503d8060008114611024576040519150601f19603f3d011682016040523d82523d6000602084013e611029565b606091505b505090508061106d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106490612513565b60405180910390fd5b506110a6565b6110a561107e610f29565b828473ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b5050565b6110b261178f565b6110bf85858585856119ab565b6110ec3330838573ffffffffffffffffffffffffffffffffffffffff16611ec0909392919063ffffffff16565b6110f4611854565b5050505050565b60026020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b6111c561185e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112375760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161122e9190612193565b60405180910390fd5b611240816118e5565b50565b600080600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112c857508060060160009054906101000a900460ff165b806112e157508060060160019054906101000a900460ff165b156112f05760009150506112fb565b806001015442109150505b919050565b610e1081565b61130e61178f565b6000600260008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036113af576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff16156113f8576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615611441576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015442101561147f576040517f621e25c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611508576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160016101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361164e5760008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600501546040516115cb9061246a565b60006040518083038185875af1925050503d8060008114611608576040519150601f19603f3d011682016040523d82523d6000602084013e61160d565b606091505b5050905080611648576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506116c6565b6116c58160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827fa19ac6ff80a8c71a18b3fd648fa480fa092eceb40ca2af1fadc2a1cc6e1baf7b8360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015460405161175b929190612533565b60405180910390a35061176c611854565b50565b60036020528060005260406000206000915054906101000a900460ff1681565b6002600054036117cb576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b61184f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611808929190612533565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f42565b505050565b6001600081905550565b611866611fe4565b73ffffffffffffffffffffffffffffffffffffffff16611884610f29565b73ffffffffffffffffffffffffffffffffffffffff16146118e3576118a7611fe4565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016118da9190612193565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6003600086815260200190815260200160002060009054906101000a900460ff1615611a03576040517fe9204a0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1042611a11919061258b565b841080611a2b575062093a8042611a28919061258b565b84115b15611a62576040517ff8d10e8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ac8576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008103611b02576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b7057803414611b6f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611c5857808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611bde9190612193565b602060405180830381865afa158015611bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1f91906125d4565b1015611c57576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6040518061010001604052808681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016000151581526020016000151581525060026000878152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff02191690831515021790555090505060016003600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16867ff7fed894f2fc26a47c345a04b644fb954bf11c27c2eec80f3f7ffb2cb07ea742858589604051611eb193929190612601565b60405180910390a45050505050565b611f3c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611ef593929190612638565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f42565b50505050565b600080602060008451602086016000885af180611f65576040513d6000823e3d81fd5b3d925060005191505060008214611f80576001811415611f9c565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611fde57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611fd59190612193565b60405180910390fd5b50505050565b600033905090565b600080fd5b6000819050919050565b61200481611ff1565b811461200f57600080fd5b50565b60008135905061202181611ffb565b92915050565b60006020828403121561203d5761203c611fec565b5b600061204b84828501612012565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061207f82612054565b9050919050565b61208f81612074565b82525050565b6000819050919050565b6120a881612095565b82525050565b60008115159050919050565b6120c3816120ae565b82525050565b600060e0820190506120de600083018a612086565b6120eb6020830189612086565b6120f86040830188612086565b612105606083018761209f565b612112608083018661209f565b61211f60a08301856120ba565b61212c60c08301846120ba565b98975050505050505050565b6000806040838503121561214f5761214e611fec565b5b600061215d85828601612012565b925050602061216e85828601612012565b9150509250929050565b600060208201905061218d60008301846120ba565b92915050565b60006020820190506121a86000830184612086565b92915050565b6121b781612095565b81146121c257600080fd5b50565b6000813590506121d4816121ae565b92915050565b6121e381612074565b81146121ee57600080fd5b50565b600081359050612200816121da565b92915050565b600080600080608085870312156122205761221f611fec565b5b600061222e87828801612012565b945050602061223f878288016121c5565b9350506040612250878288016121f1565b9250506060612261878288016121c5565b91505092959194509250565b6000602082019050612282600083018461209f565b92915050565b6000806040838503121561229f5761229e611fec565b5b60006122ad858286016121f1565b92505060206122be858286016121c5565b9150509250929050565b600080600080600060a086880312156122e4576122e3611fec565b5b60006122f288828901612012565b9550506020612303888289016121c5565b9450506040612314888289016121f1565b9350506060612325888289016121f1565b9250506080612336888289016121c5565b9150509295509295909350565b61234c81611ff1565b82525050565b600061010082019050612368600083018b612343565b612375602083018a61209f565b6123826040830189612086565b61238f6060830188612086565b61239c6080830187612086565b6123a960a083018661209f565b6123b660c08301856120ba565b6123c360e08301846120ba565b9998505050505050505050565b6000602082840312156123e6576123e5611fec565b5b60006123f4848285016121f1565b91505092915050565b6000819050919050565b61241861241382611ff1565b6123fd565b82525050565b600061242a8284612407565b60208201915081905092915050565b600081905092915050565b50565b6000612454600083612439565b915061245f82612444565b600082019050919050565b600061247582612447565b9150819050919050565b60006060820190506124946000830186612086565b6124a1602083018561209f565b6124ae6040830184612343565b949350505050565b600082825260208201905092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b60006124fd6013836124b6565b9150612508826124c7565b602082019050919050565b6000602082019050818103600083015261252c816124f0565b9050919050565b60006040820190506125486000830185612086565b612555602083018461209f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061259682612095565b91506125a183612095565b92508282019050808211156125b9576125b861255c565b5b92915050565b6000815190506125ce816121ae565b92915050565b6000602082840312156125ea576125e9611fec565b5b60006125f8848285016125bf565b91505092915050565b60006060820190506126166000830186612086565b612623602083018561209f565b612630604083018461209f565b949350505050565b600060608201905061264d6000830186612086565b61265a6020830185612086565b612667604083018461209f565b94935050505056fea2646970667358221220339dfeba43b48ddc821e53bede7ea6a20df7e539338c5cf1b5cabed95c48b48664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x90 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA1 DUP2 PUSH3 0xA8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19B DUP3 PUSH3 0x16E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AD DUP2 PUSH3 0x18E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CA PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26A5 DUP1 PUSH3 0x1E0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95CCEA67 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF4611FAE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xF4611FAE EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xFB0C7549 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xFE2510EE EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xFFDFA6DE EQ PUSH2 0x3AE JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xDD781188 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8C8C2003 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8C8C2003 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x902D7236 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x94F1825B EQ PUSH2 0x233 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3DA0E66E EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x47899A0B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x78DC3356 EQ PUSH2 0x186 JUMPI PUSH2 0xFE JUMP JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0xA16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0xF7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x23D0 JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x176F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH2 0x4CB PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x86F SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x96A JUMP JUMPDEST PUSH2 0x969 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xA01 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x247F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xA12 PUSH2 0x1854 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA1E PUSH2 0x185E JUMP JUMPDEST PUSH2 0xA28 PUSH1 0x0 PUSH2 0x18E5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD47 JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xCC4 SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xE56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x247F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xE67 PUSH2 0x1854 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEF0 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xF09 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xF24 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF5B PUSH2 0x178F JUMP JUMPDEST PUSH2 0xF69 DUP5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0xF71 PUSH2 0x1854 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xF86 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1073 JUMPI PUSH1 0x0 PUSH2 0xFC4 PUSH2 0xF29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xFE7 SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1064 SWAP1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x10A5 PUSH2 0x107E PUSH2 0xF29 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x10BF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0x10EC CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EC0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10F4 PUSH2 0x1854 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x11C5 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1237 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1240 DUP2 PUSH2 0x18E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x12C8 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x12E1 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x12FB JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x130E PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1441 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH32 0x621E25C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164E JUMPI PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1608 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x160D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1648 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x16C5 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xA19AC6FF80A8C71A18B3FD648FA480FA092ECEB40CA2AF1FADC2A1CC6E1BAF7B DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x175B SWAP3 SWAP2 SWAP1 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x176C PUSH2 0x1854 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x17CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x184F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1808 SWAP3 SWAP2 SWAP1 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F42 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1866 PUSH2 0x1FE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1884 PUSH2 0xF29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E3 JUMPI PUSH2 0x18A7 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DA SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE9204A0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 TIMESTAMP PUSH2 0x1A11 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST DUP5 LT DUP1 PUSH2 0x1A2B JUMPI POP PUSH3 0x93A80 TIMESTAMP PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST DUP5 GT JUMPDEST ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8D10E8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x1B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B70 JUMPI DUP1 CALLVALUE EQ PUSH2 0x1B6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C58 JUMPI DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDE SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1F SWAP2 SWAP1 PUSH2 0x25D4 JUMP JUMPDEST LT ISZERO PUSH2 0x1C57 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0xF7FED894F2FC26A47C345A04B644FB954BF11C27C2EEC80F3F7FFB2CB07EA742 DUP6 DUP6 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1EB1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F3C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F42 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1F65 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1F80 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FDE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD5 SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2004 DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x200F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2021 DUP2 PUSH2 0x1FFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203D JUMPI PUSH2 0x203C PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x204B DUP5 DUP3 DUP6 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207F DUP3 PUSH2 0x2054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208F DUP2 PUSH2 0x2074 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A8 DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C3 DUP2 PUSH2 0x20AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x20DE PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x20EB PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x20F8 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2105 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x2112 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x211F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x212C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x214F JUMPI PUSH2 0x214E PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x215D DUP6 DUP3 DUP7 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x216E DUP6 DUP3 DUP7 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21B7 DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP2 EQ PUSH2 0x21C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21D4 DUP2 PUSH2 0x21AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E3 DUP2 PUSH2 0x2074 JUMP JUMPDEST DUP2 EQ PUSH2 0x21EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2200 DUP2 PUSH2 0x21DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x222E DUP8 DUP3 DUP9 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x223F DUP8 DUP3 DUP9 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2250 DUP8 DUP3 DUP9 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2261 DUP8 DUP3 DUP9 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2282 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x229F JUMPI PUSH2 0x229E PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22AD DUP6 DUP3 DUP7 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22BE DUP6 DUP3 DUP7 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22E4 JUMPI PUSH2 0x22E3 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F2 DUP9 DUP3 DUP10 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2303 DUP9 DUP3 DUP10 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2314 DUP9 DUP3 DUP10 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2325 DUP9 DUP3 DUP10 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2336 DUP9 DUP3 DUP10 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x234C DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2368 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x2375 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x2382 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x238F PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x239C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x23A9 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x23B6 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x23C3 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E6 JUMPI PUSH2 0x23E5 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23F4 DUP5 DUP3 DUP6 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2418 PUSH2 0x2413 DUP3 PUSH2 0x1FF1 JUMP JUMPDEST PUSH2 0x23FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242A DUP3 DUP5 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2454 PUSH1 0x0 DUP4 PUSH2 0x2439 JUMP JUMPDEST SWAP2 POP PUSH2 0x245F DUP3 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP3 PUSH2 0x2447 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2494 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x24A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x24AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FD PUSH1 0x13 DUP4 PUSH2 0x24B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2508 DUP3 PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252C DUP2 PUSH2 0x24F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2548 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2555 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2596 DUP3 PUSH2 0x2095 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A1 DUP4 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25B9 JUMPI PUSH2 0x25B8 PUSH2 0x255C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CE DUP2 PUSH2 0x21AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F8 DUP5 DUP3 DUP6 ADD PUSH2 0x25BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2616 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2623 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x2630 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x264D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x265A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2667 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP14 INVALID 0xBA NUMBER 0xB4 DUP14 0xDC DUP3 0x1E MSTORE8 0xBE 0xDE PUSH31 0xA6A20DF7E539338C5CF1B5CABED95C48B48664736F6C634300081800330000 ","sourceMap":"513:12470:9:-:0;;;567:36;;;;;;;;;;589:10;1857:1:7;2061:7;:21;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;513:12470:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;513:12470:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_TIMELOCK_981":{"entryPoint":3959,"id":981,"parameterSlots":0,"returnSlots":0},"@MIN_TIMELOCK_978":{"entryPoint":4864,"id":978,"parameterSlots":0,"returnSlots":0},"@_1754":{"entryPoint":null,"id":1754,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_737":{"entryPoint":8002,"id":737,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":6238,"id":84,"parameterSlots":0,"returnSlots":0},"@_initiateSwap_1200":{"entryPoint":6571,"id":1200,"parameterSlots":5,"returnSlots":0},"@_msgSender_791":{"entryPoint":8164,"id":791,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_866":{"entryPoint":6228,"id":866,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_858":{"entryPoint":6031,"id":858,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":6373,"id":146,"parameterSlots":1,"returnSlots":0},"@canComplete_1622":{"entryPoint":4675,"id":1622,"parameterSlots":1,"returnSlots":1},"@canRefund_1661":{"entryPoint":3691,"id":1661,"parameterSlots":1,"returnSlots":1},"@completeSwapAsInitiator_1466":{"entryPoint":1219,"id":1466,"parameterSlots":2,"returnSlots":0},"@completeSwap_1323":{"entryPoint":2602,"id":1323,"parameterSlots":2,"returnSlots":0},"@emergencyWithdraw_1749":{"entryPoint":3966,"id":1749,"parameterSlots":2,"returnSlots":0},"@getSwap_1705":{"entryPoint":1003,"id":1705,"parameterSlots":1,"returnSlots":7},"@hashlockUsed_975":{"entryPoint":5999,"id":975,"parameterSlots":0,"returnSlots":0},"@initiateSwap_1031":{"entryPoint":3923,"id":1031,"parameterSlots":4,"returnSlots":0},"@initiateTokenSwap_1069":{"entryPoint":4266,"id":1069,"parameterSlots":5,"returnSlots":0},"@owner_67":{"entryPoint":3881,"id":67,"parameterSlots":0,"returnSlots":1},"@refundSwap_1583":{"entryPoint":4870,"id":1583,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2582,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_387":{"entryPoint":7872,"id":387,"parameterSlots":4,"returnSlots":0},"@safeTransfer_360":{"entryPoint":6101,"id":360,"parameterSlots":3,"returnSlots":0},"@swaps_971":{"entryPoint":4347,"id":971,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":4541,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":8689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8840,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":8231,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes32":{"entryPoint":8504,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256":{"entryPoint":8904,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256":{"entryPoint":8710,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":9684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8326,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8378,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9027,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":9223,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":9456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8351,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":9246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9322,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":8393,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":9784,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9523,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":9343,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9729,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":9042,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8813,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9273,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9398,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9611,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8308,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8366,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8177,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8276,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8341,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":9213,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9564,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8172,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":9284,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd":{"entryPoint":9415,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8666,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8187,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8622,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:13260:10","nodeType":"YulBlock","src":"0:13260:10","statements":[{"body":{"nativeSrc":"47:35:10","nodeType":"YulBlock","src":"47:35:10","statements":[{"nativeSrc":"57:19:10","nodeType":"YulAssignment","src":"57:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:10","nodeType":"YulLiteral","src":"73:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:10","nodeType":"YulIdentifier","src":"67:5:10"},"nativeSrc":"67:9:10","nodeType":"YulFunctionCall","src":"67:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:10","nodeType":"YulIdentifier","src":"57:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:10","nodeType":"YulTypedName","src":"40:6:10","type":""}],"src":"7:75:10"},{"body":{"nativeSrc":"177:28:10","nodeType":"YulBlock","src":"177:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:10","nodeType":"YulLiteral","src":"194:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:10","nodeType":"YulLiteral","src":"197:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:10","nodeType":"YulIdentifier","src":"187:6:10"},"nativeSrc":"187:12:10","nodeType":"YulFunctionCall","src":"187:12:10"},"nativeSrc":"187:12:10","nodeType":"YulExpressionStatement","src":"187:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:10","nodeType":"YulFunctionDefinition","src":"88:117:10"},{"body":{"nativeSrc":"300:28:10","nodeType":"YulBlock","src":"300:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:10","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:10","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:10","nodeType":"YulIdentifier","src":"310:6:10"},"nativeSrc":"310:12:10","nodeType":"YulFunctionCall","src":"310:12:10"},"nativeSrc":"310:12:10","nodeType":"YulExpressionStatement","src":"310:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:10","nodeType":"YulFunctionDefinition","src":"211:117:10"},{"body":{"nativeSrc":"379:32:10","nodeType":"YulBlock","src":"379:32:10","statements":[{"nativeSrc":"389:16:10","nodeType":"YulAssignment","src":"389:16:10","value":{"name":"value","nativeSrc":"400:5:10","nodeType":"YulIdentifier","src":"400:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:10","nodeType":"YulIdentifier","src":"389:7:10"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"334:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:10","nodeType":"YulTypedName","src":"361:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:10","nodeType":"YulTypedName","src":"371:7:10","type":""}],"src":"334:77:10"},{"body":{"nativeSrc":"460:79:10","nodeType":"YulBlock","src":"460:79:10","statements":[{"body":{"nativeSrc":"517:16:10","nodeType":"YulBlock","src":"517:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:10","nodeType":"YulLiteral","src":"526:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:10","nodeType":"YulLiteral","src":"529:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:10","nodeType":"YulIdentifier","src":"519:6:10"},"nativeSrc":"519:12:10","nodeType":"YulFunctionCall","src":"519:12:10"},"nativeSrc":"519:12:10","nodeType":"YulExpressionStatement","src":"519:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:10","nodeType":"YulIdentifier","src":"483:5:10"},{"arguments":[{"name":"value","nativeSrc":"508:5:10","nodeType":"YulIdentifier","src":"508:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"490:17:10","nodeType":"YulIdentifier","src":"490:17:10"},"nativeSrc":"490:24:10","nodeType":"YulFunctionCall","src":"490:24:10"}],"functionName":{"name":"eq","nativeSrc":"480:2:10","nodeType":"YulIdentifier","src":"480:2:10"},"nativeSrc":"480:35:10","nodeType":"YulFunctionCall","src":"480:35:10"}],"functionName":{"name":"iszero","nativeSrc":"473:6:10","nodeType":"YulIdentifier","src":"473:6:10"},"nativeSrc":"473:43:10","nodeType":"YulFunctionCall","src":"473:43:10"},"nativeSrc":"470:63:10","nodeType":"YulIf","src":"470:63:10"}]},"name":"validator_revert_t_bytes32","nativeSrc":"417:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:10","nodeType":"YulTypedName","src":"453:5:10","type":""}],"src":"417:122:10"},{"body":{"nativeSrc":"597:87:10","nodeType":"YulBlock","src":"597:87:10","statements":[{"nativeSrc":"607:29:10","nodeType":"YulAssignment","src":"607:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"629:6:10","nodeType":"YulIdentifier","src":"629:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"616:12:10","nodeType":"YulIdentifier","src":"616:12:10"},"nativeSrc":"616:20:10","nodeType":"YulFunctionCall","src":"616:20:10"},"variableNames":[{"name":"value","nativeSrc":"607:5:10","nodeType":"YulIdentifier","src":"607:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"672:5:10","nodeType":"YulIdentifier","src":"672:5:10"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"645:26:10","nodeType":"YulIdentifier","src":"645:26:10"},"nativeSrc":"645:33:10","nodeType":"YulFunctionCall","src":"645:33:10"},"nativeSrc":"645:33:10","nodeType":"YulExpressionStatement","src":"645:33:10"}]},"name":"abi_decode_t_bytes32","nativeSrc":"545:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"575:6:10","nodeType":"YulTypedName","src":"575:6:10","type":""},{"name":"end","nativeSrc":"583:3:10","nodeType":"YulTypedName","src":"583:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"591:5:10","nodeType":"YulTypedName","src":"591:5:10","type":""}],"src":"545:139:10"},{"body":{"nativeSrc":"756:263:10","nodeType":"YulBlock","src":"756:263:10","statements":[{"body":{"nativeSrc":"802:83:10","nodeType":"YulBlock","src":"802:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"804:77:10","nodeType":"YulIdentifier","src":"804:77:10"},"nativeSrc":"804:79:10","nodeType":"YulFunctionCall","src":"804:79:10"},"nativeSrc":"804:79:10","nodeType":"YulExpressionStatement","src":"804:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"777:7:10","nodeType":"YulIdentifier","src":"777:7:10"},{"name":"headStart","nativeSrc":"786:9:10","nodeType":"YulIdentifier","src":"786:9:10"}],"functionName":{"name":"sub","nativeSrc":"773:3:10","nodeType":"YulIdentifier","src":"773:3:10"},"nativeSrc":"773:23:10","nodeType":"YulFunctionCall","src":"773:23:10"},{"kind":"number","nativeSrc":"798:2:10","nodeType":"YulLiteral","src":"798:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"769:3:10","nodeType":"YulIdentifier","src":"769:3:10"},"nativeSrc":"769:32:10","nodeType":"YulFunctionCall","src":"769:32:10"},"nativeSrc":"766:119:10","nodeType":"YulIf","src":"766:119:10"},{"nativeSrc":"895:117:10","nodeType":"YulBlock","src":"895:117:10","statements":[{"nativeSrc":"910:15:10","nodeType":"YulVariableDeclaration","src":"910:15:10","value":{"kind":"number","nativeSrc":"924:1:10","nodeType":"YulLiteral","src":"924:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"914:6:10","nodeType":"YulTypedName","src":"914:6:10","type":""}]},{"nativeSrc":"939:63:10","nodeType":"YulAssignment","src":"939:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"974:9:10","nodeType":"YulIdentifier","src":"974:9:10"},{"name":"offset","nativeSrc":"985:6:10","nodeType":"YulIdentifier","src":"985:6:10"}],"functionName":{"name":"add","nativeSrc":"970:3:10","nodeType":"YulIdentifier","src":"970:3:10"},"nativeSrc":"970:22:10","nodeType":"YulFunctionCall","src":"970:22:10"},{"name":"dataEnd","nativeSrc":"994:7:10","nodeType":"YulIdentifier","src":"994:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"949:20:10","nodeType":"YulIdentifier","src":"949:20:10"},"nativeSrc":"949:53:10","nodeType":"YulFunctionCall","src":"949:53:10"},"variableNames":[{"name":"value0","nativeSrc":"939:6:10","nodeType":"YulIdentifier","src":"939:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"690:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"726:9:10","nodeType":"YulTypedName","src":"726:9:10","type":""},{"name":"dataEnd","nativeSrc":"737:7:10","nodeType":"YulTypedName","src":"737:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"749:6:10","nodeType":"YulTypedName","src":"749:6:10","type":""}],"src":"690:329:10"},{"body":{"nativeSrc":"1070:81:10","nodeType":"YulBlock","src":"1070:81:10","statements":[{"nativeSrc":"1080:65:10","nodeType":"YulAssignment","src":"1080:65:10","value":{"arguments":[{"name":"value","nativeSrc":"1095:5:10","nodeType":"YulIdentifier","src":"1095:5:10"},{"kind":"number","nativeSrc":"1102:42:10","nodeType":"YulLiteral","src":"1102:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1091:3:10","nodeType":"YulIdentifier","src":"1091:3:10"},"nativeSrc":"1091:54:10","nodeType":"YulFunctionCall","src":"1091:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1080:7:10","nodeType":"YulIdentifier","src":"1080:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1025:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1052:5:10","nodeType":"YulTypedName","src":"1052:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1062:7:10","nodeType":"YulTypedName","src":"1062:7:10","type":""}],"src":"1025:126:10"},{"body":{"nativeSrc":"1202:51:10","nodeType":"YulBlock","src":"1202:51:10","statements":[{"nativeSrc":"1212:35:10","nodeType":"YulAssignment","src":"1212:35:10","value":{"arguments":[{"name":"value","nativeSrc":"1241:5:10","nodeType":"YulIdentifier","src":"1241:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1223:17:10","nodeType":"YulIdentifier","src":"1223:17:10"},"nativeSrc":"1223:24:10","nodeType":"YulFunctionCall","src":"1223:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1212:7:10","nodeType":"YulIdentifier","src":"1212:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"1157:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1184:5:10","nodeType":"YulTypedName","src":"1184:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1194:7:10","nodeType":"YulTypedName","src":"1194:7:10","type":""}],"src":"1157:96:10"},{"body":{"nativeSrc":"1324:53:10","nodeType":"YulBlock","src":"1324:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1341:3:10","nodeType":"YulIdentifier","src":"1341:3:10"},{"arguments":[{"name":"value","nativeSrc":"1364:5:10","nodeType":"YulIdentifier","src":"1364:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1346:17:10","nodeType":"YulIdentifier","src":"1346:17:10"},"nativeSrc":"1346:24:10","nodeType":"YulFunctionCall","src":"1346:24:10"}],"functionName":{"name":"mstore","nativeSrc":"1334:6:10","nodeType":"YulIdentifier","src":"1334:6:10"},"nativeSrc":"1334:37:10","nodeType":"YulFunctionCall","src":"1334:37:10"},"nativeSrc":"1334:37:10","nodeType":"YulExpressionStatement","src":"1334:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1259:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1312:5:10","nodeType":"YulTypedName","src":"1312:5:10","type":""},{"name":"pos","nativeSrc":"1319:3:10","nodeType":"YulTypedName","src":"1319:3:10","type":""}],"src":"1259:118:10"},{"body":{"nativeSrc":"1428:32:10","nodeType":"YulBlock","src":"1428:32:10","statements":[{"nativeSrc":"1438:16:10","nodeType":"YulAssignment","src":"1438:16:10","value":{"name":"value","nativeSrc":"1449:5:10","nodeType":"YulIdentifier","src":"1449:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1438:7:10","nodeType":"YulIdentifier","src":"1438:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1383:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1410:5:10","nodeType":"YulTypedName","src":"1410:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1420:7:10","nodeType":"YulTypedName","src":"1420:7:10","type":""}],"src":"1383:77:10"},{"body":{"nativeSrc":"1531:53:10","nodeType":"YulBlock","src":"1531:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1548:3:10","nodeType":"YulIdentifier","src":"1548:3:10"},{"arguments":[{"name":"value","nativeSrc":"1571:5:10","nodeType":"YulIdentifier","src":"1571:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1553:17:10","nodeType":"YulIdentifier","src":"1553:17:10"},"nativeSrc":"1553:24:10","nodeType":"YulFunctionCall","src":"1553:24:10"}],"functionName":{"name":"mstore","nativeSrc":"1541:6:10","nodeType":"YulIdentifier","src":"1541:6:10"},"nativeSrc":"1541:37:10","nodeType":"YulFunctionCall","src":"1541:37:10"},"nativeSrc":"1541:37:10","nodeType":"YulExpressionStatement","src":"1541:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1466:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1519:5:10","nodeType":"YulTypedName","src":"1519:5:10","type":""},{"name":"pos","nativeSrc":"1526:3:10","nodeType":"YulTypedName","src":"1526:3:10","type":""}],"src":"1466:118:10"},{"body":{"nativeSrc":"1632:48:10","nodeType":"YulBlock","src":"1632:48:10","statements":[{"nativeSrc":"1642:32:10","nodeType":"YulAssignment","src":"1642:32:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1667:5:10","nodeType":"YulIdentifier","src":"1667:5:10"}],"functionName":{"name":"iszero","nativeSrc":"1660:6:10","nodeType":"YulIdentifier","src":"1660:6:10"},"nativeSrc":"1660:13:10","nodeType":"YulFunctionCall","src":"1660:13:10"}],"functionName":{"name":"iszero","nativeSrc":"1653:6:10","nodeType":"YulIdentifier","src":"1653:6:10"},"nativeSrc":"1653:21:10","nodeType":"YulFunctionCall","src":"1653:21:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1642:7:10","nodeType":"YulIdentifier","src":"1642:7:10"}]}]},"name":"cleanup_t_bool","nativeSrc":"1590:90:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1614:5:10","nodeType":"YulTypedName","src":"1614:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1624:7:10","nodeType":"YulTypedName","src":"1624:7:10","type":""}],"src":"1590:90:10"},{"body":{"nativeSrc":"1745:50:10","nodeType":"YulBlock","src":"1745:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1762:3:10","nodeType":"YulIdentifier","src":"1762:3:10"},{"arguments":[{"name":"value","nativeSrc":"1782:5:10","nodeType":"YulIdentifier","src":"1782:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1767:14:10","nodeType":"YulIdentifier","src":"1767:14:10"},"nativeSrc":"1767:21:10","nodeType":"YulFunctionCall","src":"1767:21:10"}],"functionName":{"name":"mstore","nativeSrc":"1755:6:10","nodeType":"YulIdentifier","src":"1755:6:10"},"nativeSrc":"1755:34:10","nodeType":"YulFunctionCall","src":"1755:34:10"},"nativeSrc":"1755:34:10","nodeType":"YulExpressionStatement","src":"1755:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1686:109:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1733:5:10","nodeType":"YulTypedName","src":"1733:5:10","type":""},{"name":"pos","nativeSrc":"1740:3:10","nodeType":"YulTypedName","src":"1740:3:10","type":""}],"src":"1686:109:10"},{"body":{"nativeSrc":"2055:608:10","nodeType":"YulBlock","src":"2055:608:10","statements":[{"nativeSrc":"2065:27:10","nodeType":"YulAssignment","src":"2065:27:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2077:9:10","nodeType":"YulIdentifier","src":"2077:9:10"},{"kind":"number","nativeSrc":"2088:3:10","nodeType":"YulLiteral","src":"2088:3:10","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"2073:3:10","nodeType":"YulIdentifier","src":"2073:3:10"},"nativeSrc":"2073:19:10","nodeType":"YulFunctionCall","src":"2073:19:10"},"variableNames":[{"name":"tail","nativeSrc":"2065:4:10","nodeType":"YulIdentifier","src":"2065:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2146:6:10","nodeType":"YulIdentifier","src":"2146:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2159:9:10","nodeType":"YulIdentifier","src":"2159:9:10"},{"kind":"number","nativeSrc":"2170:1:10","nodeType":"YulLiteral","src":"2170:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2155:3:10","nodeType":"YulIdentifier","src":"2155:3:10"},"nativeSrc":"2155:17:10","nodeType":"YulFunctionCall","src":"2155:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2102:43:10","nodeType":"YulIdentifier","src":"2102:43:10"},"nativeSrc":"2102:71:10","nodeType":"YulFunctionCall","src":"2102:71:10"},"nativeSrc":"2102:71:10","nodeType":"YulExpressionStatement","src":"2102:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"2227:6:10","nodeType":"YulIdentifier","src":"2227:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2240:9:10","nodeType":"YulIdentifier","src":"2240:9:10"},{"kind":"number","nativeSrc":"2251:2:10","nodeType":"YulLiteral","src":"2251:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2236:3:10","nodeType":"YulIdentifier","src":"2236:3:10"},"nativeSrc":"2236:18:10","nodeType":"YulFunctionCall","src":"2236:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2183:43:10","nodeType":"YulIdentifier","src":"2183:43:10"},"nativeSrc":"2183:72:10","nodeType":"YulFunctionCall","src":"2183:72:10"},"nativeSrc":"2183:72:10","nodeType":"YulExpressionStatement","src":"2183:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"2309:6:10","nodeType":"YulIdentifier","src":"2309:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2322:9:10","nodeType":"YulIdentifier","src":"2322:9:10"},{"kind":"number","nativeSrc":"2333:2:10","nodeType":"YulLiteral","src":"2333:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2318:3:10","nodeType":"YulIdentifier","src":"2318:3:10"},"nativeSrc":"2318:18:10","nodeType":"YulFunctionCall","src":"2318:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2265:43:10","nodeType":"YulIdentifier","src":"2265:43:10"},"nativeSrc":"2265:72:10","nodeType":"YulFunctionCall","src":"2265:72:10"},"nativeSrc":"2265:72:10","nodeType":"YulExpressionStatement","src":"2265:72:10"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"2391:6:10","nodeType":"YulIdentifier","src":"2391:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2404:9:10","nodeType":"YulIdentifier","src":"2404:9:10"},{"kind":"number","nativeSrc":"2415:2:10","nodeType":"YulLiteral","src":"2415:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2400:3:10","nodeType":"YulIdentifier","src":"2400:3:10"},"nativeSrc":"2400:18:10","nodeType":"YulFunctionCall","src":"2400:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2347:43:10","nodeType":"YulIdentifier","src":"2347:43:10"},"nativeSrc":"2347:72:10","nodeType":"YulFunctionCall","src":"2347:72:10"},"nativeSrc":"2347:72:10","nodeType":"YulExpressionStatement","src":"2347:72:10"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"2473:6:10","nodeType":"YulIdentifier","src":"2473:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2486:9:10","nodeType":"YulIdentifier","src":"2486:9:10"},{"kind":"number","nativeSrc":"2497:3:10","nodeType":"YulLiteral","src":"2497:3:10","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2482:3:10","nodeType":"YulIdentifier","src":"2482:3:10"},"nativeSrc":"2482:19:10","nodeType":"YulFunctionCall","src":"2482:19:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2429:43:10","nodeType":"YulIdentifier","src":"2429:43:10"},"nativeSrc":"2429:73:10","nodeType":"YulFunctionCall","src":"2429:73:10"},"nativeSrc":"2429:73:10","nodeType":"YulExpressionStatement","src":"2429:73:10"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"2550:6:10","nodeType":"YulIdentifier","src":"2550:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2563:9:10","nodeType":"YulIdentifier","src":"2563:9:10"},{"kind":"number","nativeSrc":"2574:3:10","nodeType":"YulLiteral","src":"2574:3:10","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"2559:3:10","nodeType":"YulIdentifier","src":"2559:3:10"},"nativeSrc":"2559:19:10","nodeType":"YulFunctionCall","src":"2559:19:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2512:37:10","nodeType":"YulIdentifier","src":"2512:37:10"},"nativeSrc":"2512:67:10","nodeType":"YulFunctionCall","src":"2512:67:10"},"nativeSrc":"2512:67:10","nodeType":"YulExpressionStatement","src":"2512:67:10"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"2627:6:10","nodeType":"YulIdentifier","src":"2627:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"2640:9:10","nodeType":"YulIdentifier","src":"2640:9:10"},{"kind":"number","nativeSrc":"2651:3:10","nodeType":"YulLiteral","src":"2651:3:10","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"2636:3:10","nodeType":"YulIdentifier","src":"2636:3:10"},"nativeSrc":"2636:19:10","nodeType":"YulFunctionCall","src":"2636:19:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2589:37:10","nodeType":"YulIdentifier","src":"2589:37:10"},"nativeSrc":"2589:67:10","nodeType":"YulFunctionCall","src":"2589:67:10"},"nativeSrc":"2589:67:10","nodeType":"YulExpressionStatement","src":"2589:67:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nativeSrc":"1801:862:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1979:9:10","nodeType":"YulTypedName","src":"1979:9:10","type":""},{"name":"value6","nativeSrc":"1991:6:10","nodeType":"YulTypedName","src":"1991:6:10","type":""},{"name":"value5","nativeSrc":"1999:6:10","nodeType":"YulTypedName","src":"1999:6:10","type":""},{"name":"value4","nativeSrc":"2007:6:10","nodeType":"YulTypedName","src":"2007:6:10","type":""},{"name":"value3","nativeSrc":"2015:6:10","nodeType":"YulTypedName","src":"2015:6:10","type":""},{"name":"value2","nativeSrc":"2023:6:10","nodeType":"YulTypedName","src":"2023:6:10","type":""},{"name":"value1","nativeSrc":"2031:6:10","nodeType":"YulTypedName","src":"2031:6:10","type":""},{"name":"value0","nativeSrc":"2039:6:10","nodeType":"YulTypedName","src":"2039:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2050:4:10","nodeType":"YulTypedName","src":"2050:4:10","type":""}],"src":"1801:862:10"},{"body":{"nativeSrc":"2752:391:10","nodeType":"YulBlock","src":"2752:391:10","statements":[{"body":{"nativeSrc":"2798:83:10","nodeType":"YulBlock","src":"2798:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2800:77:10","nodeType":"YulIdentifier","src":"2800:77:10"},"nativeSrc":"2800:79:10","nodeType":"YulFunctionCall","src":"2800:79:10"},"nativeSrc":"2800:79:10","nodeType":"YulExpressionStatement","src":"2800:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2773:7:10","nodeType":"YulIdentifier","src":"2773:7:10"},{"name":"headStart","nativeSrc":"2782:9:10","nodeType":"YulIdentifier","src":"2782:9:10"}],"functionName":{"name":"sub","nativeSrc":"2769:3:10","nodeType":"YulIdentifier","src":"2769:3:10"},"nativeSrc":"2769:23:10","nodeType":"YulFunctionCall","src":"2769:23:10"},{"kind":"number","nativeSrc":"2794:2:10","nodeType":"YulLiteral","src":"2794:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2765:3:10","nodeType":"YulIdentifier","src":"2765:3:10"},"nativeSrc":"2765:32:10","nodeType":"YulFunctionCall","src":"2765:32:10"},"nativeSrc":"2762:119:10","nodeType":"YulIf","src":"2762:119:10"},{"nativeSrc":"2891:117:10","nodeType":"YulBlock","src":"2891:117:10","statements":[{"nativeSrc":"2906:15:10","nodeType":"YulVariableDeclaration","src":"2906:15:10","value":{"kind":"number","nativeSrc":"2920:1:10","nodeType":"YulLiteral","src":"2920:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2910:6:10","nodeType":"YulTypedName","src":"2910:6:10","type":""}]},{"nativeSrc":"2935:63:10","nodeType":"YulAssignment","src":"2935:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:10","nodeType":"YulIdentifier","src":"2970:9:10"},{"name":"offset","nativeSrc":"2981:6:10","nodeType":"YulIdentifier","src":"2981:6:10"}],"functionName":{"name":"add","nativeSrc":"2966:3:10","nodeType":"YulIdentifier","src":"2966:3:10"},"nativeSrc":"2966:22:10","nodeType":"YulFunctionCall","src":"2966:22:10"},{"name":"dataEnd","nativeSrc":"2990:7:10","nodeType":"YulIdentifier","src":"2990:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"2945:20:10","nodeType":"YulIdentifier","src":"2945:20:10"},"nativeSrc":"2945:53:10","nodeType":"YulFunctionCall","src":"2945:53:10"},"variableNames":[{"name":"value0","nativeSrc":"2935:6:10","nodeType":"YulIdentifier","src":"2935:6:10"}]}]},{"nativeSrc":"3018:118:10","nodeType":"YulBlock","src":"3018:118:10","statements":[{"nativeSrc":"3033:16:10","nodeType":"YulVariableDeclaration","src":"3033:16:10","value":{"kind":"number","nativeSrc":"3047:2:10","nodeType":"YulLiteral","src":"3047:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3037:6:10","nodeType":"YulTypedName","src":"3037:6:10","type":""}]},{"nativeSrc":"3063:63:10","nodeType":"YulAssignment","src":"3063:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3098:9:10","nodeType":"YulIdentifier","src":"3098:9:10"},{"name":"offset","nativeSrc":"3109:6:10","nodeType":"YulIdentifier","src":"3109:6:10"}],"functionName":{"name":"add","nativeSrc":"3094:3:10","nodeType":"YulIdentifier","src":"3094:3:10"},"nativeSrc":"3094:22:10","nodeType":"YulFunctionCall","src":"3094:22:10"},{"name":"dataEnd","nativeSrc":"3118:7:10","nodeType":"YulIdentifier","src":"3118:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"3073:20:10","nodeType":"YulIdentifier","src":"3073:20:10"},"nativeSrc":"3073:53:10","nodeType":"YulFunctionCall","src":"3073:53:10"},"variableNames":[{"name":"value1","nativeSrc":"3063:6:10","nodeType":"YulIdentifier","src":"3063:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32","nativeSrc":"2669:474:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2714:9:10","nodeType":"YulTypedName","src":"2714:9:10","type":""},{"name":"dataEnd","nativeSrc":"2725:7:10","nodeType":"YulTypedName","src":"2725:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2737:6:10","nodeType":"YulTypedName","src":"2737:6:10","type":""},{"name":"value1","nativeSrc":"2745:6:10","nodeType":"YulTypedName","src":"2745:6:10","type":""}],"src":"2669:474:10"},{"body":{"nativeSrc":"3241:118:10","nodeType":"YulBlock","src":"3241:118:10","statements":[{"nativeSrc":"3251:26:10","nodeType":"YulAssignment","src":"3251:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3263:9:10","nodeType":"YulIdentifier","src":"3263:9:10"},{"kind":"number","nativeSrc":"3274:2:10","nodeType":"YulLiteral","src":"3274:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3259:3:10","nodeType":"YulIdentifier","src":"3259:3:10"},"nativeSrc":"3259:18:10","nodeType":"YulFunctionCall","src":"3259:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3251:4:10","nodeType":"YulIdentifier","src":"3251:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3325:6:10","nodeType":"YulIdentifier","src":"3325:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3338:9:10","nodeType":"YulIdentifier","src":"3338:9:10"},{"kind":"number","nativeSrc":"3349:1:10","nodeType":"YulLiteral","src":"3349:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3334:3:10","nodeType":"YulIdentifier","src":"3334:3:10"},"nativeSrc":"3334:17:10","nodeType":"YulFunctionCall","src":"3334:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3287:37:10","nodeType":"YulIdentifier","src":"3287:37:10"},"nativeSrc":"3287:65:10","nodeType":"YulFunctionCall","src":"3287:65:10"},"nativeSrc":"3287:65:10","nodeType":"YulExpressionStatement","src":"3287:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3149:210:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3213:9:10","nodeType":"YulTypedName","src":"3213:9:10","type":""},{"name":"value0","nativeSrc":"3225:6:10","nodeType":"YulTypedName","src":"3225:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3236:4:10","nodeType":"YulTypedName","src":"3236:4:10","type":""}],"src":"3149:210:10"},{"body":{"nativeSrc":"3463:124:10","nodeType":"YulBlock","src":"3463:124:10","statements":[{"nativeSrc":"3473:26:10","nodeType":"YulAssignment","src":"3473:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3485:9:10","nodeType":"YulIdentifier","src":"3485:9:10"},{"kind":"number","nativeSrc":"3496:2:10","nodeType":"YulLiteral","src":"3496:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3481:3:10","nodeType":"YulIdentifier","src":"3481:3:10"},"nativeSrc":"3481:18:10","nodeType":"YulFunctionCall","src":"3481:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3473:4:10","nodeType":"YulIdentifier","src":"3473:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3553:6:10","nodeType":"YulIdentifier","src":"3553:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3566:9:10","nodeType":"YulIdentifier","src":"3566:9:10"},{"kind":"number","nativeSrc":"3577:1:10","nodeType":"YulLiteral","src":"3577:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3562:3:10","nodeType":"YulIdentifier","src":"3562:3:10"},"nativeSrc":"3562:17:10","nodeType":"YulFunctionCall","src":"3562:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3509:43:10","nodeType":"YulIdentifier","src":"3509:43:10"},"nativeSrc":"3509:71:10","nodeType":"YulFunctionCall","src":"3509:71:10"},"nativeSrc":"3509:71:10","nodeType":"YulExpressionStatement","src":"3509:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3365:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3435:9:10","nodeType":"YulTypedName","src":"3435:9:10","type":""},{"name":"value0","nativeSrc":"3447:6:10","nodeType":"YulTypedName","src":"3447:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3458:4:10","nodeType":"YulTypedName","src":"3458:4:10","type":""}],"src":"3365:222:10"},{"body":{"nativeSrc":"3636:79:10","nodeType":"YulBlock","src":"3636:79:10","statements":[{"body":{"nativeSrc":"3693:16:10","nodeType":"YulBlock","src":"3693:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3702:1:10","nodeType":"YulLiteral","src":"3702:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3705:1:10","nodeType":"YulLiteral","src":"3705:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3695:6:10","nodeType":"YulIdentifier","src":"3695:6:10"},"nativeSrc":"3695:12:10","nodeType":"YulFunctionCall","src":"3695:12:10"},"nativeSrc":"3695:12:10","nodeType":"YulExpressionStatement","src":"3695:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3659:5:10","nodeType":"YulIdentifier","src":"3659:5:10"},{"arguments":[{"name":"value","nativeSrc":"3684:5:10","nodeType":"YulIdentifier","src":"3684:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3666:17:10","nodeType":"YulIdentifier","src":"3666:17:10"},"nativeSrc":"3666:24:10","nodeType":"YulFunctionCall","src":"3666:24:10"}],"functionName":{"name":"eq","nativeSrc":"3656:2:10","nodeType":"YulIdentifier","src":"3656:2:10"},"nativeSrc":"3656:35:10","nodeType":"YulFunctionCall","src":"3656:35:10"}],"functionName":{"name":"iszero","nativeSrc":"3649:6:10","nodeType":"YulIdentifier","src":"3649:6:10"},"nativeSrc":"3649:43:10","nodeType":"YulFunctionCall","src":"3649:43:10"},"nativeSrc":"3646:63:10","nodeType":"YulIf","src":"3646:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"3593:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3629:5:10","nodeType":"YulTypedName","src":"3629:5:10","type":""}],"src":"3593:122:10"},{"body":{"nativeSrc":"3773:87:10","nodeType":"YulBlock","src":"3773:87:10","statements":[{"nativeSrc":"3783:29:10","nodeType":"YulAssignment","src":"3783:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"3805:6:10","nodeType":"YulIdentifier","src":"3805:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"3792:12:10","nodeType":"YulIdentifier","src":"3792:12:10"},"nativeSrc":"3792:20:10","nodeType":"YulFunctionCall","src":"3792:20:10"},"variableNames":[{"name":"value","nativeSrc":"3783:5:10","nodeType":"YulIdentifier","src":"3783:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3848:5:10","nodeType":"YulIdentifier","src":"3848:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3821:26:10","nodeType":"YulIdentifier","src":"3821:26:10"},"nativeSrc":"3821:33:10","nodeType":"YulFunctionCall","src":"3821:33:10"},"nativeSrc":"3821:33:10","nodeType":"YulExpressionStatement","src":"3821:33:10"}]},"name":"abi_decode_t_uint256","nativeSrc":"3721:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3751:6:10","nodeType":"YulTypedName","src":"3751:6:10","type":""},{"name":"end","nativeSrc":"3759:3:10","nodeType":"YulTypedName","src":"3759:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3767:5:10","nodeType":"YulTypedName","src":"3767:5:10","type":""}],"src":"3721:139:10"},{"body":{"nativeSrc":"3909:79:10","nodeType":"YulBlock","src":"3909:79:10","statements":[{"body":{"nativeSrc":"3966:16:10","nodeType":"YulBlock","src":"3966:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3975:1:10","nodeType":"YulLiteral","src":"3975:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3978:1:10","nodeType":"YulLiteral","src":"3978:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3968:6:10","nodeType":"YulIdentifier","src":"3968:6:10"},"nativeSrc":"3968:12:10","nodeType":"YulFunctionCall","src":"3968:12:10"},"nativeSrc":"3968:12:10","nodeType":"YulExpressionStatement","src":"3968:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3932:5:10","nodeType":"YulIdentifier","src":"3932:5:10"},{"arguments":[{"name":"value","nativeSrc":"3957:5:10","nodeType":"YulIdentifier","src":"3957:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3939:17:10","nodeType":"YulIdentifier","src":"3939:17:10"},"nativeSrc":"3939:24:10","nodeType":"YulFunctionCall","src":"3939:24:10"}],"functionName":{"name":"eq","nativeSrc":"3929:2:10","nodeType":"YulIdentifier","src":"3929:2:10"},"nativeSrc":"3929:35:10","nodeType":"YulFunctionCall","src":"3929:35:10"}],"functionName":{"name":"iszero","nativeSrc":"3922:6:10","nodeType":"YulIdentifier","src":"3922:6:10"},"nativeSrc":"3922:43:10","nodeType":"YulFunctionCall","src":"3922:43:10"},"nativeSrc":"3919:63:10","nodeType":"YulIf","src":"3919:63:10"}]},"name":"validator_revert_t_address","nativeSrc":"3866:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3902:5:10","nodeType":"YulTypedName","src":"3902:5:10","type":""}],"src":"3866:122:10"},{"body":{"nativeSrc":"4046:87:10","nodeType":"YulBlock","src":"4046:87:10","statements":[{"nativeSrc":"4056:29:10","nodeType":"YulAssignment","src":"4056:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"4078:6:10","nodeType":"YulIdentifier","src":"4078:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"4065:12:10","nodeType":"YulIdentifier","src":"4065:12:10"},"nativeSrc":"4065:20:10","nodeType":"YulFunctionCall","src":"4065:20:10"},"variableNames":[{"name":"value","nativeSrc":"4056:5:10","nodeType":"YulIdentifier","src":"4056:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4121:5:10","nodeType":"YulIdentifier","src":"4121:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4094:26:10","nodeType":"YulIdentifier","src":"4094:26:10"},"nativeSrc":"4094:33:10","nodeType":"YulFunctionCall","src":"4094:33:10"},"nativeSrc":"4094:33:10","nodeType":"YulExpressionStatement","src":"4094:33:10"}]},"name":"abi_decode_t_address","nativeSrc":"3994:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4024:6:10","nodeType":"YulTypedName","src":"4024:6:10","type":""},{"name":"end","nativeSrc":"4032:3:10","nodeType":"YulTypedName","src":"4032:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4040:5:10","nodeType":"YulTypedName","src":"4040:5:10","type":""}],"src":"3994:139:10"},{"body":{"nativeSrc":"4256:648:10","nodeType":"YulBlock","src":"4256:648:10","statements":[{"body":{"nativeSrc":"4303:83:10","nodeType":"YulBlock","src":"4303:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4305:77:10","nodeType":"YulIdentifier","src":"4305:77:10"},"nativeSrc":"4305:79:10","nodeType":"YulFunctionCall","src":"4305:79:10"},"nativeSrc":"4305:79:10","nodeType":"YulExpressionStatement","src":"4305:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4277:7:10","nodeType":"YulIdentifier","src":"4277:7:10"},{"name":"headStart","nativeSrc":"4286:9:10","nodeType":"YulIdentifier","src":"4286:9:10"}],"functionName":{"name":"sub","nativeSrc":"4273:3:10","nodeType":"YulIdentifier","src":"4273:3:10"},"nativeSrc":"4273:23:10","nodeType":"YulFunctionCall","src":"4273:23:10"},{"kind":"number","nativeSrc":"4298:3:10","nodeType":"YulLiteral","src":"4298:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4269:3:10","nodeType":"YulIdentifier","src":"4269:3:10"},"nativeSrc":"4269:33:10","nodeType":"YulFunctionCall","src":"4269:33:10"},"nativeSrc":"4266:120:10","nodeType":"YulIf","src":"4266:120:10"},{"nativeSrc":"4396:117:10","nodeType":"YulBlock","src":"4396:117:10","statements":[{"nativeSrc":"4411:15:10","nodeType":"YulVariableDeclaration","src":"4411:15:10","value":{"kind":"number","nativeSrc":"4425:1:10","nodeType":"YulLiteral","src":"4425:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4415:6:10","nodeType":"YulTypedName","src":"4415:6:10","type":""}]},{"nativeSrc":"4440:63:10","nodeType":"YulAssignment","src":"4440:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4475:9:10","nodeType":"YulIdentifier","src":"4475:9:10"},{"name":"offset","nativeSrc":"4486:6:10","nodeType":"YulIdentifier","src":"4486:6:10"}],"functionName":{"name":"add","nativeSrc":"4471:3:10","nodeType":"YulIdentifier","src":"4471:3:10"},"nativeSrc":"4471:22:10","nodeType":"YulFunctionCall","src":"4471:22:10"},{"name":"dataEnd","nativeSrc":"4495:7:10","nodeType":"YulIdentifier","src":"4495:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"4450:20:10","nodeType":"YulIdentifier","src":"4450:20:10"},"nativeSrc":"4450:53:10","nodeType":"YulFunctionCall","src":"4450:53:10"},"variableNames":[{"name":"value0","nativeSrc":"4440:6:10","nodeType":"YulIdentifier","src":"4440:6:10"}]}]},{"nativeSrc":"4523:118:10","nodeType":"YulBlock","src":"4523:118:10","statements":[{"nativeSrc":"4538:16:10","nodeType":"YulVariableDeclaration","src":"4538:16:10","value":{"kind":"number","nativeSrc":"4552:2:10","nodeType":"YulLiteral","src":"4552:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4542:6:10","nodeType":"YulTypedName","src":"4542:6:10","type":""}]},{"nativeSrc":"4568:63:10","nodeType":"YulAssignment","src":"4568:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4603:9:10","nodeType":"YulIdentifier","src":"4603:9:10"},{"name":"offset","nativeSrc":"4614:6:10","nodeType":"YulIdentifier","src":"4614:6:10"}],"functionName":{"name":"add","nativeSrc":"4599:3:10","nodeType":"YulIdentifier","src":"4599:3:10"},"nativeSrc":"4599:22:10","nodeType":"YulFunctionCall","src":"4599:22:10"},{"name":"dataEnd","nativeSrc":"4623:7:10","nodeType":"YulIdentifier","src":"4623:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4578:20:10","nodeType":"YulIdentifier","src":"4578:20:10"},"nativeSrc":"4578:53:10","nodeType":"YulFunctionCall","src":"4578:53:10"},"variableNames":[{"name":"value1","nativeSrc":"4568:6:10","nodeType":"YulIdentifier","src":"4568:6:10"}]}]},{"nativeSrc":"4651:118:10","nodeType":"YulBlock","src":"4651:118:10","statements":[{"nativeSrc":"4666:16:10","nodeType":"YulVariableDeclaration","src":"4666:16:10","value":{"kind":"number","nativeSrc":"4680:2:10","nodeType":"YulLiteral","src":"4680:2:10","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4670:6:10","nodeType":"YulTypedName","src":"4670:6:10","type":""}]},{"nativeSrc":"4696:63:10","nodeType":"YulAssignment","src":"4696:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4731:9:10","nodeType":"YulIdentifier","src":"4731:9:10"},{"name":"offset","nativeSrc":"4742:6:10","nodeType":"YulIdentifier","src":"4742:6:10"}],"functionName":{"name":"add","nativeSrc":"4727:3:10","nodeType":"YulIdentifier","src":"4727:3:10"},"nativeSrc":"4727:22:10","nodeType":"YulFunctionCall","src":"4727:22:10"},{"name":"dataEnd","nativeSrc":"4751:7:10","nodeType":"YulIdentifier","src":"4751:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4706:20:10","nodeType":"YulIdentifier","src":"4706:20:10"},"nativeSrc":"4706:53:10","nodeType":"YulFunctionCall","src":"4706:53:10"},"variableNames":[{"name":"value2","nativeSrc":"4696:6:10","nodeType":"YulIdentifier","src":"4696:6:10"}]}]},{"nativeSrc":"4779:118:10","nodeType":"YulBlock","src":"4779:118:10","statements":[{"nativeSrc":"4794:16:10","nodeType":"YulVariableDeclaration","src":"4794:16:10","value":{"kind":"number","nativeSrc":"4808:2:10","nodeType":"YulLiteral","src":"4808:2:10","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"4798:6:10","nodeType":"YulTypedName","src":"4798:6:10","type":""}]},{"nativeSrc":"4824:63:10","nodeType":"YulAssignment","src":"4824:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4859:9:10","nodeType":"YulIdentifier","src":"4859:9:10"},{"name":"offset","nativeSrc":"4870:6:10","nodeType":"YulIdentifier","src":"4870:6:10"}],"functionName":{"name":"add","nativeSrc":"4855:3:10","nodeType":"YulIdentifier","src":"4855:3:10"},"nativeSrc":"4855:22:10","nodeType":"YulFunctionCall","src":"4855:22:10"},{"name":"dataEnd","nativeSrc":"4879:7:10","nodeType":"YulIdentifier","src":"4879:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4834:20:10","nodeType":"YulIdentifier","src":"4834:20:10"},"nativeSrc":"4834:53:10","nodeType":"YulFunctionCall","src":"4834:53:10"},"variableNames":[{"name":"value3","nativeSrc":"4824:6:10","nodeType":"YulIdentifier","src":"4824:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256","nativeSrc":"4139:765:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4202:9:10","nodeType":"YulTypedName","src":"4202:9:10","type":""},{"name":"dataEnd","nativeSrc":"4213:7:10","nodeType":"YulTypedName","src":"4213:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4225:6:10","nodeType":"YulTypedName","src":"4225:6:10","type":""},{"name":"value1","nativeSrc":"4233:6:10","nodeType":"YulTypedName","src":"4233:6:10","type":""},{"name":"value2","nativeSrc":"4241:6:10","nodeType":"YulTypedName","src":"4241:6:10","type":""},{"name":"value3","nativeSrc":"4249:6:10","nodeType":"YulTypedName","src":"4249:6:10","type":""}],"src":"4139:765:10"},{"body":{"nativeSrc":"5008:124:10","nodeType":"YulBlock","src":"5008:124:10","statements":[{"nativeSrc":"5018:26:10","nodeType":"YulAssignment","src":"5018:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"5030:9:10","nodeType":"YulIdentifier","src":"5030:9:10"},{"kind":"number","nativeSrc":"5041:2:10","nodeType":"YulLiteral","src":"5041:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5026:3:10","nodeType":"YulIdentifier","src":"5026:3:10"},"nativeSrc":"5026:18:10","nodeType":"YulFunctionCall","src":"5026:18:10"},"variableNames":[{"name":"tail","nativeSrc":"5018:4:10","nodeType":"YulIdentifier","src":"5018:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5098:6:10","nodeType":"YulIdentifier","src":"5098:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"5111:9:10","nodeType":"YulIdentifier","src":"5111:9:10"},{"kind":"number","nativeSrc":"5122:1:10","nodeType":"YulLiteral","src":"5122:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5107:3:10","nodeType":"YulIdentifier","src":"5107:3:10"},"nativeSrc":"5107:17:10","nodeType":"YulFunctionCall","src":"5107:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5054:43:10","nodeType":"YulIdentifier","src":"5054:43:10"},"nativeSrc":"5054:71:10","nodeType":"YulFunctionCall","src":"5054:71:10"},"nativeSrc":"5054:71:10","nodeType":"YulExpressionStatement","src":"5054:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4910:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4980:9:10","nodeType":"YulTypedName","src":"4980:9:10","type":""},{"name":"value0","nativeSrc":"4992:6:10","nodeType":"YulTypedName","src":"4992:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5003:4:10","nodeType":"YulTypedName","src":"5003:4:10","type":""}],"src":"4910:222:10"},{"body":{"nativeSrc":"5221:391:10","nodeType":"YulBlock","src":"5221:391:10","statements":[{"body":{"nativeSrc":"5267:83:10","nodeType":"YulBlock","src":"5267:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5269:77:10","nodeType":"YulIdentifier","src":"5269:77:10"},"nativeSrc":"5269:79:10","nodeType":"YulFunctionCall","src":"5269:79:10"},"nativeSrc":"5269:79:10","nodeType":"YulExpressionStatement","src":"5269:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5242:7:10","nodeType":"YulIdentifier","src":"5242:7:10"},{"name":"headStart","nativeSrc":"5251:9:10","nodeType":"YulIdentifier","src":"5251:9:10"}],"functionName":{"name":"sub","nativeSrc":"5238:3:10","nodeType":"YulIdentifier","src":"5238:3:10"},"nativeSrc":"5238:23:10","nodeType":"YulFunctionCall","src":"5238:23:10"},{"kind":"number","nativeSrc":"5263:2:10","nodeType":"YulLiteral","src":"5263:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5234:3:10","nodeType":"YulIdentifier","src":"5234:3:10"},"nativeSrc":"5234:32:10","nodeType":"YulFunctionCall","src":"5234:32:10"},"nativeSrc":"5231:119:10","nodeType":"YulIf","src":"5231:119:10"},{"nativeSrc":"5360:117:10","nodeType":"YulBlock","src":"5360:117:10","statements":[{"nativeSrc":"5375:15:10","nodeType":"YulVariableDeclaration","src":"5375:15:10","value":{"kind":"number","nativeSrc":"5389:1:10","nodeType":"YulLiteral","src":"5389:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5379:6:10","nodeType":"YulTypedName","src":"5379:6:10","type":""}]},{"nativeSrc":"5404:63:10","nodeType":"YulAssignment","src":"5404:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5439:9:10","nodeType":"YulIdentifier","src":"5439:9:10"},{"name":"offset","nativeSrc":"5450:6:10","nodeType":"YulIdentifier","src":"5450:6:10"}],"functionName":{"name":"add","nativeSrc":"5435:3:10","nodeType":"YulIdentifier","src":"5435:3:10"},"nativeSrc":"5435:22:10","nodeType":"YulFunctionCall","src":"5435:22:10"},{"name":"dataEnd","nativeSrc":"5459:7:10","nodeType":"YulIdentifier","src":"5459:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5414:20:10","nodeType":"YulIdentifier","src":"5414:20:10"},"nativeSrc":"5414:53:10","nodeType":"YulFunctionCall","src":"5414:53:10"},"variableNames":[{"name":"value0","nativeSrc":"5404:6:10","nodeType":"YulIdentifier","src":"5404:6:10"}]}]},{"nativeSrc":"5487:118:10","nodeType":"YulBlock","src":"5487:118:10","statements":[{"nativeSrc":"5502:16:10","nodeType":"YulVariableDeclaration","src":"5502:16:10","value":{"kind":"number","nativeSrc":"5516:2:10","nodeType":"YulLiteral","src":"5516:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5506:6:10","nodeType":"YulTypedName","src":"5506:6:10","type":""}]},{"nativeSrc":"5532:63:10","nodeType":"YulAssignment","src":"5532:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5567:9:10","nodeType":"YulIdentifier","src":"5567:9:10"},{"name":"offset","nativeSrc":"5578:6:10","nodeType":"YulIdentifier","src":"5578:6:10"}],"functionName":{"name":"add","nativeSrc":"5563:3:10","nodeType":"YulIdentifier","src":"5563:3:10"},"nativeSrc":"5563:22:10","nodeType":"YulFunctionCall","src":"5563:22:10"},{"name":"dataEnd","nativeSrc":"5587:7:10","nodeType":"YulIdentifier","src":"5587:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5542:20:10","nodeType":"YulIdentifier","src":"5542:20:10"},"nativeSrc":"5542:53:10","nodeType":"YulFunctionCall","src":"5542:53:10"},"variableNames":[{"name":"value1","nativeSrc":"5532:6:10","nodeType":"YulIdentifier","src":"5532:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"5138:474:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5183:9:10","nodeType":"YulTypedName","src":"5183:9:10","type":""},{"name":"dataEnd","nativeSrc":"5194:7:10","nodeType":"YulTypedName","src":"5194:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5206:6:10","nodeType":"YulTypedName","src":"5206:6:10","type":""},{"name":"value1","nativeSrc":"5214:6:10","nodeType":"YulTypedName","src":"5214:6:10","type":""}],"src":"5138:474:10"},{"body":{"nativeSrc":"5752:777:10","nodeType":"YulBlock","src":"5752:777:10","statements":[{"body":{"nativeSrc":"5799:83:10","nodeType":"YulBlock","src":"5799:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5801:77:10","nodeType":"YulIdentifier","src":"5801:77:10"},"nativeSrc":"5801:79:10","nodeType":"YulFunctionCall","src":"5801:79:10"},"nativeSrc":"5801:79:10","nodeType":"YulExpressionStatement","src":"5801:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5773:7:10","nodeType":"YulIdentifier","src":"5773:7:10"},{"name":"headStart","nativeSrc":"5782:9:10","nodeType":"YulIdentifier","src":"5782:9:10"}],"functionName":{"name":"sub","nativeSrc":"5769:3:10","nodeType":"YulIdentifier","src":"5769:3:10"},"nativeSrc":"5769:23:10","nodeType":"YulFunctionCall","src":"5769:23:10"},{"kind":"number","nativeSrc":"5794:3:10","nodeType":"YulLiteral","src":"5794:3:10","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"5765:3:10","nodeType":"YulIdentifier","src":"5765:3:10"},"nativeSrc":"5765:33:10","nodeType":"YulFunctionCall","src":"5765:33:10"},"nativeSrc":"5762:120:10","nodeType":"YulIf","src":"5762:120:10"},{"nativeSrc":"5892:117:10","nodeType":"YulBlock","src":"5892:117:10","statements":[{"nativeSrc":"5907:15:10","nodeType":"YulVariableDeclaration","src":"5907:15:10","value":{"kind":"number","nativeSrc":"5921:1:10","nodeType":"YulLiteral","src":"5921:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5911:6:10","nodeType":"YulTypedName","src":"5911:6:10","type":""}]},{"nativeSrc":"5936:63:10","nodeType":"YulAssignment","src":"5936:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5971:9:10","nodeType":"YulIdentifier","src":"5971:9:10"},{"name":"offset","nativeSrc":"5982:6:10","nodeType":"YulIdentifier","src":"5982:6:10"}],"functionName":{"name":"add","nativeSrc":"5967:3:10","nodeType":"YulIdentifier","src":"5967:3:10"},"nativeSrc":"5967:22:10","nodeType":"YulFunctionCall","src":"5967:22:10"},{"name":"dataEnd","nativeSrc":"5991:7:10","nodeType":"YulIdentifier","src":"5991:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5946:20:10","nodeType":"YulIdentifier","src":"5946:20:10"},"nativeSrc":"5946:53:10","nodeType":"YulFunctionCall","src":"5946:53:10"},"variableNames":[{"name":"value0","nativeSrc":"5936:6:10","nodeType":"YulIdentifier","src":"5936:6:10"}]}]},{"nativeSrc":"6019:118:10","nodeType":"YulBlock","src":"6019:118:10","statements":[{"nativeSrc":"6034:16:10","nodeType":"YulVariableDeclaration","src":"6034:16:10","value":{"kind":"number","nativeSrc":"6048:2:10","nodeType":"YulLiteral","src":"6048:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6038:6:10","nodeType":"YulTypedName","src":"6038:6:10","type":""}]},{"nativeSrc":"6064:63:10","nodeType":"YulAssignment","src":"6064:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6099:9:10","nodeType":"YulIdentifier","src":"6099:9:10"},{"name":"offset","nativeSrc":"6110:6:10","nodeType":"YulIdentifier","src":"6110:6:10"}],"functionName":{"name":"add","nativeSrc":"6095:3:10","nodeType":"YulIdentifier","src":"6095:3:10"},"nativeSrc":"6095:22:10","nodeType":"YulFunctionCall","src":"6095:22:10"},{"name":"dataEnd","nativeSrc":"6119:7:10","nodeType":"YulIdentifier","src":"6119:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6074:20:10","nodeType":"YulIdentifier","src":"6074:20:10"},"nativeSrc":"6074:53:10","nodeType":"YulFunctionCall","src":"6074:53:10"},"variableNames":[{"name":"value1","nativeSrc":"6064:6:10","nodeType":"YulIdentifier","src":"6064:6:10"}]}]},{"nativeSrc":"6147:118:10","nodeType":"YulBlock","src":"6147:118:10","statements":[{"nativeSrc":"6162:16:10","nodeType":"YulVariableDeclaration","src":"6162:16:10","value":{"kind":"number","nativeSrc":"6176:2:10","nodeType":"YulLiteral","src":"6176:2:10","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6166:6:10","nodeType":"YulTypedName","src":"6166:6:10","type":""}]},{"nativeSrc":"6192:63:10","nodeType":"YulAssignment","src":"6192:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6227:9:10","nodeType":"YulIdentifier","src":"6227:9:10"},{"name":"offset","nativeSrc":"6238:6:10","nodeType":"YulIdentifier","src":"6238:6:10"}],"functionName":{"name":"add","nativeSrc":"6223:3:10","nodeType":"YulIdentifier","src":"6223:3:10"},"nativeSrc":"6223:22:10","nodeType":"YulFunctionCall","src":"6223:22:10"},{"name":"dataEnd","nativeSrc":"6247:7:10","nodeType":"YulIdentifier","src":"6247:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6202:20:10","nodeType":"YulIdentifier","src":"6202:20:10"},"nativeSrc":"6202:53:10","nodeType":"YulFunctionCall","src":"6202:53:10"},"variableNames":[{"name":"value2","nativeSrc":"6192:6:10","nodeType":"YulIdentifier","src":"6192:6:10"}]}]},{"nativeSrc":"6275:118:10","nodeType":"YulBlock","src":"6275:118:10","statements":[{"nativeSrc":"6290:16:10","nodeType":"YulVariableDeclaration","src":"6290:16:10","value":{"kind":"number","nativeSrc":"6304:2:10","nodeType":"YulLiteral","src":"6304:2:10","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"6294:6:10","nodeType":"YulTypedName","src":"6294:6:10","type":""}]},{"nativeSrc":"6320:63:10","nodeType":"YulAssignment","src":"6320:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6355:9:10","nodeType":"YulIdentifier","src":"6355:9:10"},{"name":"offset","nativeSrc":"6366:6:10","nodeType":"YulIdentifier","src":"6366:6:10"}],"functionName":{"name":"add","nativeSrc":"6351:3:10","nodeType":"YulIdentifier","src":"6351:3:10"},"nativeSrc":"6351:22:10","nodeType":"YulFunctionCall","src":"6351:22:10"},{"name":"dataEnd","nativeSrc":"6375:7:10","nodeType":"YulIdentifier","src":"6375:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6330:20:10","nodeType":"YulIdentifier","src":"6330:20:10"},"nativeSrc":"6330:53:10","nodeType":"YulFunctionCall","src":"6330:53:10"},"variableNames":[{"name":"value3","nativeSrc":"6320:6:10","nodeType":"YulIdentifier","src":"6320:6:10"}]}]},{"nativeSrc":"6403:119:10","nodeType":"YulBlock","src":"6403:119:10","statements":[{"nativeSrc":"6418:17:10","nodeType":"YulVariableDeclaration","src":"6418:17:10","value":{"kind":"number","nativeSrc":"6432:3:10","nodeType":"YulLiteral","src":"6432:3:10","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"6422:6:10","nodeType":"YulTypedName","src":"6422:6:10","type":""}]},{"nativeSrc":"6449:63:10","nodeType":"YulAssignment","src":"6449:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6484:9:10","nodeType":"YulIdentifier","src":"6484:9:10"},{"name":"offset","nativeSrc":"6495:6:10","nodeType":"YulIdentifier","src":"6495:6:10"}],"functionName":{"name":"add","nativeSrc":"6480:3:10","nodeType":"YulIdentifier","src":"6480:3:10"},"nativeSrc":"6480:22:10","nodeType":"YulFunctionCall","src":"6480:22:10"},{"name":"dataEnd","nativeSrc":"6504:7:10","nodeType":"YulIdentifier","src":"6504:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6459:20:10","nodeType":"YulIdentifier","src":"6459:20:10"},"nativeSrc":"6459:53:10","nodeType":"YulFunctionCall","src":"6459:53:10"},"variableNames":[{"name":"value4","nativeSrc":"6449:6:10","nodeType":"YulIdentifier","src":"6449:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256","nativeSrc":"5618:911:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5690:9:10","nodeType":"YulTypedName","src":"5690:9:10","type":""},{"name":"dataEnd","nativeSrc":"5701:7:10","nodeType":"YulTypedName","src":"5701:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5713:6:10","nodeType":"YulTypedName","src":"5713:6:10","type":""},{"name":"value1","nativeSrc":"5721:6:10","nodeType":"YulTypedName","src":"5721:6:10","type":""},{"name":"value2","nativeSrc":"5729:6:10","nodeType":"YulTypedName","src":"5729:6:10","type":""},{"name":"value3","nativeSrc":"5737:6:10","nodeType":"YulTypedName","src":"5737:6:10","type":""},{"name":"value4","nativeSrc":"5745:6:10","nodeType":"YulTypedName","src":"5745:6:10","type":""}],"src":"5618:911:10"},{"body":{"nativeSrc":"6600:53:10","nodeType":"YulBlock","src":"6600:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6617:3:10","nodeType":"YulIdentifier","src":"6617:3:10"},{"arguments":[{"name":"value","nativeSrc":"6640:5:10","nodeType":"YulIdentifier","src":"6640:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6622:17:10","nodeType":"YulIdentifier","src":"6622:17:10"},"nativeSrc":"6622:24:10","nodeType":"YulFunctionCall","src":"6622:24:10"}],"functionName":{"name":"mstore","nativeSrc":"6610:6:10","nodeType":"YulIdentifier","src":"6610:6:10"},"nativeSrc":"6610:37:10","nodeType":"YulFunctionCall","src":"6610:37:10"},"nativeSrc":"6610:37:10","nodeType":"YulExpressionStatement","src":"6610:37:10"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6535:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6588:5:10","nodeType":"YulTypedName","src":"6588:5:10","type":""},{"name":"pos","nativeSrc":"6595:3:10","nodeType":"YulTypedName","src":"6595:3:10","type":""}],"src":"6535:118:10"},{"body":{"nativeSrc":"6941:691:10","nodeType":"YulBlock","src":"6941:691:10","statements":[{"nativeSrc":"6951:27:10","nodeType":"YulAssignment","src":"6951:27:10","value":{"arguments":[{"name":"headStart","nativeSrc":"6963:9:10","nodeType":"YulIdentifier","src":"6963:9:10"},{"kind":"number","nativeSrc":"6974:3:10","nodeType":"YulLiteral","src":"6974:3:10","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"6959:3:10","nodeType":"YulIdentifier","src":"6959:3:10"},"nativeSrc":"6959:19:10","nodeType":"YulFunctionCall","src":"6959:19:10"},"variableNames":[{"name":"tail","nativeSrc":"6951:4:10","nodeType":"YulIdentifier","src":"6951:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7032:6:10","nodeType":"YulIdentifier","src":"7032:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7045:9:10","nodeType":"YulIdentifier","src":"7045:9:10"},{"kind":"number","nativeSrc":"7056:1:10","nodeType":"YulLiteral","src":"7056:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7041:3:10","nodeType":"YulIdentifier","src":"7041:3:10"},"nativeSrc":"7041:17:10","nodeType":"YulFunctionCall","src":"7041:17:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6988:43:10","nodeType":"YulIdentifier","src":"6988:43:10"},"nativeSrc":"6988:71:10","nodeType":"YulFunctionCall","src":"6988:71:10"},"nativeSrc":"6988:71:10","nodeType":"YulExpressionStatement","src":"6988:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7113:6:10","nodeType":"YulIdentifier","src":"7113:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7126:9:10","nodeType":"YulIdentifier","src":"7126:9:10"},{"kind":"number","nativeSrc":"7137:2:10","nodeType":"YulLiteral","src":"7137:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7122:3:10","nodeType":"YulIdentifier","src":"7122:3:10"},"nativeSrc":"7122:18:10","nodeType":"YulFunctionCall","src":"7122:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7069:43:10","nodeType":"YulIdentifier","src":"7069:43:10"},"nativeSrc":"7069:72:10","nodeType":"YulFunctionCall","src":"7069:72:10"},"nativeSrc":"7069:72:10","nodeType":"YulExpressionStatement","src":"7069:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7195:6:10","nodeType":"YulIdentifier","src":"7195:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7208:9:10","nodeType":"YulIdentifier","src":"7208:9:10"},{"kind":"number","nativeSrc":"7219:2:10","nodeType":"YulLiteral","src":"7219:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7204:3:10","nodeType":"YulIdentifier","src":"7204:3:10"},"nativeSrc":"7204:18:10","nodeType":"YulFunctionCall","src":"7204:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7151:43:10","nodeType":"YulIdentifier","src":"7151:43:10"},"nativeSrc":"7151:72:10","nodeType":"YulFunctionCall","src":"7151:72:10"},"nativeSrc":"7151:72:10","nodeType":"YulExpressionStatement","src":"7151:72:10"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"7277:6:10","nodeType":"YulIdentifier","src":"7277:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7290:9:10","nodeType":"YulIdentifier","src":"7290:9:10"},{"kind":"number","nativeSrc":"7301:2:10","nodeType":"YulLiteral","src":"7301:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7286:3:10","nodeType":"YulIdentifier","src":"7286:3:10"},"nativeSrc":"7286:18:10","nodeType":"YulFunctionCall","src":"7286:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7233:43:10","nodeType":"YulIdentifier","src":"7233:43:10"},"nativeSrc":"7233:72:10","nodeType":"YulFunctionCall","src":"7233:72:10"},"nativeSrc":"7233:72:10","nodeType":"YulExpressionStatement","src":"7233:72:10"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"7359:6:10","nodeType":"YulIdentifier","src":"7359:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7372:9:10","nodeType":"YulIdentifier","src":"7372:9:10"},{"kind":"number","nativeSrc":"7383:3:10","nodeType":"YulLiteral","src":"7383:3:10","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7368:3:10","nodeType":"YulIdentifier","src":"7368:3:10"},"nativeSrc":"7368:19:10","nodeType":"YulFunctionCall","src":"7368:19:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7315:43:10","nodeType":"YulIdentifier","src":"7315:43:10"},"nativeSrc":"7315:73:10","nodeType":"YulFunctionCall","src":"7315:73:10"},"nativeSrc":"7315:73:10","nodeType":"YulExpressionStatement","src":"7315:73:10"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"7442:6:10","nodeType":"YulIdentifier","src":"7442:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7455:9:10","nodeType":"YulIdentifier","src":"7455:9:10"},{"kind":"number","nativeSrc":"7466:3:10","nodeType":"YulLiteral","src":"7466:3:10","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7451:3:10","nodeType":"YulIdentifier","src":"7451:3:10"},"nativeSrc":"7451:19:10","nodeType":"YulFunctionCall","src":"7451:19:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7398:43:10","nodeType":"YulIdentifier","src":"7398:43:10"},"nativeSrc":"7398:73:10","nodeType":"YulFunctionCall","src":"7398:73:10"},"nativeSrc":"7398:73:10","nodeType":"YulExpressionStatement","src":"7398:73:10"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"7519:6:10","nodeType":"YulIdentifier","src":"7519:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7532:9:10","nodeType":"YulIdentifier","src":"7532:9:10"},{"kind":"number","nativeSrc":"7543:3:10","nodeType":"YulLiteral","src":"7543:3:10","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7528:3:10","nodeType":"YulIdentifier","src":"7528:3:10"},"nativeSrc":"7528:19:10","nodeType":"YulFunctionCall","src":"7528:19:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"7481:37:10","nodeType":"YulIdentifier","src":"7481:37:10"},"nativeSrc":"7481:67:10","nodeType":"YulFunctionCall","src":"7481:67:10"},"nativeSrc":"7481:67:10","nodeType":"YulExpressionStatement","src":"7481:67:10"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"7596:6:10","nodeType":"YulIdentifier","src":"7596:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"7609:9:10","nodeType":"YulIdentifier","src":"7609:9:10"},{"kind":"number","nativeSrc":"7620:3:10","nodeType":"YulLiteral","src":"7620:3:10","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"7605:3:10","nodeType":"YulIdentifier","src":"7605:3:10"},"nativeSrc":"7605:19:10","nodeType":"YulFunctionCall","src":"7605:19:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"7558:37:10","nodeType":"YulIdentifier","src":"7558:37:10"},"nativeSrc":"7558:67:10","nodeType":"YulFunctionCall","src":"7558:67:10"},"nativeSrc":"7558:67:10","nodeType":"YulExpressionStatement","src":"7558:67:10"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed","nativeSrc":"6659:973:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6857:9:10","nodeType":"YulTypedName","src":"6857:9:10","type":""},{"name":"value7","nativeSrc":"6869:6:10","nodeType":"YulTypedName","src":"6869:6:10","type":""},{"name":"value6","nativeSrc":"6877:6:10","nodeType":"YulTypedName","src":"6877:6:10","type":""},{"name":"value5","nativeSrc":"6885:6:10","nodeType":"YulTypedName","src":"6885:6:10","type":""},{"name":"value4","nativeSrc":"6893:6:10","nodeType":"YulTypedName","src":"6893:6:10","type":""},{"name":"value3","nativeSrc":"6901:6:10","nodeType":"YulTypedName","src":"6901:6:10","type":""},{"name":"value2","nativeSrc":"6909:6:10","nodeType":"YulTypedName","src":"6909:6:10","type":""},{"name":"value1","nativeSrc":"6917:6:10","nodeType":"YulTypedName","src":"6917:6:10","type":""},{"name":"value0","nativeSrc":"6925:6:10","nodeType":"YulTypedName","src":"6925:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6936:4:10","nodeType":"YulTypedName","src":"6936:4:10","type":""}],"src":"6659:973:10"},{"body":{"nativeSrc":"7704:263:10","nodeType":"YulBlock","src":"7704:263:10","statements":[{"body":{"nativeSrc":"7750:83:10","nodeType":"YulBlock","src":"7750:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7752:77:10","nodeType":"YulIdentifier","src":"7752:77:10"},"nativeSrc":"7752:79:10","nodeType":"YulFunctionCall","src":"7752:79:10"},"nativeSrc":"7752:79:10","nodeType":"YulExpressionStatement","src":"7752:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7725:7:10","nodeType":"YulIdentifier","src":"7725:7:10"},{"name":"headStart","nativeSrc":"7734:9:10","nodeType":"YulIdentifier","src":"7734:9:10"}],"functionName":{"name":"sub","nativeSrc":"7721:3:10","nodeType":"YulIdentifier","src":"7721:3:10"},"nativeSrc":"7721:23:10","nodeType":"YulFunctionCall","src":"7721:23:10"},{"kind":"number","nativeSrc":"7746:2:10","nodeType":"YulLiteral","src":"7746:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7717:3:10","nodeType":"YulIdentifier","src":"7717:3:10"},"nativeSrc":"7717:32:10","nodeType":"YulFunctionCall","src":"7717:32:10"},"nativeSrc":"7714:119:10","nodeType":"YulIf","src":"7714:119:10"},{"nativeSrc":"7843:117:10","nodeType":"YulBlock","src":"7843:117:10","statements":[{"nativeSrc":"7858:15:10","nodeType":"YulVariableDeclaration","src":"7858:15:10","value":{"kind":"number","nativeSrc":"7872:1:10","nodeType":"YulLiteral","src":"7872:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7862:6:10","nodeType":"YulTypedName","src":"7862:6:10","type":""}]},{"nativeSrc":"7887:63:10","nodeType":"YulAssignment","src":"7887:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7922:9:10","nodeType":"YulIdentifier","src":"7922:9:10"},{"name":"offset","nativeSrc":"7933:6:10","nodeType":"YulIdentifier","src":"7933:6:10"}],"functionName":{"name":"add","nativeSrc":"7918:3:10","nodeType":"YulIdentifier","src":"7918:3:10"},"nativeSrc":"7918:22:10","nodeType":"YulFunctionCall","src":"7918:22:10"},{"name":"dataEnd","nativeSrc":"7942:7:10","nodeType":"YulIdentifier","src":"7942:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7897:20:10","nodeType":"YulIdentifier","src":"7897:20:10"},"nativeSrc":"7897:53:10","nodeType":"YulFunctionCall","src":"7897:53:10"},"variableNames":[{"name":"value0","nativeSrc":"7887:6:10","nodeType":"YulIdentifier","src":"7887:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"7638:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7674:9:10","nodeType":"YulTypedName","src":"7674:9:10","type":""},{"name":"dataEnd","nativeSrc":"7685:7:10","nodeType":"YulTypedName","src":"7685:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7697:6:10","nodeType":"YulTypedName","src":"7697:6:10","type":""}],"src":"7638:329:10"},{"body":{"nativeSrc":"8020:32:10","nodeType":"YulBlock","src":"8020:32:10","statements":[{"nativeSrc":"8030:16:10","nodeType":"YulAssignment","src":"8030:16:10","value":{"name":"value","nativeSrc":"8041:5:10","nodeType":"YulIdentifier","src":"8041:5:10"},"variableNames":[{"name":"aligned","nativeSrc":"8030:7:10","nodeType":"YulIdentifier","src":"8030:7:10"}]}]},"name":"leftAlign_t_bytes32","nativeSrc":"7973:79:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8002:5:10","nodeType":"YulTypedName","src":"8002:5:10","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"8012:7:10","nodeType":"YulTypedName","src":"8012:7:10","type":""}],"src":"7973:79:10"},{"body":{"nativeSrc":"8141:74:10","nodeType":"YulBlock","src":"8141:74:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8158:3:10","nodeType":"YulIdentifier","src":"8158:3:10"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8201:5:10","nodeType":"YulIdentifier","src":"8201:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8183:17:10","nodeType":"YulIdentifier","src":"8183:17:10"},"nativeSrc":"8183:24:10","nodeType":"YulFunctionCall","src":"8183:24:10"}],"functionName":{"name":"leftAlign_t_bytes32","nativeSrc":"8163:19:10","nodeType":"YulIdentifier","src":"8163:19:10"},"nativeSrc":"8163:45:10","nodeType":"YulFunctionCall","src":"8163:45:10"}],"functionName":{"name":"mstore","nativeSrc":"8151:6:10","nodeType":"YulIdentifier","src":"8151:6:10"},"nativeSrc":"8151:58:10","nodeType":"YulFunctionCall","src":"8151:58:10"},"nativeSrc":"8151:58:10","nodeType":"YulExpressionStatement","src":"8151:58:10"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"8058:157:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8129:5:10","nodeType":"YulTypedName","src":"8129:5:10","type":""},{"name":"pos","nativeSrc":"8136:3:10","nodeType":"YulTypedName","src":"8136:3:10","type":""}],"src":"8058:157:10"},{"body":{"nativeSrc":"8337:140:10","nodeType":"YulBlock","src":"8337:140:10","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"8410:6:10","nodeType":"YulIdentifier","src":"8410:6:10"},{"name":"pos","nativeSrc":"8419:3:10","nodeType":"YulIdentifier","src":"8419:3:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"8348:61:10","nodeType":"YulIdentifier","src":"8348:61:10"},"nativeSrc":"8348:75:10","nodeType":"YulFunctionCall","src":"8348:75:10"},"nativeSrc":"8348:75:10","nodeType":"YulExpressionStatement","src":"8348:75:10"},{"nativeSrc":"8432:19:10","nodeType":"YulAssignment","src":"8432:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"8443:3:10","nodeType":"YulIdentifier","src":"8443:3:10"},{"kind":"number","nativeSrc":"8448:2:10","nodeType":"YulLiteral","src":"8448:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8439:3:10","nodeType":"YulIdentifier","src":"8439:3:10"},"nativeSrc":"8439:12:10","nodeType":"YulFunctionCall","src":"8439:12:10"},"variableNames":[{"name":"pos","nativeSrc":"8432:3:10","nodeType":"YulIdentifier","src":"8432:3:10"}]},{"nativeSrc":"8461:10:10","nodeType":"YulAssignment","src":"8461:10:10","value":{"name":"pos","nativeSrc":"8468:3:10","nodeType":"YulIdentifier","src":"8468:3:10"},"variableNames":[{"name":"end","nativeSrc":"8461:3:10","nodeType":"YulIdentifier","src":"8461:3:10"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"8221:256:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8316:3:10","nodeType":"YulTypedName","src":"8316:3:10","type":""},{"name":"value0","nativeSrc":"8322:6:10","nodeType":"YulTypedName","src":"8322:6:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8333:3:10","nodeType":"YulTypedName","src":"8333:3:10","type":""}],"src":"8221:256:10"},{"body":{"nativeSrc":"8596:34:10","nodeType":"YulBlock","src":"8596:34:10","statements":[{"nativeSrc":"8606:18:10","nodeType":"YulAssignment","src":"8606:18:10","value":{"name":"pos","nativeSrc":"8621:3:10","nodeType":"YulIdentifier","src":"8621:3:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"8606:11:10","nodeType":"YulIdentifier","src":"8606:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8483:147:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8568:3:10","nodeType":"YulTypedName","src":"8568:3:10","type":""},{"name":"length","nativeSrc":"8573:6:10","nodeType":"YulTypedName","src":"8573:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8584:11:10","nodeType":"YulTypedName","src":"8584:11:10","type":""}],"src":"8483:147:10"},{"body":{"nativeSrc":"8742:8:10","nodeType":"YulBlock","src":"8742:8:10","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"8636:114:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8734:6:10","nodeType":"YulTypedName","src":"8734:6:10","type":""}],"src":"8636:114:10"},{"body":{"nativeSrc":"8919:235:10","nodeType":"YulBlock","src":"8919:235:10","statements":[{"nativeSrc":"8929:90:10","nodeType":"YulAssignment","src":"8929:90:10","value":{"arguments":[{"name":"pos","nativeSrc":"9012:3:10","nodeType":"YulIdentifier","src":"9012:3:10"},{"kind":"number","nativeSrc":"9017:1:10","nodeType":"YulLiteral","src":"9017:1:10","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8936:75:10","nodeType":"YulIdentifier","src":"8936:75:10"},"nativeSrc":"8936:83:10","nodeType":"YulFunctionCall","src":"8936:83:10"},"variableNames":[{"name":"pos","nativeSrc":"8929:3:10","nodeType":"YulIdentifier","src":"8929:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9117:3:10","nodeType":"YulIdentifier","src":"9117:3:10"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"9028:88:10","nodeType":"YulIdentifier","src":"9028:88:10"},"nativeSrc":"9028:93:10","nodeType":"YulFunctionCall","src":"9028:93:10"},"nativeSrc":"9028:93:10","nodeType":"YulExpressionStatement","src":"9028:93:10"},{"nativeSrc":"9130:18:10","nodeType":"YulAssignment","src":"9130:18:10","value":{"arguments":[{"name":"pos","nativeSrc":"9141:3:10","nodeType":"YulIdentifier","src":"9141:3:10"},{"kind":"number","nativeSrc":"9146:1:10","nodeType":"YulLiteral","src":"9146:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9137:3:10","nodeType":"YulIdentifier","src":"9137:3:10"},"nativeSrc":"9137:11:10","nodeType":"YulFunctionCall","src":"9137:11:10"},"variableNames":[{"name":"end","nativeSrc":"9130:3:10","nodeType":"YulIdentifier","src":"9130:3:10"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8756:398:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8907:3:10","nodeType":"YulTypedName","src":"8907:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8915:3:10","nodeType":"YulTypedName","src":"8915:3:10","type":""}],"src":"8756:398:10"},{"body":{"nativeSrc":"9348:191:10","nodeType":"YulBlock","src":"9348:191:10","statements":[{"nativeSrc":"9359:154:10","nodeType":"YulAssignment","src":"9359:154:10","value":{"arguments":[{"name":"pos","nativeSrc":"9509:3:10","nodeType":"YulIdentifier","src":"9509:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9366:141:10","nodeType":"YulIdentifier","src":"9366:141:10"},"nativeSrc":"9366:147:10","nodeType":"YulFunctionCall","src":"9366:147:10"},"variableNames":[{"name":"pos","nativeSrc":"9359:3:10","nodeType":"YulIdentifier","src":"9359:3:10"}]},{"nativeSrc":"9523:10:10","nodeType":"YulAssignment","src":"9523:10:10","value":{"name":"pos","nativeSrc":"9530:3:10","nodeType":"YulIdentifier","src":"9530:3:10"},"variableNames":[{"name":"end","nativeSrc":"9523:3:10","nodeType":"YulIdentifier","src":"9523:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"9160:379:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9335:3:10","nodeType":"YulTypedName","src":"9335:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9344:3:10","nodeType":"YulTypedName","src":"9344:3:10","type":""}],"src":"9160:379:10"},{"body":{"nativeSrc":"9699:288:10","nodeType":"YulBlock","src":"9699:288:10","statements":[{"nativeSrc":"9709:26:10","nodeType":"YulAssignment","src":"9709:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"9721:9:10","nodeType":"YulIdentifier","src":"9721:9:10"},{"kind":"number","nativeSrc":"9732:2:10","nodeType":"YulLiteral","src":"9732:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9717:3:10","nodeType":"YulIdentifier","src":"9717:3:10"},"nativeSrc":"9717:18:10","nodeType":"YulFunctionCall","src":"9717:18:10"},"variableNames":[{"name":"tail","nativeSrc":"9709:4:10","nodeType":"YulIdentifier","src":"9709:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9789:6:10","nodeType":"YulIdentifier","src":"9789:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"9802:9:10","nodeType":"YulIdentifier","src":"9802:9:10"},{"kind":"number","nativeSrc":"9813:1:10","nodeType":"YulLiteral","src":"9813:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9798:3:10","nodeType":"YulIdentifier","src":"9798:3:10"},"nativeSrc":"9798:17:10","nodeType":"YulFunctionCall","src":"9798:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9745:43:10","nodeType":"YulIdentifier","src":"9745:43:10"},"nativeSrc":"9745:71:10","nodeType":"YulFunctionCall","src":"9745:71:10"},"nativeSrc":"9745:71:10","nodeType":"YulExpressionStatement","src":"9745:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9870:6:10","nodeType":"YulIdentifier","src":"9870:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"9883:9:10","nodeType":"YulIdentifier","src":"9883:9:10"},{"kind":"number","nativeSrc":"9894:2:10","nodeType":"YulLiteral","src":"9894:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9879:3:10","nodeType":"YulIdentifier","src":"9879:3:10"},"nativeSrc":"9879:18:10","nodeType":"YulFunctionCall","src":"9879:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9826:43:10","nodeType":"YulIdentifier","src":"9826:43:10"},"nativeSrc":"9826:72:10","nodeType":"YulFunctionCall","src":"9826:72:10"},"nativeSrc":"9826:72:10","nodeType":"YulExpressionStatement","src":"9826:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9952:6:10","nodeType":"YulIdentifier","src":"9952:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"9965:9:10","nodeType":"YulIdentifier","src":"9965:9:10"},{"kind":"number","nativeSrc":"9976:2:10","nodeType":"YulLiteral","src":"9976:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9961:3:10","nodeType":"YulIdentifier","src":"9961:3:10"},"nativeSrc":"9961:18:10","nodeType":"YulFunctionCall","src":"9961:18:10"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9908:43:10","nodeType":"YulIdentifier","src":"9908:43:10"},"nativeSrc":"9908:72:10","nodeType":"YulFunctionCall","src":"9908:72:10"},"nativeSrc":"9908:72:10","nodeType":"YulExpressionStatement","src":"9908:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"9545:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9655:9:10","nodeType":"YulTypedName","src":"9655:9:10","type":""},{"name":"value2","nativeSrc":"9667:6:10","nodeType":"YulTypedName","src":"9667:6:10","type":""},{"name":"value1","nativeSrc":"9675:6:10","nodeType":"YulTypedName","src":"9675:6:10","type":""},{"name":"value0","nativeSrc":"9683:6:10","nodeType":"YulTypedName","src":"9683:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9694:4:10","nodeType":"YulTypedName","src":"9694:4:10","type":""}],"src":"9545:442:10"},{"body":{"nativeSrc":"10089:73:10","nodeType":"YulBlock","src":"10089:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10106:3:10","nodeType":"YulIdentifier","src":"10106:3:10"},{"name":"length","nativeSrc":"10111:6:10","nodeType":"YulIdentifier","src":"10111:6:10"}],"functionName":{"name":"mstore","nativeSrc":"10099:6:10","nodeType":"YulIdentifier","src":"10099:6:10"},"nativeSrc":"10099:19:10","nodeType":"YulFunctionCall","src":"10099:19:10"},"nativeSrc":"10099:19:10","nodeType":"YulExpressionStatement","src":"10099:19:10"},{"nativeSrc":"10127:29:10","nodeType":"YulAssignment","src":"10127:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"10146:3:10","nodeType":"YulIdentifier","src":"10146:3:10"},{"kind":"number","nativeSrc":"10151:4:10","nodeType":"YulLiteral","src":"10151:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10142:3:10","nodeType":"YulIdentifier","src":"10142:3:10"},"nativeSrc":"10142:14:10","nodeType":"YulFunctionCall","src":"10142:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"10127:11:10","nodeType":"YulIdentifier","src":"10127:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9993:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10061:3:10","nodeType":"YulTypedName","src":"10061:3:10","type":""},{"name":"length","nativeSrc":"10066:6:10","nodeType":"YulTypedName","src":"10066:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10077:11:10","nodeType":"YulTypedName","src":"10077:11:10","type":""}],"src":"9993:169:10"},{"body":{"nativeSrc":"10274:63:10","nodeType":"YulBlock","src":"10274:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10296:6:10","nodeType":"YulIdentifier","src":"10296:6:10"},{"kind":"number","nativeSrc":"10304:1:10","nodeType":"YulLiteral","src":"10304:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10292:3:10","nodeType":"YulIdentifier","src":"10292:3:10"},"nativeSrc":"10292:14:10","nodeType":"YulFunctionCall","src":"10292:14:10"},{"hexValue":"455448207472616e73666572206661696c6564","kind":"string","nativeSrc":"10308:21:10","nodeType":"YulLiteral","src":"10308:21:10","type":"","value":"ETH transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"10285:6:10","nodeType":"YulIdentifier","src":"10285:6:10"},"nativeSrc":"10285:45:10","nodeType":"YulFunctionCall","src":"10285:45:10"},"nativeSrc":"10285:45:10","nodeType":"YulExpressionStatement","src":"10285:45:10"}]},"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"10168:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10266:6:10","nodeType":"YulTypedName","src":"10266:6:10","type":""}],"src":"10168:169:10"},{"body":{"nativeSrc":"10489:220:10","nodeType":"YulBlock","src":"10489:220:10","statements":[{"nativeSrc":"10499:74:10","nodeType":"YulAssignment","src":"10499:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"10565:3:10","nodeType":"YulIdentifier","src":"10565:3:10"},{"kind":"number","nativeSrc":"10570:2:10","nodeType":"YulLiteral","src":"10570:2:10","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10506:58:10","nodeType":"YulIdentifier","src":"10506:58:10"},"nativeSrc":"10506:67:10","nodeType":"YulFunctionCall","src":"10506:67:10"},"variableNames":[{"name":"pos","nativeSrc":"10499:3:10","nodeType":"YulIdentifier","src":"10499:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10671:3:10","nodeType":"YulIdentifier","src":"10671:3:10"}],"functionName":{"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"10582:88:10","nodeType":"YulIdentifier","src":"10582:88:10"},"nativeSrc":"10582:93:10","nodeType":"YulFunctionCall","src":"10582:93:10"},"nativeSrc":"10582:93:10","nodeType":"YulExpressionStatement","src":"10582:93:10"},{"nativeSrc":"10684:19:10","nodeType":"YulAssignment","src":"10684:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"10695:3:10","nodeType":"YulIdentifier","src":"10695:3:10"},{"kind":"number","nativeSrc":"10700:2:10","nodeType":"YulLiteral","src":"10700:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10691:3:10","nodeType":"YulIdentifier","src":"10691:3:10"},"nativeSrc":"10691:12:10","nodeType":"YulFunctionCall","src":"10691:12:10"},"variableNames":[{"name":"end","nativeSrc":"10684:3:10","nodeType":"YulIdentifier","src":"10684:3:10"}]}]},"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"10343:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10477:3:10","nodeType":"YulTypedName","src":"10477:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10485:3:10","nodeType":"YulTypedName","src":"10485:3:10","type":""}],"src":"10343:366:10"},{"body":{"nativeSrc":"10886:248:10","nodeType":"YulBlock","src":"10886:248:10","statements":[{"nativeSrc":"10896:26:10","nodeType":"YulAssignment","src":"10896:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"10908:9:10","nodeType":"YulIdentifier","src":"10908:9:10"},{"kind":"number","nativeSrc":"10919:2:10","nodeType":"YulLiteral","src":"10919:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10904:3:10","nodeType":"YulIdentifier","src":"10904:3:10"},"nativeSrc":"10904:18:10","nodeType":"YulFunctionCall","src":"10904:18:10"},"variableNames":[{"name":"tail","nativeSrc":"10896:4:10","nodeType":"YulIdentifier","src":"10896:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10943:9:10","nodeType":"YulIdentifier","src":"10943:9:10"},{"kind":"number","nativeSrc":"10954:1:10","nodeType":"YulLiteral","src":"10954:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10939:3:10","nodeType":"YulIdentifier","src":"10939:3:10"},"nativeSrc":"10939:17:10","nodeType":"YulFunctionCall","src":"10939:17:10"},{"arguments":[{"name":"tail","nativeSrc":"10962:4:10","nodeType":"YulIdentifier","src":"10962:4:10"},{"name":"headStart","nativeSrc":"10968:9:10","nodeType":"YulIdentifier","src":"10968:9:10"}],"functionName":{"name":"sub","nativeSrc":"10958:3:10","nodeType":"YulIdentifier","src":"10958:3:10"},"nativeSrc":"10958:20:10","nodeType":"YulFunctionCall","src":"10958:20:10"}],"functionName":{"name":"mstore","nativeSrc":"10932:6:10","nodeType":"YulIdentifier","src":"10932:6:10"},"nativeSrc":"10932:47:10","nodeType":"YulFunctionCall","src":"10932:47:10"},"nativeSrc":"10932:47:10","nodeType":"YulExpressionStatement","src":"10932:47:10"},{"nativeSrc":"10988:139:10","nodeType":"YulAssignment","src":"10988:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"11122:4:10","nodeType":"YulIdentifier","src":"11122:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"10996:124:10","nodeType":"YulIdentifier","src":"10996:124:10"},"nativeSrc":"10996:131:10","nodeType":"YulFunctionCall","src":"10996:131:10"},"variableNames":[{"name":"tail","nativeSrc":"10988:4:10","nodeType":"YulIdentifier","src":"10988:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10715:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10866:9:10","nodeType":"YulTypedName","src":"10866:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10881:4:10","nodeType":"YulTypedName","src":"10881:4:10","type":""}],"src":"10715:419:10"},{"body":{"nativeSrc":"11266:206:10","nodeType":"YulBlock","src":"11266:206:10","statements":[{"nativeSrc":"11276:26:10","nodeType":"YulAssignment","src":"11276:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"11288:9:10","nodeType":"YulIdentifier","src":"11288:9:10"},{"kind":"number","nativeSrc":"11299:2:10","nodeType":"YulLiteral","src":"11299:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11284:3:10","nodeType":"YulIdentifier","src":"11284:3:10"},"nativeSrc":"11284:18:10","nodeType":"YulFunctionCall","src":"11284:18:10"},"variableNames":[{"name":"tail","nativeSrc":"11276:4:10","nodeType":"YulIdentifier","src":"11276:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11356:6:10","nodeType":"YulIdentifier","src":"11356:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11369:9:10","nodeType":"YulIdentifier","src":"11369:9:10"},{"kind":"number","nativeSrc":"11380:1:10","nodeType":"YulLiteral","src":"11380:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11365:3:10","nodeType":"YulIdentifier","src":"11365:3:10"},"nativeSrc":"11365:17:10","nodeType":"YulFunctionCall","src":"11365:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11312:43:10","nodeType":"YulIdentifier","src":"11312:43:10"},"nativeSrc":"11312:71:10","nodeType":"YulFunctionCall","src":"11312:71:10"},"nativeSrc":"11312:71:10","nodeType":"YulExpressionStatement","src":"11312:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11437:6:10","nodeType":"YulIdentifier","src":"11437:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"11450:9:10","nodeType":"YulIdentifier","src":"11450:9:10"},{"kind":"number","nativeSrc":"11461:2:10","nodeType":"YulLiteral","src":"11461:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11446:3:10","nodeType":"YulIdentifier","src":"11446:3:10"},"nativeSrc":"11446:18:10","nodeType":"YulFunctionCall","src":"11446:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11393:43:10","nodeType":"YulIdentifier","src":"11393:43:10"},"nativeSrc":"11393:72:10","nodeType":"YulFunctionCall","src":"11393:72:10"},"nativeSrc":"11393:72:10","nodeType":"YulExpressionStatement","src":"11393:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"11140:332:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11230:9:10","nodeType":"YulTypedName","src":"11230:9:10","type":""},{"name":"value1","nativeSrc":"11242:6:10","nodeType":"YulTypedName","src":"11242:6:10","type":""},{"name":"value0","nativeSrc":"11250:6:10","nodeType":"YulTypedName","src":"11250:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11261:4:10","nodeType":"YulTypedName","src":"11261:4:10","type":""}],"src":"11140:332:10"},{"body":{"nativeSrc":"11506:152:10","nodeType":"YulBlock","src":"11506:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11523:1:10","nodeType":"YulLiteral","src":"11523:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"11526:77:10","nodeType":"YulLiteral","src":"11526:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11516:6:10","nodeType":"YulIdentifier","src":"11516:6:10"},"nativeSrc":"11516:88:10","nodeType":"YulFunctionCall","src":"11516:88:10"},"nativeSrc":"11516:88:10","nodeType":"YulExpressionStatement","src":"11516:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11620:1:10","nodeType":"YulLiteral","src":"11620:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"11623:4:10","nodeType":"YulLiteral","src":"11623:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"11613:6:10","nodeType":"YulIdentifier","src":"11613:6:10"},"nativeSrc":"11613:15:10","nodeType":"YulFunctionCall","src":"11613:15:10"},"nativeSrc":"11613:15:10","nodeType":"YulExpressionStatement","src":"11613:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11644:1:10","nodeType":"YulLiteral","src":"11644:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"11647:4:10","nodeType":"YulLiteral","src":"11647:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11637:6:10","nodeType":"YulIdentifier","src":"11637:6:10"},"nativeSrc":"11637:15:10","nodeType":"YulFunctionCall","src":"11637:15:10"},"nativeSrc":"11637:15:10","nodeType":"YulExpressionStatement","src":"11637:15:10"}]},"name":"panic_error_0x11","nativeSrc":"11478:180:10","nodeType":"YulFunctionDefinition","src":"11478:180:10"},{"body":{"nativeSrc":"11708:147:10","nodeType":"YulBlock","src":"11708:147:10","statements":[{"nativeSrc":"11718:25:10","nodeType":"YulAssignment","src":"11718:25:10","value":{"arguments":[{"name":"x","nativeSrc":"11741:1:10","nodeType":"YulIdentifier","src":"11741:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11723:17:10","nodeType":"YulIdentifier","src":"11723:17:10"},"nativeSrc":"11723:20:10","nodeType":"YulFunctionCall","src":"11723:20:10"},"variableNames":[{"name":"x","nativeSrc":"11718:1:10","nodeType":"YulIdentifier","src":"11718:1:10"}]},{"nativeSrc":"11752:25:10","nodeType":"YulAssignment","src":"11752:25:10","value":{"arguments":[{"name":"y","nativeSrc":"11775:1:10","nodeType":"YulIdentifier","src":"11775:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11757:17:10","nodeType":"YulIdentifier","src":"11757:17:10"},"nativeSrc":"11757:20:10","nodeType":"YulFunctionCall","src":"11757:20:10"},"variableNames":[{"name":"y","nativeSrc":"11752:1:10","nodeType":"YulIdentifier","src":"11752:1:10"}]},{"nativeSrc":"11786:16:10","nodeType":"YulAssignment","src":"11786:16:10","value":{"arguments":[{"name":"x","nativeSrc":"11797:1:10","nodeType":"YulIdentifier","src":"11797:1:10"},{"name":"y","nativeSrc":"11800:1:10","nodeType":"YulIdentifier","src":"11800:1:10"}],"functionName":{"name":"add","nativeSrc":"11793:3:10","nodeType":"YulIdentifier","src":"11793:3:10"},"nativeSrc":"11793:9:10","nodeType":"YulFunctionCall","src":"11793:9:10"},"variableNames":[{"name":"sum","nativeSrc":"11786:3:10","nodeType":"YulIdentifier","src":"11786:3:10"}]},{"body":{"nativeSrc":"11826:22:10","nodeType":"YulBlock","src":"11826:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11828:16:10","nodeType":"YulIdentifier","src":"11828:16:10"},"nativeSrc":"11828:18:10","nodeType":"YulFunctionCall","src":"11828:18:10"},"nativeSrc":"11828:18:10","nodeType":"YulExpressionStatement","src":"11828:18:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"11818:1:10","nodeType":"YulIdentifier","src":"11818:1:10"},{"name":"sum","nativeSrc":"11821:3:10","nodeType":"YulIdentifier","src":"11821:3:10"}],"functionName":{"name":"gt","nativeSrc":"11815:2:10","nodeType":"YulIdentifier","src":"11815:2:10"},"nativeSrc":"11815:10:10","nodeType":"YulFunctionCall","src":"11815:10:10"},"nativeSrc":"11812:36:10","nodeType":"YulIf","src":"11812:36:10"}]},"name":"checked_add_t_uint256","nativeSrc":"11664:191:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11695:1:10","nodeType":"YulTypedName","src":"11695:1:10","type":""},{"name":"y","nativeSrc":"11698:1:10","nodeType":"YulTypedName","src":"11698:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11704:3:10","nodeType":"YulTypedName","src":"11704:3:10","type":""}],"src":"11664:191:10"},{"body":{"nativeSrc":"11924:80:10","nodeType":"YulBlock","src":"11924:80:10","statements":[{"nativeSrc":"11934:22:10","nodeType":"YulAssignment","src":"11934:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"11949:6:10","nodeType":"YulIdentifier","src":"11949:6:10"}],"functionName":{"name":"mload","nativeSrc":"11943:5:10","nodeType":"YulIdentifier","src":"11943:5:10"},"nativeSrc":"11943:13:10","nodeType":"YulFunctionCall","src":"11943:13:10"},"variableNames":[{"name":"value","nativeSrc":"11934:5:10","nodeType":"YulIdentifier","src":"11934:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11992:5:10","nodeType":"YulIdentifier","src":"11992:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"11965:26:10","nodeType":"YulIdentifier","src":"11965:26:10"},"nativeSrc":"11965:33:10","nodeType":"YulFunctionCall","src":"11965:33:10"},"nativeSrc":"11965:33:10","nodeType":"YulExpressionStatement","src":"11965:33:10"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"11861:143:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11902:6:10","nodeType":"YulTypedName","src":"11902:6:10","type":""},{"name":"end","nativeSrc":"11910:3:10","nodeType":"YulTypedName","src":"11910:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11918:5:10","nodeType":"YulTypedName","src":"11918:5:10","type":""}],"src":"11861:143:10"},{"body":{"nativeSrc":"12087:274:10","nodeType":"YulBlock","src":"12087:274:10","statements":[{"body":{"nativeSrc":"12133:83:10","nodeType":"YulBlock","src":"12133:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12135:77:10","nodeType":"YulIdentifier","src":"12135:77:10"},"nativeSrc":"12135:79:10","nodeType":"YulFunctionCall","src":"12135:79:10"},"nativeSrc":"12135:79:10","nodeType":"YulExpressionStatement","src":"12135:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12108:7:10","nodeType":"YulIdentifier","src":"12108:7:10"},{"name":"headStart","nativeSrc":"12117:9:10","nodeType":"YulIdentifier","src":"12117:9:10"}],"functionName":{"name":"sub","nativeSrc":"12104:3:10","nodeType":"YulIdentifier","src":"12104:3:10"},"nativeSrc":"12104:23:10","nodeType":"YulFunctionCall","src":"12104:23:10"},{"kind":"number","nativeSrc":"12129:2:10","nodeType":"YulLiteral","src":"12129:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12100:3:10","nodeType":"YulIdentifier","src":"12100:3:10"},"nativeSrc":"12100:32:10","nodeType":"YulFunctionCall","src":"12100:32:10"},"nativeSrc":"12097:119:10","nodeType":"YulIf","src":"12097:119:10"},{"nativeSrc":"12226:128:10","nodeType":"YulBlock","src":"12226:128:10","statements":[{"nativeSrc":"12241:15:10","nodeType":"YulVariableDeclaration","src":"12241:15:10","value":{"kind":"number","nativeSrc":"12255:1:10","nodeType":"YulLiteral","src":"12255:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12245:6:10","nodeType":"YulTypedName","src":"12245:6:10","type":""}]},{"nativeSrc":"12270:74:10","nodeType":"YulAssignment","src":"12270:74:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12316:9:10","nodeType":"YulIdentifier","src":"12316:9:10"},{"name":"offset","nativeSrc":"12327:6:10","nodeType":"YulIdentifier","src":"12327:6:10"}],"functionName":{"name":"add","nativeSrc":"12312:3:10","nodeType":"YulIdentifier","src":"12312:3:10"},"nativeSrc":"12312:22:10","nodeType":"YulFunctionCall","src":"12312:22:10"},{"name":"dataEnd","nativeSrc":"12336:7:10","nodeType":"YulIdentifier","src":"12336:7:10"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"12280:31:10","nodeType":"YulIdentifier","src":"12280:31:10"},"nativeSrc":"12280:64:10","nodeType":"YulFunctionCall","src":"12280:64:10"},"variableNames":[{"name":"value0","nativeSrc":"12270:6:10","nodeType":"YulIdentifier","src":"12270:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"12010:351:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12057:9:10","nodeType":"YulTypedName","src":"12057:9:10","type":""},{"name":"dataEnd","nativeSrc":"12068:7:10","nodeType":"YulTypedName","src":"12068:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12080:6:10","nodeType":"YulTypedName","src":"12080:6:10","type":""}],"src":"12010:351:10"},{"body":{"nativeSrc":"12521:288:10","nodeType":"YulBlock","src":"12521:288:10","statements":[{"nativeSrc":"12531:26:10","nodeType":"YulAssignment","src":"12531:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"12543:9:10","nodeType":"YulIdentifier","src":"12543:9:10"},{"kind":"number","nativeSrc":"12554:2:10","nodeType":"YulLiteral","src":"12554:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12539:3:10","nodeType":"YulIdentifier","src":"12539:3:10"},"nativeSrc":"12539:18:10","nodeType":"YulFunctionCall","src":"12539:18:10"},"variableNames":[{"name":"tail","nativeSrc":"12531:4:10","nodeType":"YulIdentifier","src":"12531:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12611:6:10","nodeType":"YulIdentifier","src":"12611:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"12624:9:10","nodeType":"YulIdentifier","src":"12624:9:10"},{"kind":"number","nativeSrc":"12635:1:10","nodeType":"YulLiteral","src":"12635:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12620:3:10","nodeType":"YulIdentifier","src":"12620:3:10"},"nativeSrc":"12620:17:10","nodeType":"YulFunctionCall","src":"12620:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12567:43:10","nodeType":"YulIdentifier","src":"12567:43:10"},"nativeSrc":"12567:71:10","nodeType":"YulFunctionCall","src":"12567:71:10"},"nativeSrc":"12567:71:10","nodeType":"YulExpressionStatement","src":"12567:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12692:6:10","nodeType":"YulIdentifier","src":"12692:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"12705:9:10","nodeType":"YulIdentifier","src":"12705:9:10"},{"kind":"number","nativeSrc":"12716:2:10","nodeType":"YulLiteral","src":"12716:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12701:3:10","nodeType":"YulIdentifier","src":"12701:3:10"},"nativeSrc":"12701:18:10","nodeType":"YulFunctionCall","src":"12701:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12648:43:10","nodeType":"YulIdentifier","src":"12648:43:10"},"nativeSrc":"12648:72:10","nodeType":"YulFunctionCall","src":"12648:72:10"},"nativeSrc":"12648:72:10","nodeType":"YulExpressionStatement","src":"12648:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12774:6:10","nodeType":"YulIdentifier","src":"12774:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"12787:9:10","nodeType":"YulIdentifier","src":"12787:9:10"},{"kind":"number","nativeSrc":"12798:2:10","nodeType":"YulLiteral","src":"12798:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12783:3:10","nodeType":"YulIdentifier","src":"12783:3:10"},"nativeSrc":"12783:18:10","nodeType":"YulFunctionCall","src":"12783:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12730:43:10","nodeType":"YulIdentifier","src":"12730:43:10"},"nativeSrc":"12730:72:10","nodeType":"YulFunctionCall","src":"12730:72:10"},"nativeSrc":"12730:72:10","nodeType":"YulExpressionStatement","src":"12730:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12367:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12477:9:10","nodeType":"YulTypedName","src":"12477:9:10","type":""},{"name":"value2","nativeSrc":"12489:6:10","nodeType":"YulTypedName","src":"12489:6:10","type":""},{"name":"value1","nativeSrc":"12497:6:10","nodeType":"YulTypedName","src":"12497:6:10","type":""},{"name":"value0","nativeSrc":"12505:6:10","nodeType":"YulTypedName","src":"12505:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12516:4:10","nodeType":"YulTypedName","src":"12516:4:10","type":""}],"src":"12367:442:10"},{"body":{"nativeSrc":"12969:288:10","nodeType":"YulBlock","src":"12969:288:10","statements":[{"nativeSrc":"12979:26:10","nodeType":"YulAssignment","src":"12979:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"12991:9:10","nodeType":"YulIdentifier","src":"12991:9:10"},{"kind":"number","nativeSrc":"13002:2:10","nodeType":"YulLiteral","src":"13002:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12987:3:10","nodeType":"YulIdentifier","src":"12987:3:10"},"nativeSrc":"12987:18:10","nodeType":"YulFunctionCall","src":"12987:18:10"},"variableNames":[{"name":"tail","nativeSrc":"12979:4:10","nodeType":"YulIdentifier","src":"12979:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13059:6:10","nodeType":"YulIdentifier","src":"13059:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"13072:9:10","nodeType":"YulIdentifier","src":"13072:9:10"},{"kind":"number","nativeSrc":"13083:1:10","nodeType":"YulLiteral","src":"13083:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13068:3:10","nodeType":"YulIdentifier","src":"13068:3:10"},"nativeSrc":"13068:17:10","nodeType":"YulFunctionCall","src":"13068:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13015:43:10","nodeType":"YulIdentifier","src":"13015:43:10"},"nativeSrc":"13015:71:10","nodeType":"YulFunctionCall","src":"13015:71:10"},"nativeSrc":"13015:71:10","nodeType":"YulExpressionStatement","src":"13015:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13140:6:10","nodeType":"YulIdentifier","src":"13140:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"13153:9:10","nodeType":"YulIdentifier","src":"13153:9:10"},{"kind":"number","nativeSrc":"13164:2:10","nodeType":"YulLiteral","src":"13164:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13149:3:10","nodeType":"YulIdentifier","src":"13149:3:10"},"nativeSrc":"13149:18:10","nodeType":"YulFunctionCall","src":"13149:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13096:43:10","nodeType":"YulIdentifier","src":"13096:43:10"},"nativeSrc":"13096:72:10","nodeType":"YulFunctionCall","src":"13096:72:10"},"nativeSrc":"13096:72:10","nodeType":"YulExpressionStatement","src":"13096:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13222:6:10","nodeType":"YulIdentifier","src":"13222:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"13235:9:10","nodeType":"YulIdentifier","src":"13235:9:10"},{"kind":"number","nativeSrc":"13246:2:10","nodeType":"YulLiteral","src":"13246:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13231:3:10","nodeType":"YulIdentifier","src":"13231:3:10"},"nativeSrc":"13231:18:10","nodeType":"YulFunctionCall","src":"13231:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13178:43:10","nodeType":"YulIdentifier","src":"13178:43:10"},"nativeSrc":"13178:72:10","nodeType":"YulFunctionCall","src":"13178:72:10"},"nativeSrc":"13178:72:10","nodeType":"YulExpressionStatement","src":"13178:72:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"12815:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12925:9:10","nodeType":"YulTypedName","src":"12925:9:10","type":""},{"name":"value2","nativeSrc":"12937:6:10","nodeType":"YulTypedName","src":"12937:6:10","type":""},{"name":"value1","nativeSrc":"12945:6:10","nodeType":"YulTypedName","src":"12945:6:10","type":""},{"name":"value0","nativeSrc":"12953:6:10","nodeType":"YulTypedName","src":"12953:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12964:4:10","nodeType":"YulTypedName","src":"12964:4:10","type":""}],"src":"12815:442:10"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100f75760003560e01c806395ccea671161008a578063f4611fae11610059578063f4611fae1461031d578063fb0c75491461035a578063fe2510ee14610385578063ffdfa6de146103ae576100fe565b806395ccea671461025e578063dd78118814610287578063eb84e7f2146102b0578063f2fde38b146102f4576100fe565b80638c8c2003116100c65780638c8c2003146101af5780638da5cb5b146101ec578063902d72361461021757806394f1825b14610233576100fe565b80633da0e66e1461010357806347899a0b14610146578063715018a61461016f57806378dc335614610186576100fe565b366100fe57005b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190612027565b6103eb565b60405161013d97969594939291906120c9565b60405180910390f35b34801561015257600080fd5b5061016d60048036038101906101689190612138565b6104c3565b005b34801561017b57600080fd5b50610184610a16565b005b34801561019257600080fd5b506101ad60048036038101906101a89190612138565b610a2a565b005b3480156101bb57600080fd5b506101d660048036038101906101d19190612027565b610e6b565b6040516101e39190612178565b60405180910390f35b3480156101f857600080fd5b50610201610f29565b60405161020e9190612193565b60405180910390f35b610231600480360381019061022c9190612206565b610f53565b005b34801561023f57600080fd5b50610248610f77565b604051610255919061226d565b60405180910390f35b34801561026a57600080fd5b5061028560048036038101906102809190612288565b610f7e565b005b34801561029357600080fd5b506102ae60048036038101906102a991906122c8565b6110aa565b005b3480156102bc57600080fd5b506102d760048036038101906102d29190612027565b6110fb565b6040516102eb989796959493929190612352565b60405180910390f35b34801561030057600080fd5b5061031b600480360381019061031691906123d0565b6111bd565b005b34801561032957600080fd5b50610344600480360381019061033f9190612027565b611243565b6040516103519190612178565b60405180910390f35b34801561036657600080fd5b5061036f611300565b60405161037c919061226d565b60405180910390f35b34801561039157600080fd5b506103ac60048036038101906103a79190612027565b611306565b005b3480156103ba57600080fd5b506103d560048036038101906103d09190612027565b61176f565b6040516103e29190612178565b60405180910390f35b600080600080600080600080600260008a815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836005015484600101548560060160009054906101000a900460ff168660060160019054906101000a900460ff16975097509750975097509750975050919395979092949650565b6104cb61178f565b6000600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361056c576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff16156105b5576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff16156105fe576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010154421061063b576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828260405160200161064d919061241e565b604051602081830303815290604052805190602001201461069a576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610723576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ac576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108f25760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826005015460405161086f9061246a565b60006040518083038185875af1925050503d80600081146108ac576040519150601f19603f3d011682016040523d82523d6000602084013e6108b1565b606091505b50509050806108ec576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061096a565b6109698160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610a019392919061247f565b60405180910390a350610a12611854565b5050565b610a1e61185e565b610a2860006118e5565b565b610a3261178f565b6000600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ad3576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff1615610b1c576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615610b65576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600101544210610ba2576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282604051602001610bb4919061241e565b6040516020818303038152906040528051906020012014610c01576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d475760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260050154604051610cc49061246a565b60006040518083038185875af1925050503d8060008114610d01576040519150601f19603f3d011682016040523d82523d6000602084013e610d06565b606091505b5050905080610d41576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610dbf565b610dbe8160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610e569392919061247f565b60405180910390a350610e67611854565b5050565b600080600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610ef057508060060160009054906101000a900460ff165b80610f0957508060060160019054906101000a900460ff165b15610f18576000915050610f24565b80600101544210159150505b919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f5b61178f565b610f698484846000856119ab565b610f71611854565b50505050565b62093a8081565b610f8661185e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611073576000610fc4610f29565b73ffffffffffffffffffffffffffffffffffffffff1682604051610fe79061246a565b60006040518083038185875af1925050503d8060008114611024576040519150601f19603f3d011682016040523d82523d6000602084013e611029565b606091505b505090508061106d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106490612513565b60405180910390fd5b506110a6565b6110a561107e610f29565b828473ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b5050565b6110b261178f565b6110bf85858585856119ab565b6110ec3330838573ffffffffffffffffffffffffffffffffffffffff16611ec0909392919063ffffffff16565b6110f4611854565b5050505050565b60026020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b6111c561185e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112375760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161122e9190612193565b60405180910390fd5b611240816118e5565b50565b600080600260008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112c857508060060160009054906101000a900460ff165b806112e157508060060160019054906101000a900460ff165b156112f05760009150506112fb565b806001015442109150505b919050565b610e1081565b61130e61178f565b6000600260008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036113af576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff16156113f8576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615611441576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015442101561147f576040517f621e25c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611508576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160016101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361164e5760008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600501546040516115cb9061246a565b60006040518083038185875af1925050503d8060008114611608576040519150601f19603f3d011682016040523d82523d6000602084013e61160d565b606091505b5050905080611648576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506116c6565b6116c58160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827fa19ac6ff80a8c71a18b3fd648fa480fa092eceb40ca2af1fadc2a1cc6e1baf7b8360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015460405161175b929190612533565b60405180910390a35061176c611854565b50565b60036020528060005260406000206000915054906101000a900460ff1681565b6002600054036117cb576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b61184f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611808929190612533565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f42565b505050565b6001600081905550565b611866611fe4565b73ffffffffffffffffffffffffffffffffffffffff16611884610f29565b73ffffffffffffffffffffffffffffffffffffffff16146118e3576118a7611fe4565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016118da9190612193565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6003600086815260200190815260200160002060009054906101000a900460ff1615611a03576040517fe9204a0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1042611a11919061258b565b841080611a2b575062093a8042611a28919061258b565b84115b15611a62576040517ff8d10e8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ac8576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008103611b02576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b7057803414611b6f576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611c5857808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611bde9190612193565b602060405180830381865afa158015611bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1f91906125d4565b1015611c57576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6040518061010001604052808681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016000151581526020016000151581525060026000878152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff02191690831515021790555090505060016003600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16867ff7fed894f2fc26a47c345a04b644fb954bf11c27c2eec80f3f7ffb2cb07ea742858589604051611eb193929190612601565b60405180910390a45050505050565b611f3c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611ef593929190612638565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f42565b50505050565b600080602060008451602086016000885af180611f65576040513d6000823e3d81fd5b3d925060005191505060008214611f80576001811415611f9c565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611fde57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611fd59190612193565b60405180910390fd5b50505050565b600033905090565b600080fd5b6000819050919050565b61200481611ff1565b811461200f57600080fd5b50565b60008135905061202181611ffb565b92915050565b60006020828403121561203d5761203c611fec565b5b600061204b84828501612012565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061207f82612054565b9050919050565b61208f81612074565b82525050565b6000819050919050565b6120a881612095565b82525050565b60008115159050919050565b6120c3816120ae565b82525050565b600060e0820190506120de600083018a612086565b6120eb6020830189612086565b6120f86040830188612086565b612105606083018761209f565b612112608083018661209f565b61211f60a08301856120ba565b61212c60c08301846120ba565b98975050505050505050565b6000806040838503121561214f5761214e611fec565b5b600061215d85828601612012565b925050602061216e85828601612012565b9150509250929050565b600060208201905061218d60008301846120ba565b92915050565b60006020820190506121a86000830184612086565b92915050565b6121b781612095565b81146121c257600080fd5b50565b6000813590506121d4816121ae565b92915050565b6121e381612074565b81146121ee57600080fd5b50565b600081359050612200816121da565b92915050565b600080600080608085870312156122205761221f611fec565b5b600061222e87828801612012565b945050602061223f878288016121c5565b9350506040612250878288016121f1565b9250506060612261878288016121c5565b91505092959194509250565b6000602082019050612282600083018461209f565b92915050565b6000806040838503121561229f5761229e611fec565b5b60006122ad858286016121f1565b92505060206122be858286016121c5565b9150509250929050565b600080600080600060a086880312156122e4576122e3611fec565b5b60006122f288828901612012565b9550506020612303888289016121c5565b9450506040612314888289016121f1565b9350506060612325888289016121f1565b9250506080612336888289016121c5565b9150509295509295909350565b61234c81611ff1565b82525050565b600061010082019050612368600083018b612343565b612375602083018a61209f565b6123826040830189612086565b61238f6060830188612086565b61239c6080830187612086565b6123a960a083018661209f565b6123b660c08301856120ba565b6123c360e08301846120ba565b9998505050505050505050565b6000602082840312156123e6576123e5611fec565b5b60006123f4848285016121f1565b91505092915050565b6000819050919050565b61241861241382611ff1565b6123fd565b82525050565b600061242a8284612407565b60208201915081905092915050565b600081905092915050565b50565b6000612454600083612439565b915061245f82612444565b600082019050919050565b600061247582612447565b9150819050919050565b60006060820190506124946000830186612086565b6124a1602083018561209f565b6124ae6040830184612343565b949350505050565b600082825260208201905092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b60006124fd6013836124b6565b9150612508826124c7565b602082019050919050565b6000602082019050818103600083015261252c816124f0565b9050919050565b60006040820190506125486000830185612086565b612555602083018461209f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061259682612095565b91506125a183612095565b92508282019050808211156125b9576125b861255c565b5b92915050565b6000815190506125ce816121ae565b92915050565b6000602082840312156125ea576125e9611fec565b5b60006125f8848285016125bf565b91505092915050565b60006060820190506126166000830186612086565b612623602083018561209f565b612630604083018461209f565b949350505050565b600060608201905061264d6000830186612086565b61265a6020830185612086565b612667604083018461209f565b94935050505056fea2646970667358221220339dfeba43b48ddc821e53bede7ea6a20df7e539338c5cf1b5cabed95c48b48664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95CCEA67 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF4611FAE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xF4611FAE EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xFB0C7549 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xFE2510EE EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xFFDFA6DE EQ PUSH2 0x3AE JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xDD781188 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8C8C2003 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8C8C2003 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x902D7236 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x94F1825B EQ PUSH2 0x233 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3DA0E66E EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x47899A0B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x78DC3356 EQ PUSH2 0x186 JUMPI PUSH2 0xFE JUMP JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0xA16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0xF7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x23D0 JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x226D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x176F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH2 0x4CB PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x86F SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x96A JUMP JUMPDEST PUSH2 0x969 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xA01 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x247F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xA12 PUSH2 0x1854 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA1E PUSH2 0x185E JUMP JUMPDEST PUSH2 0xA28 PUSH1 0x0 PUSH2 0x18E5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD47 JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xCC4 SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xE56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x247F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xE67 PUSH2 0x1854 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEF0 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xF09 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xF18 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xF24 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF5B PUSH2 0x178F JUMP JUMPDEST PUSH2 0xF69 DUP5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0xF71 PUSH2 0x1854 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xF86 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1073 JUMPI PUSH1 0x0 PUSH2 0xFC4 PUSH2 0xF29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xFE7 SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1064 SWAP1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x10A5 PUSH2 0x107E PUSH2 0xF29 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x10BF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0x10EC CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EC0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10F4 PUSH2 0x1854 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x11C5 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1237 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1240 DUP2 PUSH2 0x18E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x12C8 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x12E1 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x12FB JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x130E PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1441 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH32 0x621E25C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164E JUMPI PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP1 PUSH2 0x246A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1608 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x160D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1648 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x16C5 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xA19AC6FF80A8C71A18B3FD648FA480FA092ECEB40CA2AF1FADC2A1CC6E1BAF7B DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x175B SWAP3 SWAP2 SWAP1 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x176C PUSH2 0x1854 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x17CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x184F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1808 SWAP3 SWAP2 SWAP1 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F42 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1866 PUSH2 0x1FE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1884 PUSH2 0xF29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E3 JUMPI PUSH2 0x18A7 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DA SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A03 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE9204A0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 TIMESTAMP PUSH2 0x1A11 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST DUP5 LT DUP1 PUSH2 0x1A2B JUMPI POP PUSH3 0x93A80 TIMESTAMP PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST DUP5 GT JUMPDEST ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8D10E8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x1B02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B70 JUMPI DUP1 CALLVALUE EQ PUSH2 0x1B6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C58 JUMPI DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDE SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1F SWAP2 SWAP1 PUSH2 0x25D4 JUMP JUMPDEST LT ISZERO PUSH2 0x1C57 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0xF7FED894F2FC26A47C345A04B644FB954BF11C27C2EEC80F3F7FFB2CB07EA742 DUP6 DUP6 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1EB1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2601 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F3C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F42 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1F65 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1F80 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FDE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD5 SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2004 DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x200F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2021 DUP2 PUSH2 0x1FFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203D JUMPI PUSH2 0x203C PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x204B DUP5 DUP3 DUP6 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207F DUP3 PUSH2 0x2054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208F DUP2 PUSH2 0x2074 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A8 DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C3 DUP2 PUSH2 0x20AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x20DE PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x20EB PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x20F8 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2105 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x2112 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x211F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x212C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x214F JUMPI PUSH2 0x214E PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x215D DUP6 DUP3 DUP7 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x216E DUP6 DUP3 DUP7 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21B7 DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP2 EQ PUSH2 0x21C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21D4 DUP2 PUSH2 0x21AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E3 DUP2 PUSH2 0x2074 JUMP JUMPDEST DUP2 EQ PUSH2 0x21EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2200 DUP2 PUSH2 0x21DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x222E DUP8 DUP3 DUP9 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x223F DUP8 DUP3 DUP9 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2250 DUP8 DUP3 DUP9 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2261 DUP8 DUP3 DUP9 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2282 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x229F JUMPI PUSH2 0x229E PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22AD DUP6 DUP3 DUP7 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22BE DUP6 DUP3 DUP7 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22E4 JUMPI PUSH2 0x22E3 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F2 DUP9 DUP3 DUP10 ADD PUSH2 0x2012 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2303 DUP9 DUP3 DUP10 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2314 DUP9 DUP3 DUP10 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2325 DUP9 DUP3 DUP10 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2336 DUP9 DUP3 DUP10 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x234C DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2368 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x2375 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x2382 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x238F PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x239C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x23A9 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x23B6 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x23C3 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x20BA JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E6 JUMPI PUSH2 0x23E5 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23F4 DUP5 DUP3 DUP6 ADD PUSH2 0x21F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2418 PUSH2 0x2413 DUP3 PUSH2 0x1FF1 JUMP JUMPDEST PUSH2 0x23FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242A DUP3 DUP5 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2454 PUSH1 0x0 DUP4 PUSH2 0x2439 JUMP JUMPDEST SWAP2 POP PUSH2 0x245F DUP3 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP3 PUSH2 0x2447 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2494 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x24A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x24AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2343 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FD PUSH1 0x13 DUP4 PUSH2 0x24B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2508 DUP3 PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252C DUP2 PUSH2 0x24F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2548 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2555 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2596 DUP3 PUSH2 0x2095 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A1 DUP4 PUSH2 0x2095 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25B9 JUMPI PUSH2 0x25B8 PUSH2 0x255C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CE DUP2 PUSH2 0x21AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x1FEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F8 DUP5 DUP3 DUP6 ADD PUSH2 0x25BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2616 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2623 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x2630 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x264D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x265A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x2667 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x209F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP14 INVALID 0xBA NUMBER 0xB4 DUP14 0xDC DUP3 0x1E MSTORE8 0xBE 0xDE PUSH31 0xA6A20DF7E539338C5CF1B5CABED95C48B48664736F6C634300081800330000 ","sourceMap":"513:12470:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11860:504;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;7498:1623;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;5866:1334:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11071:300;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2869:242:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2137:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12559:320;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3475:395;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1841:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10600:301:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2038:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9247:1181;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1941:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11860:504;11927:17;11954;11981:13;12004:14;12028:16;12054:14;12078:13;12108:17;12128:5;:15;12134:8;12128:15;;;;;;;;;;;12108:35;;12174:4;:14;;;;;;;;;;;;12202:4;:14;;;;;;;;;;;;12230:4;:10;;;;;;;;;;;;12254:4;:11;;;12279:4;:13;;;12306:4;:14;;;;;;;;;;;;12334:4;:13;;;;;;;;;;;;12153:204;;;;;;;;;;;;;;;11860:504;;;;;;;;;:::o;7498:1623::-;2500:21:7;:19;:21::i;:::-;7597:17:9::1;7617:5;:15;7623:8;7617:15;;;;;;;;;;;7597:35;;7681:1;7655:28;;:4;:14;;;;;;;;;;;;:28;;::::0;7651:80:::1;;7706:14;;;;;;;;;;;;;;7651:80;7753:4;:14;;;;;;;;;;;;7749:74;;;7790:22;;;;;;;;;;;;;;7749:74;7845:4;:13;;;;;;;;;;;;7841:72;;;7881:21;;;;;;;;;;;;;;7841:72;7954:4;:13;;;7935:15;:32;7931:87;;7990:17;;;;;;;;;;;;;;7931:87;8150:8;8138:6;8121:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;8111:35;;;;;;:47;8107:100;;8181:15;;;;;;;;;;;;;;8107:100;8301:4;:14;;;;;;;;;;;;8287:28;;:10;:28;;;8283:84;;8338:18;;;;;;;;;;;;;;8283:84;8480:4;:14;;;;;;;;;;;;8466:28;;:10;:28;;;8462:84;;8517:18;;;;;;;;;;;;;;8462:84;8581:4;8564;:14;;;:21;;;;;;;;;;;;;;;;;;8695:1;8673:24;;:4;:10;;;;;;;;;;;;:24;;::::0;8669:350:::1;;8742:12;8760:4;:14;;;;;;;;;;;;:19;;8787:4;:11;;;8760:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8741:62;;;8822:7;8817:70;;8856:16;;;;;;;;;;;;;;8817:70;8699:198;8669:350;;;8948:60;8980:4;:14;;;;;;;;;;;;8996:4;:11;;;8955:4;:10;;;;;;;;;;;;8948:31;;;;:60;;;;;:::i;:::-;8669:350;9066:4;:14;;;;;;;;;;;;9042:72;;9056:8;9042:72;9082:4;:10;;;;;;;;;;;;9094:4;:11;;;9107:6;9042:72;;;;;;;;:::i;:::-;;;;;;;;7587:1534;2542:20:7::0;:18;:20::i;:::-;7498:1623:9;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5866:1334:9:-;2500:21:7;:19;:21::i;:::-;5954:17:9::1;5974:5;:15;5980:8;5974:15;;;;;;;;;;;5954:35;;6038:1;6012:28;;:4;:14;;;;;;;;;;;;:28;;::::0;6008:80:::1;;6063:14;;;;;;;;;;;;;;6008:80;6110:4;:14;;;;;;;;;;;;6106:74;;;6147:22;;;;;;;;;;;;;;6106:74;6202:4;:13;;;;;;;;;;;;6198:72;;;6238:21;;;;;;;;;;;;;;6198:72;6311:4;:13;;;6292:15;:32;6288:87;;6347:17;;;;;;;;;;;;;;6288:87;6507:8;6495:6;6478:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;6468:35;;;;;;:47;6464:100;;6538:15;;;;;;;;;;;;;;6464:100;6685:4;6668;:14;;;:21;;;;;;;;;;;;;;;;;;6774:1;6752:24;;:4;:10;;;;;;;;;;;;:24;;::::0;6748:350:::1;;6821:12;6839:4;:14;;;;;;;;;;;;:19;;6866:4;:11;;;6839:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6820:62;;;6901:7;6896:70;;6935:16;;;;;;;;;;;;;;6896:70;6778:198;6748:350;;;7027:60;7059:4;:14;;;;;;;;;;;;7075:4;:11;;;7034:4;:10;;;;;;;;;;;;7027:31;;;;:60;;;;;:::i;:::-;6748:350;7145:4;:14;;;;;;;;;;;;7121:72;;7135:8;7121:72;7161:4;:10;;;;;;;;;;;;7173:4;:11;;;7186:6;7121:72;;;;;;;;:::i;:::-;;;;;;;;5944:1256;2542:20:7::0;:18;:20::i;:::-;5866:1334:9;;:::o;11071:300::-;11131:4;11147:17;11167:5;:15;11173:8;11167:15;;;;;;;;;;;11147:35;;11231:1;11205:28;;:4;:14;;;;;;;;;;;;:28;;;:46;;;;11237:4;:14;;;;;;;;;;;;11205:46;:63;;;;11255:4;:13;;;;;;;;;;;;11205:63;11201:106;;;11291:5;11284:12;;;;;11201:106;11351:4;:13;;;11332:15;:32;;11325:39;;;11071:300;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2869:242:9:-;2500:21:7;:19;:21::i;:::-;3040:64:9::1;3054:8;3064;3074:9;3093:1;3097:6;3040:13;:64::i;:::-;2542:20:7::0;:18;:20::i;:::-;2869:242:9;;;;:::o;2137:45::-;2176:6;2137:45;:::o;12559:320::-;1531:13:0;:11;:13::i;:::-;12667:1:9::1;12650:19;;:5;:19;;::::0;12646:227:::1;;12686:12;12704:7;:5;:7::i;:::-;:12;;12724:6;12704:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12685:50;;;12757:7;12749:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;12671:128;12646:227;;;12819:43;12846:7;:5;:7::i;:::-;12855:6;12826:5;12819:26;;;;:43;;;;;:::i;:::-;12646:227;12559:320:::0;;:::o;3475:395::-;2500:21:7;:19;:21::i;:::-;3666:59:9::1;3680:8;3690;3700:9;3711:5;3718:6;3666:13;:59::i;:::-;3798:65;3829:10;3849:4;3856:6;3805:5;3798:30;;;;:65;;;;;;:::i;:::-;2542:20:7::0;:18;:20::i;:::-;3475:395:9;;;;;:::o;1841:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;10600:301:9:-;10662:4;10678:17;10698:5;:15;10704:8;10698:15;;;;;;;;;;;10678:35;;10762:1;10736:28;;:4;:14;;;;;;;;;;;;:28;;;:46;;;;10768:4;:14;;;;;;;;;;;;10736:46;:63;;;;10786:4;:13;;;;;;;;;;;;10736:63;10732:106;;;10822:5;10815:12;;;;;10732:106;10881:4;:13;;;10863:15;:31;10856:38;;;10600:301;;;;:::o;2038:46::-;2077:7;2038:46;:::o;9247:1181::-;2500:21:7;:19;:21::i;:::-;9317:17:9::1;9337:5;:15;9343:8;9337:15;;;;;;;;;;;9317:35;;9401:1;9375:28;;:4;:14;;;;;;;;;;;;:28;;::::0;9371:80:::1;;9426:14;;;;;;;;;;;;;;9371:80;9473:4;:14;;;;;;;;;;;;9469:74;;;9510:22;;;;;;;;;;;;;;9469:74;9565:4;:13;;;;;;;;;;;;9561:72;;;9601:21;;;;;;;;;;;;;;9561:72;9673:4;:13;;;9655:15;:31;9651:89;;;9709:20;;;;;;;;;;;;;;9651:89;9817:4;:14;;;;;;;;;;;;9803:28;;:10;:28;;;9799:84;;9854:18;;;;;;;;;;;;;;9799:84;9917:4;9901;:13;;;:20;;;;;;;;;;;;;;;;;;10011:1;9989:24;;:4;:10;;;;;;;;;;;;:24;;::::0;9985:350:::1;;10058:12;10076:4;:14;;;;;;;;;;;;:19;;10103:4;:11;;;10076:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10057:62;;;10138:7;10133:70;;10172:16;;;;;;;;;;;;;;10133:70;10015:198;9985:350;;;10264:60;10296:4;:14;;;;;;;;;;;;10312:4;:11;;;10271:4;:10;;;;;;;;;;;;10264:31;;;;:60;;;;;:::i;:::-;9985:350;10381:4;:14;;;;;;;;;;;;10358:63;;10371:8;10358:63;10397:4;:10;;;;;;;;;;;;10409:4;:11;;;10358:63;;;;;;;:::i;:::-;;;;;;;;9307:1121;2542:20:7::0;:18;:20::i;:::-;9247:1181:9;:::o;1941:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;1219:160:5:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2888:208:7:-;1857:1;3068:7;:21;;;;2888:208::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;4213:1468:9:-;4391:12;:22;4404:8;4391:22;;;;;;;;;;;;;;;;;;;;;4387:81;;;4436:21;;;;;;;;;;;;;;4387:81;2077:7;4501:15;:30;;;;:::i;:::-;4490:8;:41;:86;;;;2176:6;4546:15;:30;;;;:::i;:::-;4535:8;:41;4490:86;4486:141;;;4599:17;;;;;;;;;;;;;;4486:141;4670:1;4649:23;;:9;:23;;;4645:79;;4695:18;;;;;;;;;;;;;;4645:79;4756:1;4746:6;:11;4742:64;;4780:15;;;;;;;;;;;;;;4742:64;4906:1;4889:19;;:5;:19;;;4885:129;;4941:6;4928:9;:19;4924:80;;4974:15;;;;;;;;;;;;;;4924:80;4885:129;5094:1;5077:19;;:5;:19;;;5073:160;;5154:6;5123:5;5116:23;;;5140:10;5116:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;5112:111;;;5187:21;;;;;;;;;;;;;;5112:111;5073:160;5269:262;;;;;;;;5298:8;5269:262;;;;5330:8;5269:262;;;;5363:10;5269:262;;;;;;5398:9;5269:262;;;;;;5428:5;5269:262;;;;;;5455:6;5269:262;;;;5486:5;5269:262;;;;;;5515:5;5269:262;;;;;5251:5;:15;5257:8;5251:15;;;;;;;;;;;:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5575:4;5550:12;:22;5563:8;5550:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5639:9;5603:71;;5627:10;5603:71;;5617:8;5603:71;5650:5;5657:6;5665:8;5603:71;;;;;;;;:::i;:::-;;;;;;;;4213:1468;;;;;:::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:77::-;1420:7;1449:5;1438:16;;1383:77;;;:::o;1466:118::-;1553:24;1571:5;1553:24;:::i;:::-;1548:3;1541:37;1466:118;;:::o;1590:90::-;1624:7;1667:5;1660:13;1653:21;1642:32;;1590:90;;;:::o;1686:109::-;1767:21;1782:5;1767:21;:::i;:::-;1762:3;1755:34;1686:109;;:::o;1801:862::-;2050:4;2088:3;2077:9;2073:19;2065:27;;2102:71;2170:1;2159:9;2155:17;2146:6;2102:71;:::i;:::-;2183:72;2251:2;2240:9;2236:18;2227:6;2183:72;:::i;:::-;2265;2333:2;2322:9;2318:18;2309:6;2265:72;:::i;:::-;2347;2415:2;2404:9;2400:18;2391:6;2347:72;:::i;:::-;2429:73;2497:3;2486:9;2482:19;2473:6;2429:73;:::i;:::-;2512:67;2574:3;2563:9;2559:19;2550:6;2512:67;:::i;:::-;2589;2651:3;2640:9;2636:19;2627:6;2589:67;:::i;:::-;1801:862;;;;;;;;;;:::o;2669:474::-;2737:6;2745;2794:2;2782:9;2773:7;2769:23;2765:32;2762:119;;;2800:79;;:::i;:::-;2762:119;2920:1;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2891:117;3047:2;3073:53;3118:7;3109:6;3098:9;3094:22;3073:53;:::i;:::-;3063:63;;3018:118;2669:474;;;;;:::o;3149:210::-;3236:4;3274:2;3263:9;3259:18;3251:26;;3287:65;3349:1;3338:9;3334:17;3325:6;3287:65;:::i;:::-;3149:210;;;;:::o;3365:222::-;3458:4;3496:2;3485:9;3481:18;3473:26;;3509:71;3577:1;3566:9;3562:17;3553:6;3509:71;:::i;:::-;3365:222;;;;:::o;3593:122::-;3666:24;3684:5;3666:24;:::i;:::-;3659:5;3656:35;3646:63;;3705:1;3702;3695:12;3646:63;3593:122;:::o;3721:139::-;3767:5;3805:6;3792:20;3783:29;;3821:33;3848:5;3821:33;:::i;:::-;3721:139;;;;:::o;3866:122::-;3939:24;3957:5;3939:24;:::i;:::-;3932:5;3929:35;3919:63;;3978:1;3975;3968:12;3919:63;3866:122;:::o;3994:139::-;4040:5;4078:6;4065:20;4056:29;;4094:33;4121:5;4094:33;:::i;:::-;3994:139;;;;:::o;4139:765::-;4225:6;4233;4241;4249;4298:3;4286:9;4277:7;4273:23;4269:33;4266:120;;;4305:79;;:::i;:::-;4266:120;4425:1;4450:53;4495:7;4486:6;4475:9;4471:22;4450:53;:::i;:::-;4440:63;;4396:117;4552:2;4578:53;4623:7;4614:6;4603:9;4599:22;4578:53;:::i;:::-;4568:63;;4523:118;4680:2;4706:53;4751:7;4742:6;4731:9;4727:22;4706:53;:::i;:::-;4696:63;;4651:118;4808:2;4834:53;4879:7;4870:6;4859:9;4855:22;4834:53;:::i;:::-;4824:63;;4779:118;4139:765;;;;;;;:::o;4910:222::-;5003:4;5041:2;5030:9;5026:18;5018:26;;5054:71;5122:1;5111:9;5107:17;5098:6;5054:71;:::i;:::-;4910:222;;;;:::o;5138:474::-;5206:6;5214;5263:2;5251:9;5242:7;5238:23;5234:32;5231:119;;;5269:79;;:::i;:::-;5231:119;5389:1;5414:53;5459:7;5450:6;5439:9;5435:22;5414:53;:::i;:::-;5404:63;;5360:117;5516:2;5542:53;5587:7;5578:6;5567:9;5563:22;5542:53;:::i;:::-;5532:63;;5487:118;5138:474;;;;;:::o;5618:911::-;5713:6;5721;5729;5737;5745;5794:3;5782:9;5773:7;5769:23;5765:33;5762:120;;;5801:79;;:::i;:::-;5762:120;5921:1;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5892:117;6048:2;6074:53;6119:7;6110:6;6099:9;6095:22;6074:53;:::i;:::-;6064:63;;6019:118;6176:2;6202:53;6247:7;6238:6;6227:9;6223:22;6202:53;:::i;:::-;6192:63;;6147:118;6304:2;6330:53;6375:7;6366:6;6355:9;6351:22;6330:53;:::i;:::-;6320:63;;6275:118;6432:3;6459:53;6504:7;6495:6;6484:9;6480:22;6459:53;:::i;:::-;6449:63;;6403:119;5618:911;;;;;;;;:::o;6535:118::-;6622:24;6640:5;6622:24;:::i;:::-;6617:3;6610:37;6535:118;;:::o;6659:973::-;6936:4;6974:3;6963:9;6959:19;6951:27;;6988:71;7056:1;7045:9;7041:17;7032:6;6988:71;:::i;:::-;7069:72;7137:2;7126:9;7122:18;7113:6;7069:72;:::i;:::-;7151;7219:2;7208:9;7204:18;7195:6;7151:72;:::i;:::-;7233;7301:2;7290:9;7286:18;7277:6;7233:72;:::i;:::-;7315:73;7383:3;7372:9;7368:19;7359:6;7315:73;:::i;:::-;7398;7466:3;7455:9;7451:19;7442:6;7398:73;:::i;:::-;7481:67;7543:3;7532:9;7528:19;7519:6;7481:67;:::i;:::-;7558;7620:3;7609:9;7605:19;7596:6;7558:67;:::i;:::-;6659:973;;;;;;;;;;;:::o;7638:329::-;7697:6;7746:2;7734:9;7725:7;7721:23;7717:32;7714:119;;;7752:79;;:::i;:::-;7714:119;7872:1;7897:53;7942:7;7933:6;7922:9;7918:22;7897:53;:::i;:::-;7887:63;;7843:117;7638:329;;;;:::o;7973:79::-;8012:7;8041:5;8030:16;;7973:79;;;:::o;8058:157::-;8163:45;8183:24;8201:5;8183:24;:::i;:::-;8163:45;:::i;:::-;8158:3;8151:58;8058:157;;:::o;8221:256::-;8333:3;8348:75;8419:3;8410:6;8348:75;:::i;:::-;8448:2;8443:3;8439:12;8432:19;;8468:3;8461:10;;8221:256;;;;:::o;8483:147::-;8584:11;8621:3;8606:18;;8483:147;;;;:::o;8636:114::-;;:::o;8756:398::-;8915:3;8936:83;9017:1;9012:3;8936:83;:::i;:::-;8929:90;;9028:93;9117:3;9028:93;:::i;:::-;9146:1;9141:3;9137:11;9130:18;;8756:398;;;:::o;9160:379::-;9344:3;9366:147;9509:3;9366:147;:::i;:::-;9359:154;;9530:3;9523:10;;9160:379;;;:::o;9545:442::-;9694:4;9732:2;9721:9;9717:18;9709:26;;9745:71;9813:1;9802:9;9798:17;9789:6;9745:71;:::i;:::-;9826:72;9894:2;9883:9;9879:18;9870:6;9826:72;:::i;:::-;9908;9976:2;9965:9;9961:18;9952:6;9908:72;:::i;:::-;9545:442;;;;;;:::o;9993:169::-;10077:11;10111:6;10106:3;10099:19;10151:4;10146:3;10142:14;10127:29;;9993:169;;;;:::o;10168:::-;10308:21;10304:1;10296:6;10292:14;10285:45;10168:169;:::o;10343:366::-;10485:3;10506:67;10570:2;10565:3;10506:67;:::i;:::-;10499:74;;10582:93;10671:3;10582:93;:::i;:::-;10700:2;10695:3;10691:12;10684:19;;10343:366;;;:::o;10715:419::-;10881:4;10919:2;10908:9;10904:18;10896:26;;10968:9;10962:4;10958:20;10954:1;10943:9;10939:17;10932:47;10996:131;11122:4;10996:131;:::i;:::-;10988:139;;10715:419;;;:::o;11140:332::-;11261:4;11299:2;11288:9;11284:18;11276:26;;11312:71;11380:1;11369:9;11365:17;11356:6;11312:71;:::i;:::-;11393:72;11461:2;11450:9;11446:18;11437:6;11393:72;:::i;:::-;11140:332;;;;;:::o;11478:180::-;11526:77;11523:1;11516:88;11623:4;11620:1;11613:15;11647:4;11644:1;11637:15;11664:191;11704:3;11723:20;11741:1;11723:20;:::i;:::-;11718:25;;11757:20;11775:1;11757:20;:::i;:::-;11752:25;;11800:1;11797;11793:9;11786:16;;11821:3;11818:1;11815:10;11812:36;;;11828:18;;:::i;:::-;11812:36;11664:191;;;;:::o;11861:143::-;11918:5;11949:6;11943:13;11934:22;;11965:33;11992:5;11965:33;:::i;:::-;11861:143;;;;:::o;12010:351::-;12080:6;12129:2;12117:9;12108:7;12104:23;12100:32;12097:119;;;12135:79;;:::i;:::-;12097:119;12255:1;12280:64;12336:7;12327:6;12316:9;12312:22;12280:64;:::i;:::-;12270:74;;12226:128;12010:351;;;;:::o;12367:442::-;12516:4;12554:2;12543:9;12539:18;12531:26;;12567:71;12635:1;12624:9;12620:17;12611:6;12567:71;:::i;:::-;12648:72;12716:2;12705:9;12701:18;12692:6;12648:72;:::i;:::-;12730;12798:2;12787:9;12783:18;12774:6;12730:72;:::i;:::-;12367:442;;;;;;:::o;12815:::-;12964:4;13002:2;12991:9;12987:18;12979:26;;13015:71;13083:1;13072:9;13068:17;13059:6;13015:71;:::i;:::-;13096:72;13164:2;13153:9;13149:18;13140:6;13096:72;:::i;:::-;13178;13246:2;13235:9;13231:18;13222:6;13178:72;:::i;:::-;12815:442;;;;;;:::o"},"methodIdentifiers":{"MAX_TIMELOCK()":"94f1825b","MIN_TIMELOCK()":"fb0c7549","canComplete(bytes32)":"f4611fae","canRefund(bytes32)":"8c8c2003","completeSwap(bytes32,bytes32)":"78dc3356","completeSwapAsInitiator(bytes32,bytes32)":"47899a0b","emergencyWithdraw(address,uint256)":"95ccea67","getSwap(bytes32)":"3da0e66e","hashlockUsed(bytes32)":"ffdfa6de","initiateSwap(bytes32,uint256,address,uint256)":"902d7236","initiateTokenSwap(bytes32,uint256,address,address,uint256)":"dd781188","owner()":"8da5cb5b","refundSwap(bytes32)":"fe2510ee","renounceOwnership()":"715018a6","swaps(bytes32)":"eb84e7f2","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HashlockAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimelock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAlreadyCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAlreadyRefunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimelockExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimelockNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"SwapCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"SwapInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SwapRefunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"canComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"canRefund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"completeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"completeSwapAsInitiator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"getSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashlockUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateTokenSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"refundSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"swaps\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Implements atomic swap functionality with hashlock and timelock This is the core contract for cross-chain swaps between Ethereum and Aptos Supports both ETH and ERC-20 tokens\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"canComplete(bytes32)\":{\"details\":\"Checks if a swap can be completed\",\"params\":{\"hashlock\":\"The hash of the secret\"},\"returns\":{\"_0\":\"bool True if the swap can be completed\"}},\"canRefund(bytes32)\":{\"details\":\"Checks if a swap can be refunded\",\"params\":{\"hashlock\":\"The hash of the secret\"},\"returns\":{\"_0\":\"bool True if the swap can be refunded\"}},\"completeSwap(bytes32,bytes32)\":{\"details\":\"Completes a swap by providing the secret\",\"params\":{\"hashlock\":\"The hash of the secret\",\"secret\":\"The secret that generates the hashlock\"}},\"completeSwapAsInitiator(bytes32,bytes32)\":{\"details\":\"Completes a swap by the initiator (for cross-chain atomic swaps) This allows the initiator to complete their own swap when they are also the recipient\",\"params\":{\"hashlock\":\"The hash of the secret\",\"secret\":\"The secret that generates the hashlock\"}},\"emergencyWithdraw(address,uint256)\":{\"details\":\"Allows the owner to withdraw any stuck tokens (emergency only)\",\"params\":{\"amount\":\"The amount to withdraw\",\"token\":\"The token address to withdraw\"}},\"getSwap(bytes32)\":{\"details\":\"Gets the details of a swap\",\"params\":{\"hashlock\":\"The hash of the secret\"},\"returns\":{\"amount\":\"The amount of tokens\",\"completed\":\"Whether the swap has been completed\",\"initiator\":\"The address that initiated the swap\",\"recipient\":\"The address that will receive the tokens\",\"refunded\":\"Whether the swap has been refunded\",\"timelock\":\"The expiration timestamp\",\"token\":\"The token address\"}},\"initiateSwap(bytes32,uint256,address,uint256)\":{\"details\":\"Initiates a new atomic swap with ETH\",\"params\":{\"amount\":\"The amount of ETH to swap\",\"hashlock\":\"The hash of the secret only (keccak256(secret))\",\"recipient\":\"The address that will receive the tokens\",\"timelock\":\"The expiration timestamp\"}},\"initiateTokenSwap(bytes32,uint256,address,address,uint256)\":{\"details\":\"Initiates a new atomic swap with ERC-20 tokens\",\"params\":{\"amount\":\"The amount of tokens to swap\",\"hashlock\":\"The hash of the secret only (keccak256(secret))\",\"recipient\":\"The address that will receive the tokens\",\"timelock\":\"The expiration timestamp\",\"token\":\"The ERC-20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"refundSwap(bytes32)\":{\"details\":\"Refunds a swap after the timelock expires\",\"params\":{\"hashlock\":\"The hash of the secret\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AtomicSwap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AtomicSwap.sol\":\"AtomicSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/AtomicSwap.sol\":{\"keccak256\":\"0x8a491b8abb22b71261a2ac7aba3d1671000059719782544083aa7a5d4f71a71f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7c34336ffa5fb5320f220ea341bd8755004cbd074c35016e01371635ef3f18f\",\"dweb:/ipfs/QmYRoosfnHAnYcDir47JBzpCetgBjof1WTvxw7rPDQMvqq\"]}},\"version\":1}"}}}}}