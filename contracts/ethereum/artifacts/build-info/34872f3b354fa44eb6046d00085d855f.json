{"id":"34872f3b354fa44eb6046d00085d855f","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/AtomicSwap.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n\n/**\n * @title AtomicSwap\n * @dev Implements atomic swap functionality with hashlock and timelock\n * This is the core contract for cross-chain swaps between Ethereum and Aptos\n * Supports both ETH and ERC-20 tokens\n */\ncontract AtomicSwap is ReentrancyGuard, Ownable {\n    constructor() Ownable(msg.sender) {\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(\"AtomicSwap\")),\n                keccak256(bytes(\"1\")),\n                block.chainid,\n                address(this)\n            )\n        );\n    }\n    // EIP-712 Domain Separator\n    bytes32 public immutable DOMAIN_SEPARATOR;\n    \n    // EIP-712 TypeHashes\n    bytes32 public constant INITIATE_SWAP_TYPEHASH = keccak256(\n        \"InitiateSwap(address initiator,bytes32 hashlock,uint256 timelock,address recipient,address token,uint256 amount,uint256 nonce,uint256 deadline)\"\n    );\n\n    using SafeERC20 for IERC20;\n    using ECDSA for bytes32;\n\n    // Nonces for meta-transactions (prevent replay attacks)\n    mapping(address => uint256) public nonces;\n    \n    // Mapping to track used meta-transaction signatures\n    mapping(bytes32 => bool) public usedMetaSignatures;\n    \n    // Events\n    event SwapInitiated(\n        bytes32 indexed hashlock,\n        address indexed initiator,\n        address indexed recipient,\n        address token,\n        uint256 amount,\n        uint256 timelock\n    );\n    \n    event SwapCompleted(\n        bytes32 indexed hashlock,\n        address indexed recipient,\n        address token,\n        uint256 amount,\n        bytes32 secret\n    );\n    \n    event SwapRefunded(\n        bytes32 indexed hashlock,\n        address indexed initiator,\n        address token,\n        uint256 amount\n    );\n    \n    // Struct to store swap information\n    struct Swap {\n        bytes32 hashlock;        // Hash of the secret\n        uint256 timelock;        // Expiration timestamp\n        address initiator;       // Address that initiated the swap\n        address recipient;       // Address that will receive the tokens\n        address token;           // Token address (address(0) for ETH)\n        uint256 amount;          // Amount of tokens to swap\n        bool completed;          // Whether the swap has been completed\n        bool refunded;           // Whether the swap has been refunded\n    }\n\n    struct InitiateSwapMeta {\n        address initiator;       // The actual user initiating the swap\n        bytes32 hashlock;        // Hash of the secret\n        uint256 timelock;        // Expiration timestamp\n        address recipient;       // Address that will receive the tokens\n        address token;           // Token address (address(0) for ETH)\n        uint256 amount;          // Amount of tokens to swap\n        uint256 nonce;           // Nonce for replay protection\n        uint256 deadline;        // Signature expiration time\n    }\n    \n    // Mapping from hashlock to swap details\n    mapping(bytes32 => Swap) public swaps;\n    \n    // Mapping to track if a hashlock has been used\n    mapping(bytes32 => bool) public hashlockUsed;\n    \n    // Minimum timelock duration (1 hour)\n    uint256 public constant MIN_TIMELOCK = 1 hours;\n    \n    // Maximum timelock duration (7 days)\n    uint256 public constant MAX_TIMELOCK = 7 days;\n    \n    // Errors\n    error HashlockAlreadyUsed();\n    error SwapNotFound();\n    error SwapAlreadyCompleted();\n    error SwapAlreadyRefunded();\n    error TimelockNotExpired();\n    error TimelockExpired();\n    error InvalidSecret();\n    error InvalidTimelock();\n    error InvalidRecipient();\n    error InvalidAmount();\n    error InsufficientBalance();\n    error TransferFailed();\n    error InvalidSignature();\n    error SignatureExpired();\n    error SignatureAlreadyUsed();\n    error InvalidNonce();\n    \n    /**\n     * @dev Initiates a new atomic swap with ETH\n     * @param hashlock The hash of the secret only (keccak256(secret))\n     * @param timelock The expiration timestamp\n     * @param recipient The address that will receive the tokens\n     * @param amount The amount of ETH to swap\n     */\n    function initiateSwap(\n        bytes32 hashlock,\n        uint256 timelock,\n        address recipient,\n        uint256 amount\n    ) external payable nonReentrant {\n        _initiateSwap(hashlock, timelock, recipient, address(0), amount);\n    }\n\n\n     /**\n     * @dev Meta-transaction version of initiateSwap - allows gasless swap initiation\n     * @param metaData The swap initiation data signed by the user\n     * @param signature The user's signature\n     */\n    function initiateSwapMeta(\n        InitiateSwapMeta calldata metaData,\n        bytes calldata signature\n    ) external payable nonReentrant {\n        // Verify signature deadline\n        if (block.timestamp > metaData.deadline) {\n            revert SignatureExpired();\n        }\n        \n        // // Verify nonce\n        // if (metaData.nonce != nonces[metaData.initiator]) {\n        //     revert InvalidNonce();\n        \n        \n        // Create signature hash\n        bytes32 structHash = keccak256(\n            abi.encode(\n                INITIATE_SWAP_TYPEHASH,\n                metaData.initiator,\n                metaData.hashlock,\n                metaData.timelock,\n                metaData.recipient,\n                metaData.token,\n                metaData.amount,\n                metaData.nonce,\n                metaData.deadline\n            )\n        );\n        \n        bytes32 hash = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash)\n        );\n        \n        // Check if signature has been used\n        if (usedMetaSignatures[hash]) {\n            revert SignatureAlreadyUsed();\n        }\n        \n        // Verify signature\n        address signer = hash.recover(signature);\n        if (signer != metaData.initiator) {\n            revert InvalidSignature();\n        }\n        \n        // Mark signature as used and increment nonce\n        usedMetaSignatures[hash] = true;\n        nonces[metaData.initiator]++;\n        \n        // Execute the swap initiation\n        _initiateSwap(metaData.hashlock, metaData.timelock, metaData.recipient, address(0), metaData.amount);\n    }\n\n    function _initiateSwapHelper(\n        bytes32 hashlock,\n        uint256 timelock,\n        address recipient,\n        uint256 amount\n    ) internal nonReentrant {\n        _initiateSwap(hashlock, timelock, recipient, address(0), amount);\n    }\n    \n    /**\n     * @dev Initiates a new atomic swap with ERC-20 tokens\n     * @param hashlock The hash of the secret only (keccak256(secret))\n     * @param timelock The expiration timestamp\n     * @param recipient The address that will receive the tokens\n     * @param token The ERC-20 token address\n     * @param amount The amount of tokens to swap\n     */\n    function initiateTokenSwap(\n        bytes32 hashlock,\n        uint256 timelock,\n        address recipient,\n        address token,\n        uint256 amount\n    ) external nonReentrant {\n        _initiateSwap(hashlock, timelock, recipient, token, amount);\n        \n        // Transfer tokens from initiator to contract\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n    }\n    \n    /**\n     * @dev Internal function to initiate a swap\n     * @param hashlock The hash of the secret\n     * @param timelock The expiration timestamp\n     * @param recipient The address that will receive the tokens\n     * @param token The token address (address(0) for ETH)\n     * @param amount The amount of tokens to swap\n     */\n    function _initiateSwap(\n        bytes32 hashlock,\n        uint256 timelock,\n        address recipient,\n        address token,\n        uint256 amount\n    ) internal {\n        if (hashlockUsed[hashlock]) {\n            revert HashlockAlreadyUsed();\n        }\n        \n        if (timelock < block.timestamp + MIN_TIMELOCK || timelock > block.timestamp + MAX_TIMELOCK) {\n            revert InvalidTimelock();\n        }\n        \n        if (recipient == address(0)) {\n            revert InvalidRecipient();\n        }\n        \n        if (amount == 0) {\n            revert InvalidAmount();\n        }\n        \n        // For ETH swaps, verify the correct amount was sent\n        if (token == address(0)) {\n            if (msg.value != amount) {\n                revert InvalidAmount();\n            }\n        }\n        \n        // Check balance for token swaps\n        if (token != address(0)) {\n            if (IERC20(token).balanceOf(msg.sender) < amount) {\n                revert InsufficientBalance();\n            }\n        }\n        \n        swaps[hashlock] = Swap({\n            hashlock: hashlock,\n            timelock: timelock,\n            initiator: msg.sender,\n            recipient: recipient,\n            token: token,\n            amount: amount,\n            completed: false,\n            refunded: false\n        });\n        \n        hashlockUsed[hashlock] = true;\n        \n        emit SwapInitiated(hashlock, msg.sender, recipient, token, amount, timelock);\n    }\n    \n    /**\n     * @dev Completes a swap by providing the secret\n     * @param hashlock The hash of the secret\n     * @param secret The secret that generates the hashlock\n     */\n    function completeSwap(bytes32 hashlock, bytes32 secret) external nonReentrant {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0)) {\n            revert SwapNotFound();\n        }\n        \n        if (swap.completed) {\n            revert SwapAlreadyCompleted();\n        }\n        \n        if (swap.refunded) {\n            revert SwapAlreadyRefunded();\n        }\n        \n        if (block.timestamp >= swap.timelock) {\n            revert TimelockExpired();\n        }\n        \n        // Verify the secret matches the hashlock (recipient-agnostic)\n        if (keccak256(abi.encodePacked(secret)) != hashlock) {\n            revert InvalidSecret();\n        }\n        \n        // No recipient check - anyone with the secret can complete the swap\n        \n        swap.completed = true;\n        \n        // Transfer tokens to recipient\n        if (swap.token == address(0)) {\n            // ETH transfer\n            (bool success, ) = swap.recipient.call{value: swap.amount}(\"\");\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            // ERC-20 transfer\n            IERC20(swap.token).safeTransfer(swap.recipient, swap.amount);\n        }\n        \n        emit SwapCompleted(hashlock, swap.recipient, swap.token, swap.amount, secret);\n    }\n\n    /**\n     * @dev Completes a swap by the initiator (for cross-chain atomic swaps)\n     * This allows the initiator to complete their own swap when they are also the recipient\n     * @param hashlock The hash of the secret\n     * @param secret The secret that generates the hashlock\n     */\n    function completeSwapAsInitiator(bytes32 hashlock, bytes32 secret) external nonReentrant {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0)) {\n            revert SwapNotFound();\n        }\n        \n        if (swap.completed) {\n            revert SwapAlreadyCompleted();\n        }\n        \n        if (swap.refunded) {\n            revert SwapAlreadyRefunded();\n        }\n        \n        if (block.timestamp >= swap.timelock) {\n            revert TimelockExpired();\n        }\n        \n        // Verify the secret matches the hashlock (recipient-agnostic)\n        if (keccak256(abi.encodePacked(secret)) != hashlock) {\n            revert InvalidSecret();\n        }\n        \n        // Only the initiator can complete their own swap\n        if (msg.sender != swap.initiator) {\n            revert InvalidRecipient();\n        }\n        \n        // For cross-chain swaps, the initiator should also be the recipient\n        if (msg.sender != swap.recipient) {\n            revert InvalidRecipient();\n        }\n        \n        swap.completed = true;\n        \n        // Transfer tokens to recipient (which is the initiator)\n        if (swap.token == address(0)) {\n            // ETH transfer\n            (bool success, ) = swap.recipient.call{value: swap.amount}(\"\");\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            // ERC-20 transfer\n            IERC20(swap.token).safeTransfer(swap.recipient, swap.amount);\n        }\n        \n        emit SwapCompleted(hashlock, swap.recipient, swap.token, swap.amount, secret);\n    }\n    \n    /**\n     * @dev Refunds a swap after the timelock expires\n     * @param hashlock The hash of the secret\n     */\n    function refundSwap(bytes32 hashlock) external nonReentrant {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0)) {\n            revert SwapNotFound();\n        }\n        \n        if (swap.completed) {\n            revert SwapAlreadyCompleted();\n        }\n        \n        if (swap.refunded) {\n            revert SwapAlreadyRefunded();\n        }\n        \n        if (block.timestamp < swap.timelock) {\n            revert TimelockNotExpired();\n        }\n        \n        // Only the initiator can refund\n        if (msg.sender != swap.initiator) {\n            revert InvalidRecipient();\n        }\n        \n        swap.refunded = true;\n        \n        // Transfer tokens back to initiator\n        if (swap.token == address(0)) {\n            // ETH transfer\n            (bool success, ) = swap.initiator.call{value: swap.amount}(\"\");\n            if (!success) {\n                revert TransferFailed();\n            }\n        } else {\n            // ERC-20 transfer\n            IERC20(swap.token).safeTransfer(swap.initiator, swap.amount);\n        }\n        \n        emit SwapRefunded(hashlock, swap.initiator, swap.token, swap.amount);\n    }\n    \n    /**\n     * @dev Checks if a swap can be completed\n     * @param hashlock The hash of the secret\n     * @return bool True if the swap can be completed\n     */\n    function canComplete(bytes32 hashlock) external view returns (bool) {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0) || swap.completed || swap.refunded) {\n            return false;\n        }\n        \n        return block.timestamp < swap.timelock;\n    }\n    \n    /**\n     * @dev Checks if a swap can be refunded\n     * @param hashlock The hash of the secret\n     * @return bool True if the swap can be refunded\n     */\n    function canRefund(bytes32 hashlock) external view returns (bool) {\n        Swap storage swap = swaps[hashlock];\n        \n        if (swap.initiator == address(0) || swap.completed || swap.refunded) {\n            return false;\n        }\n        \n        return block.timestamp >= swap.timelock;\n    }\n    \n    /**\n     * @dev Gets the details of a swap\n     * @param hashlock The hash of the secret\n     * @return initiator The address that initiated the swap\n     * @return recipient The address that will receive the tokens\n     * @return token The token address\n     * @return amount The amount of tokens\n     * @return timelock The expiration timestamp\n     * @return completed Whether the swap has been completed\n     * @return refunded Whether the swap has been refunded\n     */\n    function getSwap(bytes32 hashlock) external view returns (\n        address initiator,\n        address recipient,\n        address token,\n        uint256 amount,\n        uint256 timelock,\n        bool completed,\n        bool refunded\n    ) {\n        Swap storage swap = swaps[hashlock];\n        return (\n            swap.initiator,\n            swap.recipient,\n            swap.token,\n            swap.amount,\n            swap.timelock,\n            swap.completed,\n            swap.refunded\n        );\n    }\n    \n    /**\n     * @dev Allows the owner to withdraw any stuck tokens (emergency only)\n     * @param token The token address to withdraw\n     * @param amount The amount to withdraw\n     */\n    function emergencyWithdraw(address token, uint256 amount) external onlyOwner {\n        if (token == address(0)) {\n            (bool success, ) = owner().call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            IERC20(token).safeTransfer(owner(), amount);\n        }\n    }\n    \n    /**\n     * @dev Allows the contract to receive ETH\n     */\n    receive() external payable {}\n} "}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[809],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":810,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,809],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[1238],"IERC20":[315]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1238,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,1238,315],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[249,258]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1238]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":1239,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":316,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"133:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":315,"linearizedBaseContracts":[315],"name":"IERC20","nameLocation":"215:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"228:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":249,"name":"Transfer","nameLocation":"397:8:4","nodeType":"EventDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:4","nodeType":"VariableDeclaration","scope":249,"src":"406:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:4","nodeType":"VariableDeclaration","scope":249,"src":"428:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:4","nodeType":"VariableDeclaration","scope":249,"src":"448:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:4"},"src":"391:72:4"},{"anonymous":false,"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"469:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":258,"name":"Approval","nameLocation":"628:8:4","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:4","nodeType":"VariableDeclaration","scope":258,"src":"637:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:4","nodeType":"VariableDeclaration","scope":258,"src":"660:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:4","nodeType":"VariableDeclaration","scope":258,"src":"685:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:4"},"src":"622:78:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"706:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:4","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"796:2:4"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"822:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:4"},"scope":315,"src":"776:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"837:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:4","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"account","nameLocation":"940:7:4","nodeType":"VariableDeclaration","scope":272,"src":"932:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:4"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":272,"src":"972:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:4"},"scope":315,"src":"913:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"987:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:4","nodeType":"FunctionDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"to","nameLocation":"1231:2:4","nodeType":"VariableDeclaration","scope":282,"src":"1223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"value","nameLocation":"1243:5:4","nodeType":"VariableDeclaration","scope":282,"src":"1235:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:4"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"1268:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":279,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:4"},"scope":315,"src":"1205:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1280:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:4","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"owner","nameLocation":"1576:5:4","nodeType":"VariableDeclaration","scope":292,"src":"1568:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1591:7:4","nodeType":"VariableDeclaration","scope":292,"src":"1583:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:4"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"1623:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:4"},"scope":315,"src":"1549:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1638:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:4","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"spender","nameLocation":"2335:7:4","nodeType":"VariableDeclaration","scope":302,"src":"2327:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"value","nameLocation":"2352:5:4","nodeType":"VariableDeclaration","scope":302,"src":"2344:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:4"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"2377:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":299,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:4"},"scope":315,"src":"2310:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"2389:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:4","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"2721:4:4","nodeType":"VariableDeclaration","scope":314,"src":"2713:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"2735:2:4","nodeType":"VariableDeclaration","scope":314,"src":"2727:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"2747:5:4","nodeType":"VariableDeclaration","scope":314,"src":"2739:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:4"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"2772:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:4"},"scope":315,"src":"2691:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":316,"src":"205:2575:4","usedErrors":[],"usedEvents":[249,258]}],"src":"106:2675:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[315],"SafeERC20":[779]},"id":780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":316,"src":"141:37:5","symbolAliases":[{"foreign":{"id":318,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"149:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":230,"src":"179:58:5","symbolAliases":[{"foreign":{"id":320,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"239:458:5","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":779,"linearizedBaseContracts":[779],"name":"SafeERC20","nameLocation":"706:9:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"722:65:5","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":327,"name":"SafeERC20FailedOperation","nameLocation":"798:24:5","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"token","nameLocation":"831:5:5","nodeType":"VariableDeclaration","scope":327,"src":"823:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:5"},"src":"792:46:5"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"844:71:5","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":336,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:5","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"spender","nameLocation":"967:7:5","nodeType":"VariableDeclaration","scope":336,"src":"959:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:5","nodeType":"VariableDeclaration","scope":336,"src":"976:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:5","nodeType":"VariableDeclaration","scope":336,"src":"1002:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:5"},"src":"920:109:5"},{"body":{"id":359,"nodeType":"Block","src":"1291:88:5","statements":[{"expression":{"arguments":[{"id":348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1321:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":351,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1343:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"1343:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1360:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1364:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":349,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":347,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1301:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"1301:71:5"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1035:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":360,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:5","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"token","nameLocation":"1248:5:5","nodeType":"VariableDeclaration","scope":360,"src":"1241:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":339,"nodeType":"UserDefinedTypeName","pathNode":{"id":338,"name":"IERC20","nameLocations":["1241:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1241:6:5"},"referencedDeclaration":315,"src":"1241:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"to","nameLocation":"1263:2:5","nodeType":"VariableDeclaration","scope":360,"src":"1255:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"value","nameLocation":"1275:5:5","nodeType":"VariableDeclaration","scope":360,"src":"1267:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:5"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"1291:0:5"},"scope":779,"src":"1219:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"1708:98:5","statements":[{"expression":{"arguments":[{"id":374,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1738:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":377,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1760:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"1760:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":379,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1781:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1787:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1791:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":375,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":373,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1718:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"ExpressionStatement","src":"1718:81:5"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"1385:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:5","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"token","nameLocation":"1651:5:5","nodeType":"VariableDeclaration","scope":387,"src":"1644:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":363,"nodeType":"UserDefinedTypeName","pathNode":{"id":362,"name":"IERC20","nameLocations":["1644:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1644:6:5"},"referencedDeclaration":315,"src":"1644:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"from","nameLocation":"1666:4:5","nodeType":"VariableDeclaration","scope":387,"src":"1658:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"to","nameLocation":"1680:2:5","nodeType":"VariableDeclaration","scope":387,"src":"1672:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"value","nameLocation":"1692:5:5","nodeType":"VariableDeclaration","scope":387,"src":"1684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:5"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1708:0:5"},"scope":779,"src":"1618:188:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"2033:99:5","statements":[{"expression":{"arguments":[{"id":401,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2074:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":404,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2096:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"2096:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2113:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2117:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":402,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":400,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2050:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":399,"id":411,"nodeType":"Return","src":"2043:82:5"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"1812:126:5","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:5","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"token","nameLocation":"1975:5:5","nodeType":"VariableDeclaration","scope":413,"src":"1968:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":390,"nodeType":"UserDefinedTypeName","pathNode":{"id":389,"name":"IERC20","nameLocations":["1968:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1968:6:5"},"referencedDeclaration":315,"src":"1968:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"to","nameLocation":"1990:2:5","nodeType":"VariableDeclaration","scope":413,"src":"1982:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"value","nameLocation":"2002:5:5","nodeType":"VariableDeclaration","scope":413,"src":"1994:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"2027:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:5"},"scope":779,"src":"1943:189:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"2381:109:5","statements":[{"expression":{"arguments":[{"id":429,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2422:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2444:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2444:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":434,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2465:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2471:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2475:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":430,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":428,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2398:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":427,"id":440,"nodeType":"Return","src":"2391:92:5"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2138:130:5","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:5","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"token","nameLocation":"2309:5:5","nodeType":"VariableDeclaration","scope":442,"src":"2302:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"IERC20","nameLocations":["2302:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"2302:6:5"},"referencedDeclaration":315,"src":"2302:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"from","nameLocation":"2324:4:5","nodeType":"VariableDeclaration","scope":442,"src":"2316:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"to","nameLocation":"2338:2:5","nodeType":"VariableDeclaration","scope":442,"src":"2330:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"value","nameLocation":"2350:5:5","nodeType":"VariableDeclaration","scope":442,"src":"2342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:5"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"2375:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":425,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:5"},"scope":779,"src":"2273:217:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":472,"nodeType":"Block","src":"3232:139:5","statements":[{"assignments":[454],"declarations":[{"constant":false,"id":454,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:5","nodeType":"VariableDeclaration","scope":472,"src":"3242:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":463,"initialValue":{"arguments":[{"arguments":[{"id":459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:5","typeDescriptions":{}}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3296:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3265:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"3265:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:5"},{"expression":{"arguments":[{"id":465,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3327:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":466,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3334:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3343:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"3358:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":464,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3314:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"3314:50:5"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"2496:645:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:5","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"token","nameLocation":"3184:5:5","nodeType":"VariableDeclaration","scope":473,"src":"3177:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":445,"nodeType":"UserDefinedTypeName","pathNode":{"id":444,"name":"IERC20","nameLocations":["3177:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"3177:6:5"},"referencedDeclaration":315,"src":"3177:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"spender","nameLocation":"3199:7:5","nodeType":"VariableDeclaration","scope":473,"src":"3191:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"value","nameLocation":"3216:5:5","nodeType":"VariableDeclaration","scope":473,"src":"3208:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:5"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"3232:0:5"},"scope":779,"src":"3146:225:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"4137:370:5","statements":[{"id":514,"nodeType":"UncheckedBlock","src":"4147:354:5","statements":[{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:5","nodeType":"VariableDeclaration","scope":514,"src":"4171:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":494,"initialValue":{"arguments":[{"arguments":[{"id":490,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:5","typeDescriptions":{}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4229:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4198:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"4198:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4255:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":496,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4274:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"IfStatement","src":"4251:160:5","trueBody":{"id":504,"nodeType":"Block","src":"4293:118:5","statements":[{"errorCall":{"arguments":[{"id":499,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4351:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4360:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":501,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4378:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4318:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"RevertStatement","src":"4311:85:5"}]}},{"expression":{"arguments":[{"id":507,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4437:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":508,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4444:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":509,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4453:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":510,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4472:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4424:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"4424:66:5"}]}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"3377:657:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:5","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"token","nameLocation":"4077:5:5","nodeType":"VariableDeclaration","scope":516,"src":"4070:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"IERC20","nameLocations":["4070:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"4070:6:5"},"referencedDeclaration":315,"src":"4070:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"spender","nameLocation":"4092:7:5","nodeType":"VariableDeclaration","scope":516,"src":"4084:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:5","nodeType":"VariableDeclaration","scope":516,"src":"4101:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"4137:0:5"},"scope":779,"src":"4039:468:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"5161:303:5","statements":[{"assignments":[528],"declarations":[{"constant":false,"id":528,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:5","nodeType":"VariableDeclaration","scope":562,"src":"5171:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":537,"initialValue":{"arguments":[{"expression":{"id":531,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5214:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5214:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5230:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5239:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:5"},{"condition":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:5","subExpression":{"arguments":[{"id":539,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5286:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":540,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5293:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":538,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"5262:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"5257:201:5","trueBody":{"id":560,"nodeType":"Block","src":"5308:150:5","statements":[{"expression":{"arguments":[{"id":544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5342:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5364:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5364:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":549,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5380:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":545,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":543,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5322:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"5322:71:5"},{"expression":{"arguments":[{"id":556,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5427:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":557,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5434:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":555,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5407:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"5407:40:5"}]}}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"4513:566:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:5","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"token","nameLocation":"5113:5:5","nodeType":"VariableDeclaration","scope":563,"src":"5106:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"IERC20","nameLocations":["5106:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"5106:6:5"},"referencedDeclaration":315,"src":"5106:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"spender","nameLocation":"5128:7:5","nodeType":"VariableDeclaration","scope":563,"src":"5120:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"value","nameLocation":"5145:5:5","nodeType":"VariableDeclaration","scope":563,"src":"5137:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:5"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"5161:0:5"},"scope":779,"src":"5084:380:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"5911:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5925:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:5","memberName":"code","nodeType":"MemberAccess","src":"5925:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:5","memberName":"length","nodeType":"MemberAccess","src":"5925:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:5","subExpression":{"arguments":[{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"6034:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6038:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":592,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6045:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":588,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6012:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:5","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"nodeType":"IfStatement","src":"6007:117:5","trueBody":{"id":602,"nodeType":"Block","src":"6052:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":598,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6106:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:5","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6073:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"RevertStatement","src":"6066:47:5"}]}},"id":604,"nodeType":"IfStatement","src":"5921:203:5","trueBody":{"id":587,"nodeType":"Block","src":"5946:55:5","statements":[{"expression":{"arguments":[{"id":582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"5973:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5980:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5984:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":581,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5960:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"5960:30:5"}]}}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"5470:333:5","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:5","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"token","nameLocation":"5849:5:5","nodeType":"VariableDeclaration","scope":606,"src":"5840:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":566,"nodeType":"UserDefinedTypeName","pathNode":{"id":565,"name":"IERC1363","nameLocations":["5840:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:5"},"referencedDeclaration":229,"src":"5840:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"to","nameLocation":"5864:2:5","nodeType":"VariableDeclaration","scope":606,"src":"5856:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"value","nameLocation":"5876:5:5","nodeType":"VariableDeclaration","scope":606,"src":"5868:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"data","nameLocation":"5896:4:5","nodeType":"VariableDeclaration","scope":606,"src":"5883:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:5"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"5911:0:5"},"scope":779,"src":"5808:322:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":652,"nodeType":"Block","src":"6649:239:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6663:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:5","memberName":"code","nodeType":"MemberAccess","src":"6663:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:5","memberName":"length","nodeType":"MemberAccess","src":"6663:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:5","subExpression":{"arguments":[{"id":636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6786:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6792:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6803:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":634,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6760:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:5","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"6755:127:5","trueBody":{"id":649,"nodeType":"Block","src":"6810:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":645,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6864:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:5","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":642,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6831:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"RevertStatement","src":"6824:47:5"}]}},"id":651,"nodeType":"IfStatement","src":"6659:223:5","trueBody":{"id":633,"nodeType":"Block","src":"6684:65:5","statements":[{"expression":{"arguments":[{"id":627,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6715:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":628,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6722:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6728:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6732:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6698:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"6698:40:5"}]}}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"6136:341:5","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":653,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:5","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"token","nameLocation":"6536:5:5","nodeType":"VariableDeclaration","scope":653,"src":"6527:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":609,"nodeType":"UserDefinedTypeName","pathNode":{"id":608,"name":"IERC1363","nameLocations":["6527:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:5"},"referencedDeclaration":229,"src":"6527:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"from","nameLocation":"6559:4:5","nodeType":"VariableDeclaration","scope":653,"src":"6551:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"to","nameLocation":"6581:2:5","nodeType":"VariableDeclaration","scope":653,"src":"6573:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"value","nameLocation":"6601:5:5","nodeType":"VariableDeclaration","scope":653,"src":"6593:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"data","nameLocation":"6629:4:5","nodeType":"VariableDeclaration","scope":653,"src":"6616:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":617,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:5"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[],"src":"6649:0:5"},"scope":779,"src":"6482:406:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"7655:218:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7669:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:5","memberName":"code","nodeType":"MemberAccess","src":"7669:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:5","memberName":"length","nodeType":"MemberAccess","src":"7669:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:5","subExpression":{"arguments":[{"id":680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7777:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7781:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":682,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7788:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":678,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7756:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:5","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"7751:116:5","trueBody":{"id":692,"nodeType":"Block","src":"7795:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":688,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7849:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:5","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":685,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7816:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"7809:47:5"}]}},"id":694,"nodeType":"IfStatement","src":"7665:202:5","trueBody":{"id":677,"nodeType":"Block","src":"7690:55:5","statements":[{"expression":{"arguments":[{"id":672,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7717:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7724:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":671,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"7704:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"7704:30:5"}]}}]},"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"6894:654:5","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:5","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"token","nameLocation":"7593:5:5","nodeType":"VariableDeclaration","scope":696,"src":"7584:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"IERC1363","nameLocations":["7584:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:5"},"referencedDeclaration":229,"src":"7584:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"7608:2:5","nodeType":"VariableDeclaration","scope":696,"src":"7600:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"value","nameLocation":"7620:5:5","nodeType":"VariableDeclaration","scope":696,"src":"7612:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"data","nameLocation":"7640:4:5","nodeType":"VariableDeclaration","scope":696,"src":"7627:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":662,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:5"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"7655:0:5"},"scope":779,"src":"7553:320:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"8440:650:5","statements":[{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:5","nodeType":"VariableDeclaration","scope":736,"src":"8450:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":707,"nodeType":"VariableDeclarationStatement","src":"8450:18:5"},{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:5","nodeType":"VariableDeclaration","scope":736,"src":"8478:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":710,"nodeType":"VariableDeclarationStatement","src":"8478:19:5"},{"AST":{"nativeSrc":"8532:396:5","nodeType":"YulBlock","src":"8532:396:5","statements":[{"nativeSrc":"8546:75:5","nodeType":"YulVariableDeclaration","src":"8546:75:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:5","nodeType":"YulIdentifier","src":"8566:3:5"},"nativeSrc":"8566:5:5","nodeType":"YulFunctionCall","src":"8566:5:5"},{"name":"token","nativeSrc":"8573:5:5","nodeType":"YulIdentifier","src":"8573:5:5"},{"kind":"number","nativeSrc":"8580:1:5","nodeType":"YulLiteral","src":"8580:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:5","nodeType":"YulIdentifier","src":"8587:4:5"},{"kind":"number","nativeSrc":"8593:4:5","nodeType":"YulLiteral","src":"8593:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:5","nodeType":"YulIdentifier","src":"8583:3:5"},"nativeSrc":"8583:15:5","nodeType":"YulFunctionCall","src":"8583:15:5"},{"arguments":[{"name":"data","nativeSrc":"8606:4:5","nodeType":"YulIdentifier","src":"8606:4:5"}],"functionName":{"name":"mload","nativeSrc":"8600:5:5","nodeType":"YulIdentifier","src":"8600:5:5"},"nativeSrc":"8600:11:5","nodeType":"YulFunctionCall","src":"8600:11:5"},{"kind":"number","nativeSrc":"8613:1:5","nodeType":"YulLiteral","src":"8613:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:5","nodeType":"YulLiteral","src":"8616:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:5","nodeType":"YulIdentifier","src":"8561:4:5"},"nativeSrc":"8561:60:5","nodeType":"YulFunctionCall","src":"8561:60:5"},"variables":[{"name":"success","nativeSrc":"8550:7:5","nodeType":"YulTypedName","src":"8550:7:5","type":""}]},{"body":{"nativeSrc":"8682:157:5","nodeType":"YulBlock","src":"8682:157:5","statements":[{"nativeSrc":"8700:22:5","nodeType":"YulVariableDeclaration","src":"8700:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:5","nodeType":"YulLiteral","src":"8717:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:5","nodeType":"YulIdentifier","src":"8711:5:5"},"nativeSrc":"8711:11:5","nodeType":"YulFunctionCall","src":"8711:11:5"},"variables":[{"name":"ptr","nativeSrc":"8704:3:5","nodeType":"YulTypedName","src":"8704:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:5","nodeType":"YulIdentifier","src":"8754:3:5"},{"kind":"number","nativeSrc":"8759:1:5","nodeType":"YulLiteral","src":"8759:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:5","nodeType":"YulIdentifier","src":"8762:14:5"},"nativeSrc":"8762:16:5","nodeType":"YulFunctionCall","src":"8762:16:5"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:5","nodeType":"YulIdentifier","src":"8739:14:5"},"nativeSrc":"8739:40:5","nodeType":"YulFunctionCall","src":"8739:40:5"},"nativeSrc":"8739:40:5","nodeType":"YulExpressionStatement","src":"8739:40:5"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:5","nodeType":"YulIdentifier","src":"8803:3:5"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:5","nodeType":"YulIdentifier","src":"8808:14:5"},"nativeSrc":"8808:16:5","nodeType":"YulFunctionCall","src":"8808:16:5"}],"functionName":{"name":"revert","nativeSrc":"8796:6:5","nodeType":"YulIdentifier","src":"8796:6:5"},"nativeSrc":"8796:29:5","nodeType":"YulFunctionCall","src":"8796:29:5"},"nativeSrc":"8796:29:5","nodeType":"YulExpressionStatement","src":"8796:29:5"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:5","nodeType":"YulIdentifier","src":"8673:7:5"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:5","nodeType":"YulIdentifier","src":"8666:6:5"},"nativeSrc":"8666:15:5","nodeType":"YulFunctionCall","src":"8666:15:5"},"nativeSrc":"8663:176:5","nodeType":"YulIf","src":"8663:176:5"},{"nativeSrc":"8852:30:5","nodeType":"YulAssignment","src":"8852:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:5","nodeType":"YulIdentifier","src":"8866:14:5"},"nativeSrc":"8866:16:5","nodeType":"YulFunctionCall","src":"8866:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:5","nodeType":"YulIdentifier","src":"8852:10:5"}]},{"nativeSrc":"8895:23:5","nodeType":"YulAssignment","src":"8895:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:5","nodeType":"YulLiteral","src":"8916:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:5","nodeType":"YulIdentifier","src":"8910:5:5"},"nativeSrc":"8910:8:5","nodeType":"YulFunctionCall","src":"8910:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:5","nodeType":"YulIdentifier","src":"8895:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":702,"isOffset":false,"isSlot":false,"src":"8587:4:5","valueSize":1},{"declaration":702,"isOffset":false,"isSlot":false,"src":"8606:4:5","valueSize":1},{"declaration":706,"isOffset":false,"isSlot":false,"src":"8852:10:5","valueSize":1},{"declaration":709,"isOffset":false,"isSlot":false,"src":"8895:11:5","valueSize":1},{"declaration":700,"isOffset":false,"isSlot":false,"src":"8573:5:5","valueSize":1}],"flags":["memory-safe"],"id":711,"nodeType":"InlineAssembly","src":"8507:421:5"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"8942:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"8994:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":717,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8968:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:5","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:5","memberName":"code","nodeType":"MemberAccess","src":"8960:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:5","memberName":"length","nodeType":"MemberAccess","src":"8960:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"8938:146:5","trueBody":{"id":734,"nodeType":"Block","src":"9012:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":730,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9066:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:5","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":727,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9033:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"RevertStatement","src":"9026:47:5"}]}}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7879:486:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:5","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"token","nameLocation":"8406:5:5","nodeType":"VariableDeclaration","scope":737,"src":"8399:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":699,"nodeType":"UserDefinedTypeName","pathNode":{"id":698,"name":"IERC20","nameLocations":["8399:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"8399:6:5"},"referencedDeclaration":315,"src":"8399:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"data","nameLocation":"8426:4:5","nodeType":"VariableDeclaration","scope":737,"src":"8413:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":701,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:5"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"8440:0:5"},"scope":779,"src":"8370:720:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":777,"nodeType":"Block","src":"9681:391:5","statements":[{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"success","nameLocation":"9696:7:5","nodeType":"VariableDeclaration","scope":777,"src":"9691:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":748,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":750,"nodeType":"VariableDeclarationStatement","src":"9691:12:5"},{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:5","nodeType":"VariableDeclaration","scope":777,"src":"9713:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":753,"nodeType":"VariableDeclarationStatement","src":"9713:18:5"},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:5","nodeType":"VariableDeclaration","scope":777,"src":"9741:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"nodeType":"VariableDeclarationStatement","src":"9741:19:5"},{"AST":{"nativeSrc":"9795:174:5","nodeType":"YulBlock","src":"9795:174:5","statements":[{"nativeSrc":"9809:71:5","nodeType":"YulAssignment","src":"9809:71:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:5","nodeType":"YulIdentifier","src":"9825:3:5"},"nativeSrc":"9825:5:5","nodeType":"YulFunctionCall","src":"9825:5:5"},{"name":"token","nativeSrc":"9832:5:5","nodeType":"YulIdentifier","src":"9832:5:5"},{"kind":"number","nativeSrc":"9839:1:5","nodeType":"YulLiteral","src":"9839:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:5","nodeType":"YulIdentifier","src":"9846:4:5"},{"kind":"number","nativeSrc":"9852:4:5","nodeType":"YulLiteral","src":"9852:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:5","nodeType":"YulIdentifier","src":"9842:3:5"},"nativeSrc":"9842:15:5","nodeType":"YulFunctionCall","src":"9842:15:5"},{"arguments":[{"name":"data","nativeSrc":"9865:4:5","nodeType":"YulIdentifier","src":"9865:4:5"}],"functionName":{"name":"mload","nativeSrc":"9859:5:5","nodeType":"YulIdentifier","src":"9859:5:5"},"nativeSrc":"9859:11:5","nodeType":"YulFunctionCall","src":"9859:11:5"},{"kind":"number","nativeSrc":"9872:1:5","nodeType":"YulLiteral","src":"9872:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:5","nodeType":"YulLiteral","src":"9875:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:5","nodeType":"YulIdentifier","src":"9820:4:5"},"nativeSrc":"9820:60:5","nodeType":"YulFunctionCall","src":"9820:60:5"},"variableNames":[{"name":"success","nativeSrc":"9809:7:5","nodeType":"YulIdentifier","src":"9809:7:5"}]},{"nativeSrc":"9893:30:5","nodeType":"YulAssignment","src":"9893:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:5","nodeType":"YulIdentifier","src":"9907:14:5"},"nativeSrc":"9907:16:5","nodeType":"YulFunctionCall","src":"9907:16:5"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:5","nodeType":"YulIdentifier","src":"9893:10:5"}]},{"nativeSrc":"9936:23:5","nodeType":"YulAssignment","src":"9936:23:5","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:5","nodeType":"YulLiteral","src":"9957:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:5","nodeType":"YulIdentifier","src":"9951:5:5"},"nativeSrc":"9951:8:5","nodeType":"YulFunctionCall","src":"9951:8:5"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:5","nodeType":"YulIdentifier","src":"9936:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":743,"isOffset":false,"isSlot":false,"src":"9846:4:5","valueSize":1},{"declaration":743,"isOffset":false,"isSlot":false,"src":"9865:4:5","valueSize":1},{"declaration":752,"isOffset":false,"isSlot":false,"src":"9893:10:5","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"9936:11:5","valueSize":1},{"declaration":749,"isOffset":false,"isSlot":false,"src":"9809:7:5","valueSize":1},{"declaration":741,"isOffset":false,"isSlot":false,"src":"9832:5:5","valueSize":1}],"flags":["memory-safe"],"id":757,"nodeType":"InlineAssembly","src":"9770:199:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"9985:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9997:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10048:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":764,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"10023:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:5","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:5","memberName":"code","nodeType":"MemberAccess","src":"10015:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:5","memberName":"length","nodeType":"MemberAccess","src":"10015:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":776,"nodeType":"Return","src":"9978:87:5"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"9096:491:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"token","nameLocation":"9632:5:5","nodeType":"VariableDeclaration","scope":778,"src":"9625:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":740,"nodeType":"UserDefinedTypeName","pathNode":{"id":739,"name":"IERC20","nameLocations":["9625:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"9625:6:5"},"referencedDeclaration":315,"src":"9625:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"data","nameLocation":"9652:4:5","nodeType":"VariableDeclaration","scope":778,"src":"9639:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":742,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"9675:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:5"},"scope":779,"src":"9592:480:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":780,"src":"698:9376:5","usedErrors":[327,336],"usedEvents":[]}],"src":"115:9960:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[809]},"id":810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":781,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":809,"linearizedBaseContracts":[809],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":790,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":786,"id":789,"nodeType":"Return","src":"728:17:6"}]},"id":791,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":809,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":796,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":795,"id":798,"nodeType":"Return","src":"835:15:6"}]},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":809,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":804,"id":806,"nodeType":"Return","src":"945:8:6"}]},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":809,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":810,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[878]},"id":879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"135:894:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":878,"linearizedBaseContracts":[878],"name":"ReentrancyGuard","nameLocation":"1048:15:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":815,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:7","nodeType":"VariableDeclaration","scope":878,"src":"1818:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":818,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:7","nodeType":"VariableDeclaration","scope":878,"src":"1864:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":820,"mutability":"mutable","name":"_status","nameLocation":"1923:7:7","nodeType":"VariableDeclaration","scope":878,"src":"1907:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"1937:52:7","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":823,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:7","nodeType":"ErrorDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"2028:2:7"},"src":"1994:37:7"},{"body":{"id":830,"nodeType":"Block","src":"2051:38:7","statements":[{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":826,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":827,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2071:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"2061:21:7"}]},"id":831,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"2048:2:7"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"2051:0:7"},"scope":878,"src":"2037:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"2490:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":834,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2500:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"2500:21:7"},{"id":837,"nodeType":"PlaceholderStatement","src":"2531:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":838,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2542:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"2542:20:7"}]},"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"2095:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":842,"name":"nonReentrant","nameLocation":"2475:12:7","nodeType":"ModifierDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"2487:2:7"},"src":"2466:103:7","virtual":false,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"2614:268:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":846,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":852,"nodeType":"IfStatement","src":"2698:86:7","trueBody":{"id":851,"nodeType":"Block","src":"2722:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2743:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"RevertStatement","src":"2736:37:7"}]}},{"expression":{"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":853,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":854,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":856,"nodeType":"ExpressionStatement","src":"2858:17:7"}]},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:7","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"2603:2:7"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"2614:0:7"},"scope":878,"src":"2575:307:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":865,"nodeType":"Block","src":"2926:170:7","statements":[{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":861,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":862,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3078:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":864,"nodeType":"ExpressionStatement","src":"3068:21:7"}]},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:7","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"2915:2:7"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"2926:0:7"},"scope":878,"src":"2888:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":876,"nodeType":"Block","src":"3339:42:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":872,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":873,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":871,"id":875,"nodeType":"Return","src":"3349:25:7"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"3102:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":877,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:7","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"3307:2:7"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"3333:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":869,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:7"},"scope":878,"src":"3275:106:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":879,"src":"1030:2353:7","usedErrors":[823],"usedEvents":[]}],"src":"109:3275:7"},"id":7},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1226]},"id":1227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":880,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"138:205:8","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1226,"linearizedBaseContracts":[1226],"name":"ECDSA","nameLocation":"352:5:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":886,"members":[{"id":882,"name":"NoError","nameLocation":"392:7:8","nodeType":"EnumValue","src":"392:7:8"},{"id":883,"name":"InvalidSignature","nameLocation":"409:16:8","nodeType":"EnumValue","src":"409:16:8"},{"id":884,"name":"InvalidSignatureLength","nameLocation":"435:22:8","nodeType":"EnumValue","src":"435:22:8"},{"id":885,"name":"InvalidSignatureS","nameLocation":"467:17:8","nodeType":"EnumValue","src":"467:17:8"}],"name":"RecoverError","nameLocation":"369:12:8","nodeType":"EnumDefinition","src":"364:126:8"},{"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"496:63:8","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":889,"name":"ECDSAInvalidSignature","nameLocation":"570:21:8","nodeType":"ErrorDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"591:2:8"},"src":"564:30:8"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"600:60:8","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":894,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:8","nodeType":"ErrorDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"length","nameLocation":"707:6:8","nodeType":"VariableDeclaration","scope":894,"src":"699:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:8"},"src":"665:50:8"},{"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"721:85:8","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":899,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:8","nodeType":"ErrorDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"s","nameLocation":"848:1:8","nodeType":"VariableDeclaration","scope":899,"src":"840:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:8"},"src":"811:40:8"},{"body":{"id":951,"nodeType":"Block","src":"2285:622:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":914,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2299:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:8","memberName":"length","nodeType":"MemberAccess","src":"2299:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":949,"nodeType":"Block","src":"2793:108:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:8","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":940,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"2827:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":884,"src":"2827:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":944,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2872:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:8","memberName":"length","nodeType":"MemberAccess","src":"2872:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:8","typeDescriptions":{}}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":913,"id":948,"nodeType":"Return","src":"2807:83:8"}]},"id":950,"nodeType":"IfStatement","src":"2295:606:8","trueBody":{"id":935,"nodeType":"Block","src":"2323:464:8","statements":[{"assignments":[919],"declarations":[{"constant":false,"id":919,"mutability":"mutable","name":"r","nameLocation":"2345:1:8","nodeType":"VariableDeclaration","scope":935,"src":"2337:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":920,"nodeType":"VariableDeclarationStatement","src":"2337:9:8"},{"assignments":[922],"declarations":[{"constant":false,"id":922,"mutability":"mutable","name":"s","nameLocation":"2368:1:8","nodeType":"VariableDeclaration","scope":935,"src":"2360:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":923,"nodeType":"VariableDeclarationStatement","src":"2360:9:8"},{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"v","nameLocation":"2389:1:8","nodeType":"VariableDeclaration","scope":935,"src":"2383:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":924,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":926,"nodeType":"VariableDeclarationStatement","src":"2383:7:8"},{"AST":{"nativeSrc":"2560:171:8","nodeType":"YulBlock","src":"2560:171:8","statements":[{"nativeSrc":"2578:32:8","nodeType":"YulAssignment","src":"2578:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:8","nodeType":"YulIdentifier","src":"2593:9:8"},{"kind":"number","nativeSrc":"2604:4:8","nodeType":"YulLiteral","src":"2604:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:8","nodeType":"YulIdentifier","src":"2589:3:8"},"nativeSrc":"2589:20:8","nodeType":"YulFunctionCall","src":"2589:20:8"}],"functionName":{"name":"mload","nativeSrc":"2583:5:8","nodeType":"YulIdentifier","src":"2583:5:8"},"nativeSrc":"2583:27:8","nodeType":"YulFunctionCall","src":"2583:27:8"},"variableNames":[{"name":"r","nativeSrc":"2578:1:8","nodeType":"YulIdentifier","src":"2578:1:8"}]},{"nativeSrc":"2627:32:8","nodeType":"YulAssignment","src":"2627:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:8","nodeType":"YulIdentifier","src":"2642:9:8"},{"kind":"number","nativeSrc":"2653:4:8","nodeType":"YulLiteral","src":"2653:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:8","nodeType":"YulIdentifier","src":"2638:3:8"},"nativeSrc":"2638:20:8","nodeType":"YulFunctionCall","src":"2638:20:8"}],"functionName":{"name":"mload","nativeSrc":"2632:5:8","nodeType":"YulIdentifier","src":"2632:5:8"},"nativeSrc":"2632:27:8","nodeType":"YulFunctionCall","src":"2632:27:8"},"variableNames":[{"name":"s","nativeSrc":"2627:1:8","nodeType":"YulIdentifier","src":"2627:1:8"}]},{"nativeSrc":"2676:41:8","nodeType":"YulAssignment","src":"2676:41:8","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:8","nodeType":"YulLiteral","src":"2686:1:8","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:8","nodeType":"YulIdentifier","src":"2699:9:8"},{"kind":"number","nativeSrc":"2710:4:8","nodeType":"YulLiteral","src":"2710:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:8","nodeType":"YulIdentifier","src":"2695:3:8"},"nativeSrc":"2695:20:8","nodeType":"YulFunctionCall","src":"2695:20:8"}],"functionName":{"name":"mload","nativeSrc":"2689:5:8","nodeType":"YulIdentifier","src":"2689:5:8"},"nativeSrc":"2689:27:8","nodeType":"YulFunctionCall","src":"2689:27:8"}],"functionName":{"name":"byte","nativeSrc":"2681:4:8","nodeType":"YulIdentifier","src":"2681:4:8"},"nativeSrc":"2681:36:8","nodeType":"YulFunctionCall","src":"2681:36:8"},"variableNames":[{"name":"v","nativeSrc":"2676:1:8","nodeType":"YulIdentifier","src":"2676:1:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":919,"isOffset":false,"isSlot":false,"src":"2578:1:8","valueSize":1},{"declaration":922,"isOffset":false,"isSlot":false,"src":"2627:1:8","valueSize":1},{"declaration":904,"isOffset":false,"isSlot":false,"src":"2593:9:8","valueSize":1},{"declaration":904,"isOffset":false,"isSlot":false,"src":"2642:9:8","valueSize":1},{"declaration":904,"isOffset":false,"isSlot":false,"src":"2699:9:8","valueSize":1},{"declaration":925,"isOffset":false,"isSlot":false,"src":"2676:1:8","valueSize":1}],"flags":["memory-safe"],"id":927,"nodeType":"InlineAssembly","src":"2535:196:8"},{"expression":{"arguments":[{"id":929,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2762:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":930,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2768:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":931,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"2771:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":932,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2774:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":928,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[952,1032,1140],"referencedDeclaration":1140,"src":"2751:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":913,"id":934,"nodeType":"Return","src":"2744:32:8"}]}}]},"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"857:1267:8","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:8","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"hash","nameLocation":"2166:4:8","nodeType":"VariableDeclaration","scope":952,"src":"2158:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"signature","nameLocation":"2193:9:8","nodeType":"VariableDeclaration","scope":952,"src":"2180:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:8"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:8","nodeType":"VariableDeclaration","scope":952,"src":"2232:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"err","nameLocation":"2264:3:8","nodeType":"VariableDeclaration","scope":952,"src":"2251:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"RecoverError","nameLocations":["2251:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"2251:12:8"},"referencedDeclaration":886,"src":"2251:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:8","nodeType":"VariableDeclaration","scope":952,"src":"2269:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:8"},"scope":1226,"src":"2129:778:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"3801:168:8","statements":[{"assignments":[963,966,968],"declarations":[{"constant":false,"id":963,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:8","nodeType":"VariableDeclaration","scope":981,"src":"3812:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"error","nameLocation":"3844:5:8","nodeType":"VariableDeclaration","scope":981,"src":"3831:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"RecoverError","nameLocations":["3831:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"3831:12:8"},"referencedDeclaration":886,"src":"3831:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:8","nodeType":"VariableDeclaration","scope":981,"src":"3851:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":973,"initialValue":{"arguments":[{"id":970,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3882:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":971,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3888:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":969,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[952,1032,1140],"referencedDeclaration":952,"src":"3871:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:8"},{"expression":{"arguments":[{"id":975,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3920:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},{"id":976,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"3927:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":974,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3908:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$886_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"3908:28:8"},{"expression":{"id":979,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3953:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":961,"id":980,"nodeType":"Return","src":"3946:16:8"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"2913:796:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:8","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"hash","nameLocation":"3739:4:8","nodeType":"VariableDeclaration","scope":982,"src":"3731:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"signature","nameLocation":"3758:9:8","nodeType":"VariableDeclaration","scope":982,"src":"3745:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":956,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:8"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"3792:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:8"},"scope":1226,"src":"3714:255:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1031,"nodeType":"Block","src":"4348:342:8","statements":[{"id":1030,"nodeType":"UncheckedBlock","src":"4358:326:8","statements":[{"assignments":[1000],"declarations":[{"constant":false,"id":1000,"mutability":"mutable","name":"s","nameLocation":"4390:1:8","nodeType":"VariableDeclaration","scope":1030,"src":"4382:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1007,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4394:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:8","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:8"},{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"v","nameLocation":"4591:1:8","nodeType":"VariableDeclaration","scope":1030,"src":"4585:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1008,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1022,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1014,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4610:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:8","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1010,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:8","typeDescriptions":{}}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:8"},{"expression":{"arguments":[{"id":1024,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4659:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1025,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4665:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1026,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"4668:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1027,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"4671:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1023,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[952,1032,1140],"referencedDeclaration":1140,"src":"4648:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":998,"id":1029,"nodeType":"Return","src":"4641:32:8"}]}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"3975:205:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:8","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"hash","nameLocation":"4222:4:8","nodeType":"VariableDeclaration","scope":1032,"src":"4214:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"r","nameLocation":"4244:1:8","nodeType":"VariableDeclaration","scope":1032,"src":"4236:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"vs","nameLocation":"4263:2:8","nodeType":"VariableDeclaration","scope":1032,"src":"4255:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:8"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:8","nodeType":"VariableDeclaration","scope":1032,"src":"4295:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"err","nameLocation":"4327:3:8","nodeType":"VariableDeclaration","scope":1032,"src":"4314:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":994,"nodeType":"UserDefinedTypeName","pathNode":{"id":993,"name":"RecoverError","nameLocations":["4314:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"4314:12:8"},"referencedDeclaration":886,"src":"4314:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:8","nodeType":"VariableDeclaration","scope":1032,"src":"4332:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:8"},"scope":1226,"src":"4185:505:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"4903:164:8","statements":[{"assignments":[1045,1048,1050],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:8","nodeType":"VariableDeclaration","scope":1064,"src":"4914:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"error","nameLocation":"4946:5:8","nodeType":"VariableDeclaration","scope":1064,"src":"4933:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1047,"nodeType":"UserDefinedTypeName","pathNode":{"id":1046,"name":"RecoverError","nameLocations":["4933:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"4933:12:8"},"referencedDeclaration":886,"src":"4933:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:8","nodeType":"VariableDeclaration","scope":1064,"src":"4953:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1056,"initialValue":{"arguments":[{"id":1052,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4984:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1053,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4990:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1054,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4993:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1051,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[952,1032,1140],"referencedDeclaration":1032,"src":"4973:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:8"},{"expression":{"arguments":[{"id":1058,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"5018:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},{"id":1059,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5025:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1057,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5006:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$886_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"5006:28:8"},{"expression":{"id":1062,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"5051:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1043,"id":1063,"nodeType":"Return","src":"5044:16:8"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"4696:116:8","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"hash","nameLocation":"4842:4:8","nodeType":"VariableDeclaration","scope":1065,"src":"4834:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"r","nameLocation":"4856:1:8","nodeType":"VariableDeclaration","scope":1065,"src":"4848:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"vs","nameLocation":"4867:2:8","nodeType":"VariableDeclaration","scope":1065,"src":"4859:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"4894:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:8"},"scope":1226,"src":"4817:250:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"5382:1372:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1086,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6278:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:8","typeDescriptions":{}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"6266:164:8","trueBody":{"id":1099,"nodeType":"Block","src":"6351:79:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:8","typeDescriptions":{}}},"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1094,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6385:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":885,"src":"6385:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},{"id":1096,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6417:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1083,"id":1098,"nodeType":"Return","src":"6365:54:8"}]}},{"assignments":[1102],"declarations":[{"constant":false,"id":1102,"mutability":"mutable","name":"signer","nameLocation":"6532:6:8","nodeType":"VariableDeclaration","scope":1139,"src":"6524:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1109,"initialValue":{"arguments":[{"id":1104,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6551:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1105,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"6557:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1106,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"6560:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1107,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6563:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1103,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"6579:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:8","typeDescriptions":{}}},"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1129,"nodeType":"IfStatement","src":"6575:113:8","trueBody":{"id":1128,"nodeType":"Block","src":"6601:87:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:8","typeDescriptions":{}}},"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1120,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6635:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":883,"src":"6635:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:8","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1083,"id":1127,"nodeType":"Return","src":"6615:62:8"}]}},{"expression":{"components":[{"id":1130,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"6706:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1131,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6714:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":882,"src":"6714:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:8","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1083,"id":1138,"nodeType":"Return","src":"6698:49:8"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"5073:125:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:8","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"hash","nameLocation":"5240:4:8","nodeType":"VariableDeclaration","scope":1140,"src":"5232:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"v","nameLocation":"5260:1:8","nodeType":"VariableDeclaration","scope":1140,"src":"5254:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1069,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"r","nameLocation":"5279:1:8","nodeType":"VariableDeclaration","scope":1140,"src":"5271:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"s","nameLocation":"5298:1:8","nodeType":"VariableDeclaration","scope":1140,"src":"5290:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:8"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:8","nodeType":"VariableDeclaration","scope":1140,"src":"5329:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"err","nameLocation":"5361:3:8","nodeType":"VariableDeclaration","scope":1140,"src":"5348:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1079,"nodeType":"UserDefinedTypeName","pathNode":{"id":1078,"name":"RecoverError","nameLocations":["5348:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"5348:12:8"},"referencedDeclaration":886,"src":"5348:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:8","nodeType":"VariableDeclaration","scope":1140,"src":"5366:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:8"},"scope":1226,"src":"5203:1551:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"6981:166:8","statements":[{"assignments":[1155,1158,1160],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:8","nodeType":"VariableDeclaration","scope":1175,"src":"6992:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"error","nameLocation":"7024:5:8","nodeType":"VariableDeclaration","scope":1175,"src":"7011:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1157,"nodeType":"UserDefinedTypeName","pathNode":{"id":1156,"name":"RecoverError","nameLocations":["7011:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"7011:12:8"},"referencedDeclaration":886,"src":"7011:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:8","nodeType":"VariableDeclaration","scope":1175,"src":"7031:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1167,"initialValue":{"arguments":[{"id":1162,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7062:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1163,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7068:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1164,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"7071:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1165,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"7074:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1161,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[952,1032,1140],"referencedDeclaration":1140,"src":"7051:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$886_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:8"},{"expression":{"arguments":[{"id":1169,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"7098:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},{"id":1170,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"7105:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1168,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"7086:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$886_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"ExpressionStatement","src":"7086:28:8"},{"expression":{"id":1173,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"7131:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1153,"id":1174,"nodeType":"Return","src":"7124:16:8"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"6760:122:8","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:8","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"hash","nameLocation":"6912:4:8","nodeType":"VariableDeclaration","scope":1176,"src":"6904:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"v","nameLocation":"6924:1:8","nodeType":"VariableDeclaration","scope":1176,"src":"6918:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1144,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"r","nameLocation":"6935:1:8","nodeType":"VariableDeclaration","scope":1176,"src":"6927:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"s","nameLocation":"6946:1:8","nodeType":"VariableDeclaration","scope":1176,"src":"6938:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:8"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"6972:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:8"},"scope":1226,"src":"6887:260:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1224,"nodeType":"Block","src":"7352:460:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"7366:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1186,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7375:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":882,"src":"7375:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"7462:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1192,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7471:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":883,"src":"7471:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"7567:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1200,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7576:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":884,"src":"7576:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"7701:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1212,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7710:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$886_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":885,"src":"7710:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1220,"nodeType":"IfStatement","src":"7697:109:8","trueBody":{"id":1219,"nodeType":"Block","src":"7742:64:8","statements":[{"errorCall":{"arguments":[{"id":1216,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"7786:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1215,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"7763:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"RevertStatement","src":"7756:39:8"}]}},"id":1221,"nodeType":"IfStatement","src":"7563:243:8","trueBody":{"id":1210,"nodeType":"Block","src":"7613:78:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1206,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"7670:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:8","typeDescriptions":{}}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"7634:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"RevertStatement","src":"7627:53:8"}]}},"id":1222,"nodeType":"IfStatement","src":"7458:348:8","trueBody":{"id":1198,"nodeType":"Block","src":"7502:55:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1195,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7523:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"RevertStatement","src":"7516:30:8"}]}},"id":1223,"nodeType":"IfStatement","src":"7362:444:8","trueBody":{"id":1190,"nodeType":"Block","src":"7397:55:8","statements":[{"functionReturnParameters":1184,"id":1189,"nodeType":"Return","src":"7411:7:8"}]}}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"7153:122:8","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:8","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"error","nameLocation":"7314:5:8","nodeType":"VariableDeclaration","scope":1225,"src":"7301:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1179,"nodeType":"UserDefinedTypeName","pathNode":{"id":1178,"name":"RecoverError","nameLocations":["7301:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":886,"src":"7301:12:8"},"referencedDeclaration":886,"src":"7301:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$886","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:8","nodeType":"VariableDeclaration","scope":1225,"src":"7321:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:8"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[],"src":"7352:0:8"},"scope":1226,"src":"7280:532:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1227,"src":"344:7470:8","usedErrors":[889,894,899],"usedEvents":[]}],"src":"112:7703:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1238]},"id":1239,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1228,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"142:280:9","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1238,"linearizedBaseContracts":[1238],"name":"IERC165","nameLocation":"433:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"447:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1237,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:9","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:9","nodeType":"VariableDeclaration","scope":1237,"src":"819:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1231,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:9"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"862:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:9"},"scope":1238,"src":"792:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1239,"src":"423:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:756:9"},"id":9},"contracts/AtomicSwap.sol":{"ast":{"absolutePath":"contracts/AtomicSwap.sol","exportedSymbols":{"AtomicSwap":[2310],"Context":[809],"ECDSA":[1226],"IERC1363":[229],"IERC20":[315],"Ownable":[147],"ReentrancyGuard":[878],"SafeERC20":[779]},"id":2311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1240,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2311,"sourceUnit":879,"src":"58:59:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2311,"sourceUnit":148,"src":"118:52:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2311,"sourceUnit":316,"src":"171:56:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2311,"sourceUnit":780,"src":"228:65:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2311,"sourceUnit":1227,"src":"294:62:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1247,"name":"ReentrancyGuard","nameLocations":["600:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":878,"src":"600:15:10"},"id":1248,"nodeType":"InheritanceSpecifier","src":"600:15:10"},{"baseName":{"id":1249,"name":"Ownable","nameLocations":["617:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"617:7:10"},"id":1250,"nodeType":"InheritanceSpecifier","src":"617:7:10"}],"canonicalName":"AtomicSwap","contractDependencies":[],"contractKind":"contract","documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"359:217:10","text":" @title AtomicSwap\n @dev Implements atomic swap functionality with hashlock and timelock\n This is the core contract for cross-chain swaps between Ethereum and Aptos\n Supports both ETH and ERC-20 tokens"},"fullyImplemented":true,"id":2310,"linearizedBaseContracts":[2310,147,809,878],"name":"AtomicSwap","nameLocation":"586:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1286,"nodeType":"Block","src":"665:355:10","statements":[{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1257,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"675:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"755:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1261,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"745:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"745:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"41746f6d696353776170","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"874:12:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c7251b351e71f2e1e4df377188a3744e147250c6ca820cb9e0d9c5f6837ca89","typeString":"literal_string \"AtomicSwap\""},"value":"AtomicSwap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4c7251b351e71f2e1e4df377188a3744e147250c6ca820cb9e0d9c5f6837ca89","typeString":"literal_string \"AtomicSwap\""}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"868:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1265,"name":"bytes","nodeType":"ElementaryTypeName","src":"868:5:10","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"868:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1264,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"858:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"858:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"31","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"922:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1271,"name":"bytes","nodeType":"ElementaryTypeName","src":"916:5:10","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1270,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"906:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"906:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1276,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"945:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"951:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"945:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1280,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"984:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AtomicSwap_$2310","typeString":"contract AtomicSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AtomicSwap_$2310","typeString":"contract AtomicSwap"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"976:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:10","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1259,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"717:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"721:6:10","memberName":"encode","nodeType":"MemberAccess","src":"717:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"717:286:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1258,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"694:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"694:319:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"675:338:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1285,"nodeType":"ExpressionStatement","src":"675:338:10"}]},"id":1287,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1253,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"653:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"657:6:10","memberName":"sender","nodeType":"MemberAccess","src":"653:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1255,"kind":"baseConstructorSpecifier","modifierName":{"id":1252,"name":"Ownable","nameLocations":["645:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"645:7:10"},"nodeType":"ModifierInvocation","src":"645:19:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[],"src":"642:2:10"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[],"src":"665:0:10"},"scope":2310,"src":"631:389:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"3644e515","id":1289,"mutability":"immutable","name":"DOMAIN_SEPARATOR","nameLocation":"1082:16:10","nodeType":"VariableDeclaration","scope":2310,"src":"1057:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1057:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"42655a4c","id":1294,"mutability":"constant","name":"INITIATE_SWAP_TYPEHASH","nameLocation":"1159:22:10","nodeType":"VariableDeclaration","scope":2310,"src":"1135:219:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1135:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"496e69746961746553776170286164647265737320696e69746961746f722c6279746573333220686173686c6f636b2c75696e743235362074696d656c6f636b2c6164647265737320726563697069656e742c6164647265737320746f6b656e2c75696e7432353620616d6f756e742c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1203:145:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_dae6e6c77828941043676793d78986b77a85f6a115edd49e62d3e4e0911ef441","typeString":"literal_string \"InitiateSwap(address initiator,bytes32 hashlock,uint256 timelock,address recipient,address token,uint256 amount,uint256 nonce,uint256 deadline)\""},"value":"InitiateSwap(address initiator,bytes32 hashlock,uint256 timelock,address recipient,address token,uint256 amount,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_dae6e6c77828941043676793d78986b77a85f6a115edd49e62d3e4e0911ef441","typeString":"literal_string \"InitiateSwap(address initiator,bytes32 hashlock,uint256 timelock,address recipient,address token,uint256 amount,uint256 nonce,uint256 deadline)\""}],"id":1291,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1184:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1184:170:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"global":false,"id":1298,"libraryName":{"id":1295,"name":"SafeERC20","nameLocations":["1367:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"1367:9:10"},"nodeType":"UsingForDirective","src":"1361:27:10","typeName":{"id":1297,"nodeType":"UserDefinedTypeName","pathNode":{"id":1296,"name":"IERC20","nameLocations":["1381:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1381:6:10"},"referencedDeclaration":315,"src":"1381:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}},{"global":false,"id":1301,"libraryName":{"id":1299,"name":"ECDSA","nameLocations":["1399:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"1399:5:10"},"nodeType":"UsingForDirective","src":"1393:24:10","typeName":{"id":1300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1409:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"7ecebe00","id":1305,"mutability":"mutable","name":"nonces","nameLocation":"1519:6:10","nodeType":"VariableDeclaration","scope":2310,"src":"1484:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1304,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1484:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c4ddaaa4","id":1309,"mutability":"mutable","name":"usedMetaSignatures","nameLocation":"1625:18:10","nodeType":"VariableDeclaration","scope":2310,"src":"1593:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1308,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1601:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1593:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1307,"name":"bool","nodeType":"ElementaryTypeName","src":"1612:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"f7fed894f2fc26a47c345a04b644fb954bf11c27c2eec80f3f7ffb2cb07ea742","id":1323,"name":"SwapInitiated","nameLocation":"1674:13:10","nodeType":"EventDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"indexed":true,"mutability":"mutable","name":"hashlock","nameLocation":"1713:8:10","nodeType":"VariableDeclaration","scope":1323,"src":"1697:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1697:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1313,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"1747:9:10","nodeType":"VariableDeclaration","scope":1323,"src":"1731:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1782:9:10","nodeType":"VariableDeclaration","scope":1323,"src":"1766:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"1766:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1809:5:10","nodeType":"VariableDeclaration","scope":1323,"src":"1801:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"1801:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1832:6:10","nodeType":"VariableDeclaration","scope":1323,"src":"1824:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1321,"indexed":false,"mutability":"mutable","name":"timelock","nameLocation":"1856:8:10","nodeType":"VariableDeclaration","scope":1323,"src":"1848:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1687:183:10"},"src":"1668:203:10"},{"anonymous":false,"eventSelector":"7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c87701","id":1335,"name":"SwapCompleted","nameLocation":"1887:13:10","nodeType":"EventDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"indexed":true,"mutability":"mutable","name":"hashlock","nameLocation":"1926:8:10","nodeType":"VariableDeclaration","scope":1335,"src":"1910:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1910:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1327,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1960:9:10","nodeType":"VariableDeclaration","scope":1335,"src":"1944:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"1944:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1987:5:10","nodeType":"VariableDeclaration","scope":1335,"src":"1979:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2010:6:10","nodeType":"VariableDeclaration","scope":1335,"src":"2002:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2002:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1333,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"2034:6:10","nodeType":"VariableDeclaration","scope":1335,"src":"2026:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2026:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1900:146:10"},"src":"1881:166:10"},{"anonymous":false,"eventSelector":"a19ac6ff80a8c71a18b3fd648fa480fa092eceb40ca2af1fadc2a1cc6e1baf7b","id":1345,"name":"SwapRefunded","nameLocation":"2063:12:10","nodeType":"EventDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"indexed":true,"mutability":"mutable","name":"hashlock","nameLocation":"2101:8:10","nodeType":"VariableDeclaration","scope":1345,"src":"2085:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2085:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1339,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"2135:9:10","nodeType":"VariableDeclaration","scope":1345,"src":"2119:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"2119:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"2162:5:10","nodeType":"VariableDeclaration","scope":1345,"src":"2154:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2185:6:10","nodeType":"VariableDeclaration","scope":1345,"src":"2177:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2075:122:10"},"src":"2057:141:10"},{"canonicalName":"AtomicSwap.Swap","id":1362,"members":[{"constant":false,"id":1347,"mutability":"mutable","name":"hashlock","nameLocation":"2278:8:10","nodeType":"VariableDeclaration","scope":1362,"src":"2270:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2270:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"timelock","nameLocation":"2333:8:10","nodeType":"VariableDeclaration","scope":1362,"src":"2325:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"initiator","nameLocation":"2390:9:10","nodeType":"VariableDeclaration","scope":1362,"src":"2382:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:10","nodeType":"VariableDeclaration","scope":1362,"src":"2450:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"2450:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"token","nameLocation":"2531:5:10","nodeType":"VariableDeclaration","scope":1362,"src":"2523:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"2523:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"amount","nameLocation":"2602:6:10","nodeType":"VariableDeclaration","scope":1362,"src":"2594:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"completed","nameLocation":"2660:9:10","nodeType":"VariableDeclaration","scope":1362,"src":"2655:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1358,"name":"bool","nodeType":"ElementaryTypeName","src":"2655:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"refunded","nameLocation":"2732:8:10","nodeType":"VariableDeclaration","scope":1362,"src":"2727:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1360,"name":"bool","nodeType":"ElementaryTypeName","src":"2727:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Swap","nameLocation":"2255:4:10","nodeType":"StructDefinition","scope":2310,"src":"2248:547:10","visibility":"public"},{"canonicalName":"AtomicSwap.InitiateSwapMeta","id":1379,"members":[{"constant":false,"id":1364,"mutability":"mutable","name":"initiator","nameLocation":"2843:9:10","nodeType":"VariableDeclaration","scope":1379,"src":"2835:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"2835:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"hashlock","nameLocation":"2915:8:10","nodeType":"VariableDeclaration","scope":1379,"src":"2907:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2907:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"timelock","nameLocation":"2970:8:10","nodeType":"VariableDeclaration","scope":1379,"src":"2962:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2962:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"recipient","nameLocation":"3027:9:10","nodeType":"VariableDeclaration","scope":1379,"src":"3019:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"3019:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"token","nameLocation":"3100:5:10","nodeType":"VariableDeclaration","scope":1379,"src":"3092:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"3092:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"amount","nameLocation":"3171:6:10","nodeType":"VariableDeclaration","scope":1379,"src":"3163:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3163:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"nonce","nameLocation":"3232:5:10","nodeType":"VariableDeclaration","scope":1379,"src":"3224:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"deadline","nameLocation":"3296:8:10","nodeType":"VariableDeclaration","scope":1379,"src":"3288:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3288:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"InitiateSwapMeta","nameLocation":"2808:16:10","nodeType":"StructDefinition","scope":2310,"src":"2801:546:10","visibility":"public"},{"constant":false,"functionSelector":"eb84e7f2","id":1384,"mutability":"mutable","name":"swaps","nameLocation":"3434:5:10","nodeType":"VariableDeclaration","scope":2310,"src":"3402:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap)"},"typeName":{"id":1383,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3410:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3402:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1382,"nodeType":"UserDefinedTypeName","pathNode":{"id":1381,"name":"Swap","nameLocations":["3421:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"3421:4:10"},"referencedDeclaration":1362,"src":"3421:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"}}},"visibility":"public"},{"constant":false,"functionSelector":"ffdfa6de","id":1388,"mutability":"mutable","name":"hashlockUsed","nameLocation":"3534:12:10","nodeType":"VariableDeclaration","scope":2310,"src":"3502:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1387,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3510:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3502:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1386,"name":"bool","nodeType":"ElementaryTypeName","src":"3521:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":true,"functionSelector":"fb0c7549","id":1391,"mutability":"constant","name":"MIN_TIMELOCK","nameLocation":"3623:12:10","nodeType":"VariableDeclaration","scope":2310,"src":"3599:46:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3599:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3638:7:10","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"94f1825b","id":1394,"mutability":"constant","name":"MAX_TIMELOCK","nameLocation":"3722:12:10","nodeType":"VariableDeclaration","scope":2310,"src":"3698:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3698:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3737:6:10","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"errorSelector":"e9204a06","id":1396,"name":"HashlockAlreadyUsed","nameLocation":"3774:19:10","nodeType":"ErrorDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"3793:2:10"},"src":"3768:28:10"},{"errorSelector":"5ec69df0","id":1398,"name":"SwapNotFound","nameLocation":"3807:12:10","nodeType":"ErrorDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"3819:2:10"},"src":"3801:21:10"},{"errorSelector":"f6c66187","id":1400,"name":"SwapAlreadyCompleted","nameLocation":"3833:20:10","nodeType":"ErrorDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"3853:2:10"},"src":"3827:29:10"},{"errorSelector":"a2640b27","id":1402,"name":"SwapAlreadyRefunded","nameLocation":"3867:19:10","nodeType":"ErrorDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[],"src":"3886:2:10"},"src":"3861:28:10"},{"errorSelector":"621e25c3","id":1404,"name":"TimelockNotExpired","nameLocation":"3900:18:10","nodeType":"ErrorDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"3918:2:10"},"src":"3894:27:10"},{"errorSelector":"7a6fcaa6","id":1406,"name":"TimelockExpired","nameLocation":"3932:15:10","nodeType":"ErrorDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"3947:2:10"},"src":"3926:24:10"},{"errorSelector":"abab6bd7","id":1408,"name":"InvalidSecret","nameLocation":"3961:13:10","nodeType":"ErrorDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"3974:2:10"},"src":"3955:22:10"},{"errorSelector":"f8d10e82","id":1410,"name":"InvalidTimelock","nameLocation":"3988:15:10","nodeType":"ErrorDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"4003:2:10"},"src":"3982:24:10"},{"errorSelector":"9c8d2cd2","id":1412,"name":"InvalidRecipient","nameLocation":"4017:16:10","nodeType":"ErrorDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"4033:2:10"},"src":"4011:25:10"},{"errorSelector":"2c5211c6","id":1414,"name":"InvalidAmount","nameLocation":"4047:13:10","nodeType":"ErrorDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"4060:2:10"},"src":"4041:22:10"},{"errorSelector":"f4d678b8","id":1416,"name":"InsufficientBalance","nameLocation":"4074:19:10","nodeType":"ErrorDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"4093:2:10"},"src":"4068:28:10"},{"errorSelector":"90b8ec18","id":1418,"name":"TransferFailed","nameLocation":"4107:14:10","nodeType":"ErrorDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"4121:2:10"},"src":"4101:23:10"},{"errorSelector":"8baa579f","id":1420,"name":"InvalidSignature","nameLocation":"4135:16:10","nodeType":"ErrorDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[],"src":"4151:2:10"},"src":"4129:25:10"},{"errorSelector":"0819bdcd","id":1422,"name":"SignatureExpired","nameLocation":"4165:16:10","nodeType":"ErrorDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[],"src":"4181:2:10"},"src":"4159:25:10"},{"errorSelector":"900bb2c9","id":1424,"name":"SignatureAlreadyUsed","nameLocation":"4195:20:10","nodeType":"ErrorDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[],"src":"4215:2:10"},"src":"4189:29:10"},{"errorSelector":"756688fe","id":1426,"name":"InvalidNonce","nameLocation":"4229:12:10","nodeType":"ErrorDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[],"src":"4241:2:10"},"src":"4223:21:10"},{"body":{"id":1451,"nodeType":"Block","src":"4711:81:10","statements":[{"expression":{"arguments":[{"id":1441,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"4735:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1442,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"4745:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1443,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"4755:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4766:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"4766:7:10","typeDescriptions":{}}},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1448,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4778:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1440,"name":"_initiateSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"4721:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,address,address,uint256)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4721:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"ExpressionStatement","src":"4721:64:10"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"4254:291:10","text":" @dev Initiates a new atomic swap with ETH\n @param hashlock The hash of the secret only (keccak256(secret))\n @param timelock The expiration timestamp\n @param recipient The address that will receive the tokens\n @param amount The amount of ETH to swap"},"functionSelector":"902d7236","id":1452,"implemented":true,"kind":"function","modifiers":[{"id":1438,"kind":"modifierInvocation","modifierName":{"id":1437,"name":"nonReentrant","nameLocations":["4698:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"4698:12:10"},"nodeType":"ModifierInvocation","src":"4698:12:10"}],"name":"initiateSwap","nameLocation":"4559:12:10","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"hashlock","nameLocation":"4589:8:10","nodeType":"VariableDeclaration","scope":1452,"src":"4581:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4581:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"timelock","nameLocation":"4615:8:10","nodeType":"VariableDeclaration","scope":1452,"src":"4607:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4607:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"recipient","nameLocation":"4641:9:10","nodeType":"VariableDeclaration","scope":1452,"src":"4633:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"4633:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"amount","nameLocation":"4668:6:10","nodeType":"VariableDeclaration","scope":1452,"src":"4660:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4571:109:10"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"4711:0:10"},"scope":2310,"src":"4550:242:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1560,"nodeType":"Block","src":"5154:1485:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1463,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5205:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5211:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"5205:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1465,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5223:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5232:8:10","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"5223:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5205:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1472,"nodeType":"IfStatement","src":"5201:91:10","trueBody":{"id":1471,"nodeType":"Block","src":"5242:50:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1468,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"5263:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5263:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"RevertStatement","src":"5256:25:10"}]}},{"assignments":[1474],"declarations":[{"constant":false,"id":1474,"mutability":"mutable","name":"structHash","nameLocation":"5497:10:10","nodeType":"VariableDeclaration","scope":1560,"src":"5489:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5489:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1497,"initialValue":{"arguments":[{"arguments":[{"id":1478,"name":"INITIATE_SWAP_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5561:22:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1479,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5601:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5610:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"5601:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1481,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5637:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5646:8:10","memberName":"hashlock","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"5637:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1483,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5672:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5681:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"5672:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1485,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5707:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"5707:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1487,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5743:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5752:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1372,"src":"5743:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1489,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5775:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5784:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"5775:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1491,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5808:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5817:5:10","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"5808:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1493,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5840:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5849:8:10","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"5840:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1476,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5533:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5537:6:10","memberName":"encode","nodeType":"MemberAccess","src":"5533:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:338:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1475,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5510:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:371:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5489:392:10"},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"hash","nameLocation":"5908:4:10","nodeType":"VariableDeclaration","scope":1560,"src":"5900:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5900:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1508,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5955:10:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":1504,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5967:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1505,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"5985:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1501,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5938:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5942:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"5938:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5938:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1500,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5915:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5915:91:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5900:106:10"},{"condition":{"baseExpression":{"id":1509,"name":"usedMetaSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6073:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1511,"indexExpression":{"id":1510,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6092:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6073:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1516,"nodeType":"IfStatement","src":"6069:84:10","trueBody":{"id":1515,"nodeType":"Block","src":"6099:54:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1512,"name":"SignatureAlreadyUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"6120:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6120:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"RevertStatement","src":"6113:29:10"}]}},{"assignments":[1518],"declarations":[{"constant":false,"id":1518,"mutability":"mutable","name":"signer","nameLocation":"6207:6:10","nodeType":"VariableDeclaration","scope":1560,"src":"6199:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"6199:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1523,"initialValue":{"arguments":[{"id":1521,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6229:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1519,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6216:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6221:7:10","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":982,"src":"6216:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6216:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6199:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1524,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"6253:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1525,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6263:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6272:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"6263:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6253:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"nodeType":"IfStatement","src":"6249:84:10","trueBody":{"id":1531,"nodeType":"Block","src":"6283:50:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1528,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"6304:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6304:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"RevertStatement","src":"6297:25:10"}]}},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1533,"name":"usedMetaSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6405:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1535,"indexExpression":{"id":1534,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6424:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6405:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6432:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6405:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1538,"nodeType":"ExpressionStatement","src":"6405:31:10"},{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6446:28:10","subExpression":{"baseExpression":{"id":1539,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"6446:6:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1542,"indexExpression":{"expression":{"id":1540,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6453:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6462:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"6453:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6446:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"6446:28:10"},{"expression":{"arguments":[{"expression":{"id":1546,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6546:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6555:8:10","memberName":"hashlock","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"6546:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1548,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6565:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6574:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"6565:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1550,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6584:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6593:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"6584:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6612:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6604:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"6604:7:10","typeDescriptions":{}}},"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6604:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1556,"name":"metaData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6616:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta calldata"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6625:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"6616:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1545,"name":"_initiateSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6532:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,address,address,uint256)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6532:100:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1559,"nodeType":"ExpressionStatement","src":"6532:100:10"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"4800:209:10","text":" @dev Meta-transaction version of initiateSwap - allows gasless swap initiation\n @param metaData The swap initiation data signed by the user\n @param signature The user's signature"},"functionSelector":"b401eb56","id":1561,"implemented":true,"kind":"function","modifiers":[{"id":1461,"kind":"modifierInvocation","modifierName":{"id":1460,"name":"nonReentrant","nameLocations":["5141:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"5141:12:10"},"nodeType":"ModifierInvocation","src":"5141:12:10"}],"name":"initiateSwapMeta","nameLocation":"5023:16:10","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"metaData","nameLocation":"5075:8:10","nodeType":"VariableDeclaration","scope":1561,"src":"5049:34:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_calldata_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta"},"typeName":{"id":1455,"nodeType":"UserDefinedTypeName","pathNode":{"id":1454,"name":"InitiateSwapMeta","nameLocations":["5049:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1379,"src":"5049:16:10"},"referencedDeclaration":1379,"src":"5049:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_InitiateSwapMeta_$1379_storage_ptr","typeString":"struct AtomicSwap.InitiateSwapMeta"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"signature","nameLocation":"5108:9:10","nodeType":"VariableDeclaration","scope":1561,"src":"5093:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"5093:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5039:84:10"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[],"src":"5154:0:10"},"scope":2310,"src":"5014:1625:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1585,"nodeType":"Block","src":"6805:81:10","statements":[{"expression":{"arguments":[{"id":1575,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6829:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1576,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"6839:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1577,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6849:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6868:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6860:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"6860:7:10","typeDescriptions":{}}},"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"6872:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1574,"name":"_initiateSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6815:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,address,address,uint256)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6815:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"6815:64:10"}]},"id":1586,"implemented":true,"kind":"function","modifiers":[{"id":1572,"kind":"modifierInvocation","modifierName":{"id":1571,"name":"nonReentrant","nameLocations":["6792:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"6792:12:10"},"nodeType":"ModifierInvocation","src":"6792:12:10"}],"name":"_initiateSwapHelper","nameLocation":"6654:19:10","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"hashlock","nameLocation":"6691:8:10","nodeType":"VariableDeclaration","scope":1586,"src":"6683:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6683:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"timelock","nameLocation":"6717:8:10","nodeType":"VariableDeclaration","scope":1586,"src":"6709:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"6709:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"recipient","nameLocation":"6743:9:10","nodeType":"VariableDeclaration","scope":1586,"src":"6735:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"6735:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"amount","nameLocation":"6770:6:10","nodeType":"VariableDeclaration","scope":1586,"src":"6762:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"6762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6673:109:10"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"6805:0:10"},"scope":2310,"src":"6645:241:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"7431:214:10","statements":[{"expression":{"arguments":[{"id":1603,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"7455:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1604,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"7465:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1605,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"7475:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1606,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"7486:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1607,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"7493:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1602,"name":"_initiateSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7441:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,address,address,uint256)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7441:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"7441:59:10"},{"expression":{"arguments":[{"expression":{"id":1614,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7604:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7608:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7604:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1618,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7624:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AtomicSwap_$2310","typeString":"contract AtomicSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AtomicSwap_$2310","typeString":"contract AtomicSwap"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7616:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"7616:7:10","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7616:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"7631:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1611,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"7580:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1610,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7573:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7573:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7587:16:10","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":387,"src":"7573:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7573:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1622,"nodeType":"ExpressionStatement","src":"7573:65:10"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"6896:349:10","text":" @dev Initiates a new atomic swap with ERC-20 tokens\n @param hashlock The hash of the secret only (keccak256(secret))\n @param timelock The expiration timestamp\n @param recipient The address that will receive the tokens\n @param token The ERC-20 token address\n @param amount The amount of tokens to swap"},"functionSelector":"dd781188","id":1624,"implemented":true,"kind":"function","modifiers":[{"id":1600,"kind":"modifierInvocation","modifierName":{"id":1599,"name":"nonReentrant","nameLocations":["7418:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"7418:12:10"},"nodeType":"ModifierInvocation","src":"7418:12:10"}],"name":"initiateTokenSwap","nameLocation":"7259:17:10","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"hashlock","nameLocation":"7294:8:10","nodeType":"VariableDeclaration","scope":1624,"src":"7286:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7286:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"timelock","nameLocation":"7320:8:10","nodeType":"VariableDeclaration","scope":1624,"src":"7312:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"7312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"recipient","nameLocation":"7346:9:10","nodeType":"VariableDeclaration","scope":1624,"src":"7338:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"7338:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"token","nameLocation":"7373:5:10","nodeType":"VariableDeclaration","scope":1624,"src":"7365:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"amount","nameLocation":"7396:6:10","nodeType":"VariableDeclaration","scope":1624,"src":"7388:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7388:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7276:132:10"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"7431:0:10"},"scope":2310,"src":"7250:395:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1754,"nodeType":"Block","src":"8152:1304:10","statements":[{"condition":{"baseExpression":{"id":1638,"name":"hashlockUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"8166:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1640,"indexExpression":{"id":1639,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"8179:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8166:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1645,"nodeType":"IfStatement","src":"8162:81:10","trueBody":{"id":1644,"nodeType":"Block","src":"8190:53:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1641,"name":"HashlockAlreadyUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"8211:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8211:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1643,"nodeType":"RevertStatement","src":"8204:28:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1646,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"8265:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1647,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8276:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8282:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"8276:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1649,"name":"MIN_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"8294:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8276:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8265:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"8310:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1653,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8321:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8327:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"8321:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1655,"name":"MAX_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"8339:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8321:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8310:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8265:86:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1663,"nodeType":"IfStatement","src":"8261:141:10","trueBody":{"id":1662,"nodeType":"Block","src":"8353:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1659,"name":"InvalidTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"8374:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"RevertStatement","src":"8367:24:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1664,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"8424:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8445:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8437:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"8437:7:10","typeDescriptions":{}}},"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8437:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8424:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1674,"nodeType":"IfStatement","src":"8420:79:10","trueBody":{"id":1673,"nodeType":"Block","src":"8449:50:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1670,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8470:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"RevertStatement","src":"8463:25:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8521:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8531:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8521:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1682,"nodeType":"IfStatement","src":"8517:64:10","trueBody":{"id":1681,"nodeType":"Block","src":"8534:47:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1678,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"8555:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8555:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"RevertStatement","src":"8548:22:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"8664:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8673:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"8673:7:10","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8673:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8664:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"IfStatement","src":"8660:129:10","trueBody":{"id":1698,"nodeType":"Block","src":"8685:104:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1689,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8703:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8707:5:10","memberName":"value","nodeType":"MemberAccess","src":"8703:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8716:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8703:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1697,"nodeType":"IfStatement","src":"8699:80:10","trueBody":{"id":1696,"nodeType":"Block","src":"8724:55:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1693,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"8749:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8749:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1695,"nodeType":"RevertStatement","src":"8742:22:10"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"8852:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8869:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8861:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"8861:7:10","typeDescriptions":{}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8861:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8852:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1721,"nodeType":"IfStatement","src":"8848:160:10","trueBody":{"id":1720,"nodeType":"Block","src":"8873:135:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8915:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8919:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8915:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1707,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"8898:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1706,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"8891:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8905:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":272,"src":"8891:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8929:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8891:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1719,"nodeType":"IfStatement","src":"8887:111:10","trueBody":{"id":1718,"nodeType":"Block","src":"8937:61:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1715,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"8962:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8962:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"RevertStatement","src":"8955:28:10"}]}}]}},{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1722,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9026:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1724,"indexExpression":{"id":1723,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"9032:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9026:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1726,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"9073:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1727,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"9105:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9138:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9142:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9138:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1730,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"9173:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"9203:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9230:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9261:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9290:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1725,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"9044:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Swap_$1362_storage_ptr_$","typeString":"type(struct AtomicSwap.Swap storage pointer)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9063:8:10","9095:8:10","9127:9:10","9162:9:10","9196:5:10","9222:6:10","9250:9:10","9280:8:10"],"names":["hashlock","timelock","initiator","recipient","token","amount","completed","refunded"],"nodeType":"FunctionCall","src":"9044:262:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_memory_ptr","typeString":"struct AtomicSwap.Swap memory"}},"src":"9026:280:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"id":1737,"nodeType":"ExpressionStatement","src":"9026:280:10"},{"expression":{"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1738,"name":"hashlockUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9325:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1740,"indexExpression":{"id":1739,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"9338:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9325:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9350:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9325:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"ExpressionStatement","src":"9325:29:10"},{"eventCall":{"arguments":[{"id":1745,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"9392:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1746,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9402:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9406:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9402:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"9414:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1749,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"9425:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1750,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9432:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1751,"name":"timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"9440:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1744,"name":"SwapInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"9378:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9378:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"EmitStatement","src":"9373:76:10"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"7655:328:10","text":" @dev Internal function to initiate a swap\n @param hashlock The hash of the secret\n @param timelock The expiration timestamp\n @param recipient The address that will receive the tokens\n @param token The token address (address(0) for ETH)\n @param amount The amount of tokens to swap"},"id":1755,"implemented":true,"kind":"function","modifiers":[],"name":"_initiateSwap","nameLocation":"7997:13:10","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"hashlock","nameLocation":"8028:8:10","nodeType":"VariableDeclaration","scope":1755,"src":"8020:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8020:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"timelock","nameLocation":"8054:8:10","nodeType":"VariableDeclaration","scope":1755,"src":"8046:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"8046:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"recipient","nameLocation":"8080:9:10","nodeType":"VariableDeclaration","scope":1755,"src":"8072:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"8072:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"token","nameLocation":"8107:5:10","nodeType":"VariableDeclaration","scope":1755,"src":"8099:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"8099:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"amount","nameLocation":"8130:6:10","nodeType":"VariableDeclaration","scope":1755,"src":"8122:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8122:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8010:132:10"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[],"src":"8152:0:10"},"scope":2310,"src":"7988:1468:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1877,"nodeType":"Block","src":"9719:1256:10","statements":[{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"swap","nameLocation":"9742:4:10","nodeType":"VariableDeclaration","scope":1877,"src":"9729:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1766,"nodeType":"UserDefinedTypeName","pathNode":{"id":1765,"name":"Swap","nameLocations":["9729:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"9729:4:10"},"referencedDeclaration":1362,"src":"9729:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1771,"initialValue":{"baseExpression":{"id":1768,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9749:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1770,"indexExpression":{"id":1769,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"9755:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9749:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9729:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1772,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"9787:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9792:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"9787:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9813:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"9805:7:10","typeDescriptions":{}}},"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9787:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1783,"nodeType":"IfStatement","src":"9783:80:10","trueBody":{"id":1782,"nodeType":"Block","src":"9817:46:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1779,"name":"SwapNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"9838:12:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9838:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"RevertStatement","src":"9831:21:10"}]}},{"condition":{"expression":{"id":1784,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"9885:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9890:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"9885:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1790,"nodeType":"IfStatement","src":"9881:74:10","trueBody":{"id":1789,"nodeType":"Block","src":"9901:54:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1786,"name":"SwapAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"9922:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"RevertStatement","src":"9915:29:10"}]}},{"condition":{"expression":{"id":1791,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"9977:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9982:8:10","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"9977:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1797,"nodeType":"IfStatement","src":"9973:72:10","trueBody":{"id":1796,"nodeType":"Block","src":"9992:53:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1793,"name":"SwapAlreadyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"10013:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10013:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"RevertStatement","src":"10006:28:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1798,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10067:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10073:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"10067:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1800,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10086:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10091:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"10086:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10067:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1807,"nodeType":"IfStatement","src":"10063:87:10","trueBody":{"id":1806,"nodeType":"Block","src":"10101:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1803,"name":"TimelockExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10122:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10122:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1805,"nodeType":"RevertStatement","src":"10115:24:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1811,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"10270:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1809,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10253:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10257:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"10253:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10253:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1808,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10243:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10243:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1814,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"10282:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10243:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1820,"nodeType":"IfStatement","src":"10239:100:10","trueBody":{"id":1819,"nodeType":"Block","src":"10292:47:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1816,"name":"InvalidSecret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"10313:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10313:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"RevertStatement","src":"10306:22:10"}]}},{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1821,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10443:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10448:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"10443:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10460:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10443:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1826,"nodeType":"ExpressionStatement","src":"10443:21:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1827,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10527:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10532:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"10527:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10549:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10541:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"10541:7:10","typeDescriptions":{}}},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10527:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1864,"nodeType":"Block","src":"10757:116:10","statements":[{"expression":{"arguments":[{"expression":{"id":1858,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10834:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10839:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"10834:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1860,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10850:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10855:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"10850:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1854,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10809:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10814:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"10809:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1853,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"10802:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10802:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10821:12:10","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"10802:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10802:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"ExpressionStatement","src":"10802:60:10"}]},"id":1865,"nodeType":"IfStatement","src":"10523:350:10","trueBody":{"id":1852,"nodeType":"Block","src":"10553:198:10","statements":[{"assignments":[1835,null],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"success","nameLocation":"10601:7:10","nodeType":"VariableDeclaration","scope":1852,"src":"10596:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1834,"name":"bool","nodeType":"ElementaryTypeName","src":"10596:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1844,"initialValue":{"arguments":[{"hexValue":"","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10654:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1836,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10614:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10619:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"10614:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10629:4:10","memberName":"call","nodeType":"MemberAccess","src":"10614:19:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1839,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10641:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10646:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"10641:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10614:39:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10614:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10595:62:10"},{"condition":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10675:8:10","subExpression":{"id":1845,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"10676:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"10671:70:10","trueBody":{"id":1850,"nodeType":"Block","src":"10685:56:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1847,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"10710:14:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10710:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"RevertStatement","src":"10703:23:10"}]}}]}},{"eventCall":{"arguments":[{"id":1867,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"10910:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1868,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10920:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10925:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"10920:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1870,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10936:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10941:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"10936:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1872,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"10948:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10953:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"10948:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1874,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"10961:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1866,"name":"SwapCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"10896:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,uint256,bytes32)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10896:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1876,"nodeType":"EmitStatement","src":"10891:77:10"}]},"documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"9466:170:10","text":" @dev Completes a swap by providing the secret\n @param hashlock The hash of the secret\n @param secret The secret that generates the hashlock"},"functionSelector":"78dc3356","id":1878,"implemented":true,"kind":"function","modifiers":[{"id":1763,"kind":"modifierInvocation","modifierName":{"id":1762,"name":"nonReentrant","nameLocations":["9706:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"9706:12:10"},"nodeType":"ModifierInvocation","src":"9706:12:10"}],"name":"completeSwap","nameLocation":"9650:12:10","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"hashlock","nameLocation":"9671:8:10","nodeType":"VariableDeclaration","scope":1878,"src":"9663:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9663:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"secret","nameLocation":"9689:6:10","nodeType":"VariableDeclaration","scope":1878,"src":"9681:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9681:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9662:34:10"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[],"src":"9719:0:10"},"scope":2310,"src":"9641:1334:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2020,"nodeType":"Block","src":"11362:1534:10","statements":[{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"swap","nameLocation":"11385:4:10","nodeType":"VariableDeclaration","scope":2020,"src":"11372:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":1889,"nodeType":"UserDefinedTypeName","pathNode":{"id":1888,"name":"Swap","nameLocations":["11372:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"11372:4:10"},"referencedDeclaration":1362,"src":"11372:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":1894,"initialValue":{"baseExpression":{"id":1891,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"11392:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":1893,"indexExpression":{"id":1892,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"11398:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11392:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11372:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1895,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"11430:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11435:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"11430:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11456:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11448:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"11448:7:10","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11448:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11430:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"11426:80:10","trueBody":{"id":1905,"nodeType":"Block","src":"11460:46:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1902,"name":"SwapNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"11481:12:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11481:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"RevertStatement","src":"11474:21:10"}]}},{"condition":{"expression":{"id":1907,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"11528:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11533:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"11528:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"11524:74:10","trueBody":{"id":1912,"nodeType":"Block","src":"11544:54:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1909,"name":"SwapAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"11565:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11565:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"RevertStatement","src":"11558:29:10"}]}},{"condition":{"expression":{"id":1914,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"11620:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11625:8:10","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"11620:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1920,"nodeType":"IfStatement","src":"11616:72:10","trueBody":{"id":1919,"nodeType":"Block","src":"11635:53:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1916,"name":"SwapAlreadyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"11656:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"RevertStatement","src":"11649:28:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1921,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11710:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11716:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"11710:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1923,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"11729:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11734:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"11729:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11710:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1930,"nodeType":"IfStatement","src":"11706:87:10","trueBody":{"id":1929,"nodeType":"Block","src":"11744:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1926,"name":"TimelockExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"11765:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11765:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"RevertStatement","src":"11758:24:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1934,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"11913:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1932,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11896:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11900:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"11896:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11896:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1931,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11886:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11886:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1937,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"11925:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11886:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1943,"nodeType":"IfStatement","src":"11882:100:10","trueBody":{"id":1942,"nodeType":"Block","src":"11935:47:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1939,"name":"InvalidSecret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"11956:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11956:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1941,"nodeType":"RevertStatement","src":"11949:22:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12062:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12066:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12062:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1946,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12076:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12081:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"12076:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12062:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1953,"nodeType":"IfStatement","src":"12058:84:10","trueBody":{"id":1952,"nodeType":"Block","src":"12092:50:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1949,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"12113:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12113:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"RevertStatement","src":"12106:25:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12241:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12245:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12241:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1956,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12255:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12260:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"12255:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12241:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"IfStatement","src":"12237:84:10","trueBody":{"id":1962,"nodeType":"Block","src":"12271:50:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1959,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"12292:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12292:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1961,"nodeType":"RevertStatement","src":"12285:25:10"}]}},{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1964,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12339:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12344:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"12339:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12356:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12339:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1969,"nodeType":"ExpressionStatement","src":"12339:21:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1970,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12448:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12453:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"12448:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12470:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12462:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"12462:7:10","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12462:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12448:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2007,"nodeType":"Block","src":"12678:116:10","statements":[{"expression":{"arguments":[{"expression":{"id":2001,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12755:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12760:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"12755:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2003,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12771:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12776:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"12771:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1997,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12730:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12735:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"12730:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1996,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"12723:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12723:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12742:12:10","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"12723:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12723:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2006,"nodeType":"ExpressionStatement","src":"12723:60:10"}]},"id":2008,"nodeType":"IfStatement","src":"12444:350:10","trueBody":{"id":1995,"nodeType":"Block","src":"12474:198:10","statements":[{"assignments":[1978,null],"declarations":[{"constant":false,"id":1978,"mutability":"mutable","name":"success","nameLocation":"12522:7:10","nodeType":"VariableDeclaration","scope":1995,"src":"12517:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1977,"name":"bool","nodeType":"ElementaryTypeName","src":"12517:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1987,"initialValue":{"arguments":[{"hexValue":"","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12575:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1979,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12535:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12540:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"12535:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12550:4:10","memberName":"call","nodeType":"MemberAccess","src":"12535:19:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1982,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12562:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":1983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12567:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"12562:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12535:39:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12535:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12516:62:10"},{"condition":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12596:8:10","subExpression":{"id":1988,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"12597:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1994,"nodeType":"IfStatement","src":"12592:70:10","trueBody":{"id":1993,"nodeType":"Block","src":"12606:56:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1990,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"12631:14:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12631:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1992,"nodeType":"RevertStatement","src":"12624:23:10"}]}}]}},{"eventCall":{"arguments":[{"id":2010,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"12831:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2011,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12841:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12846:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"12841:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2013,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12857:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12862:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"12857:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2015,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12869:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12874:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"12869:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2017,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"12882:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2009,"name":"SwapCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"12817:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,uint256,bytes32)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12817:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2019,"nodeType":"EmitStatement","src":"12812:77:10"}]},"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"10981:287:10","text":" @dev Completes a swap by the initiator (for cross-chain atomic swaps)\n This allows the initiator to complete their own swap when they are also the recipient\n @param hashlock The hash of the secret\n @param secret The secret that generates the hashlock"},"functionSelector":"47899a0b","id":2021,"implemented":true,"kind":"function","modifiers":[{"id":1886,"kind":"modifierInvocation","modifierName":{"id":1885,"name":"nonReentrant","nameLocations":["11349:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"11349:12:10"},"nodeType":"ModifierInvocation","src":"11349:12:10"}],"name":"completeSwapAsInitiator","nameLocation":"11282:23:10","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"hashlock","nameLocation":"11314:8:10","nodeType":"VariableDeclaration","scope":2021,"src":"11306:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11306:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"secret","nameLocation":"11332:6:10","nodeType":"VariableDeclaration","scope":2021,"src":"11324:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11324:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11305:34:10"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"11362:0:10"},"scope":2310,"src":"11273:1623:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2137,"nodeType":"Block","src":"13082:1121:10","statements":[{"assignments":[2031],"declarations":[{"constant":false,"id":2031,"mutability":"mutable","name":"swap","nameLocation":"13105:4:10","nodeType":"VariableDeclaration","scope":2137,"src":"13092:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":2030,"nodeType":"UserDefinedTypeName","pathNode":{"id":2029,"name":"Swap","nameLocations":["13092:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"13092:4:10"},"referencedDeclaration":1362,"src":"13092:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":2035,"initialValue":{"baseExpression":{"id":2032,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"13112:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":2034,"indexExpression":{"id":2033,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"13118:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13112:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13092:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2036,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13150:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13155:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"13150:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13176:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13168:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"13168:7:10","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13168:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13150:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"13146:80:10","trueBody":{"id":2046,"nodeType":"Block","src":"13180:46:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2043,"name":"SwapNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"13201:12:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13201:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"RevertStatement","src":"13194:21:10"}]}},{"condition":{"expression":{"id":2048,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13248:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13253:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"13248:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"IfStatement","src":"13244:74:10","trueBody":{"id":2053,"nodeType":"Block","src":"13264:54:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2050,"name":"SwapAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"13285:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13285:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2052,"nodeType":"RevertStatement","src":"13278:29:10"}]}},{"condition":{"expression":{"id":2055,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13340:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13345:8:10","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"13340:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"13336:72:10","trueBody":{"id":2060,"nodeType":"Block","src":"13355:53:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2057,"name":"SwapAlreadyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"13376:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13376:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2059,"nodeType":"RevertStatement","src":"13369:28:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2062,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13430:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13436:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"13430:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2064,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13448:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13453:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"13448:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13430:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"13426:89:10","trueBody":{"id":2070,"nodeType":"Block","src":"13463:52:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"TimelockNotExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"13484:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"RevertStatement","src":"13477:27:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2072,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13578:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13582:6:10","memberName":"sender","nodeType":"MemberAccess","src":"13578:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2074,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13592:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13597:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"13592:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13578:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"13574:84:10","trueBody":{"id":2080,"nodeType":"Block","src":"13608:50:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"InvalidRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"13629:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13629:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"13622:25:10"}]}},{"expression":{"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2082,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13676:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13681:8:10","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"13676:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13692:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13676:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2087,"nodeType":"ExpressionStatement","src":"13676:20:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2088,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13764:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13769:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"13764:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13786:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13778:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2090,"name":"address","nodeType":"ElementaryTypeName","src":"13778:7:10","typeDescriptions":{}}},"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13778:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13764:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2125,"nodeType":"Block","src":"13994:116:10","statements":[{"expression":{"arguments":[{"expression":{"id":2119,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"14071:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14076:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"14071:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2121,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"14087:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14092:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"14087:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2115,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"14046:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14051:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"14046:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2114,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"14039:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14039:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14058:12:10","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"14039:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14039:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"ExpressionStatement","src":"14039:60:10"}]},"id":2126,"nodeType":"IfStatement","src":"13760:350:10","trueBody":{"id":2113,"nodeType":"Block","src":"13790:198:10","statements":[{"assignments":[2096,null],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"success","nameLocation":"13838:7:10","nodeType":"VariableDeclaration","scope":2113,"src":"13833:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2095,"name":"bool","nodeType":"ElementaryTypeName","src":"13833:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2105,"initialValue":{"arguments":[{"hexValue":"","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13891:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":2097,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13851:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13856:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"13851:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13866:4:10","memberName":"call","nodeType":"MemberAccess","src":"13851:19:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2100,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"13878:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13883:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"13878:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13851:39:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13851:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13832:62:10"},{"condition":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13912:8:10","subExpression":{"id":2106,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"13913:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2112,"nodeType":"IfStatement","src":"13908:70:10","trueBody":{"id":2111,"nodeType":"Block","src":"13922:56:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2108,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"13947:14:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13947:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"RevertStatement","src":"13940:23:10"}]}}]}},{"eventCall":{"arguments":[{"id":2128,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"14146:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2129,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"14156:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14161:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"14156:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2131,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"14172:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14177:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"14172:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2133,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"14184:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14189:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"14184:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2127,"name":"SwapRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"14133:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14133:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2136,"nodeType":"EmitStatement","src":"14128:68:10"}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"12906:111:10","text":" @dev Refunds a swap after the timelock expires\n @param hashlock The hash of the secret"},"functionSelector":"fe2510ee","id":2138,"implemented":true,"kind":"function","modifiers":[{"id":2027,"kind":"modifierInvocation","modifierName":{"id":2026,"name":"nonReentrant","nameLocations":["13069:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"13069:12:10"},"nodeType":"ModifierInvocation","src":"13069:12:10"}],"name":"refundSwap","nameLocation":"13031:10:10","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"hashlock","nameLocation":"13050:8:10","nodeType":"VariableDeclaration","scope":2138,"src":"13042:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13042:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13041:18:10"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"13082:0:10"},"scope":2310,"src":"13022:1181:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2176,"nodeType":"Block","src":"14443:233:10","statements":[{"assignments":[2148],"declarations":[{"constant":false,"id":2148,"mutability":"mutable","name":"swap","nameLocation":"14466:4:10","nodeType":"VariableDeclaration","scope":2176,"src":"14453:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":2147,"nodeType":"UserDefinedTypeName","pathNode":{"id":2146,"name":"Swap","nameLocations":["14453:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"14453:4:10"},"referencedDeclaration":1362,"src":"14453:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":2152,"initialValue":{"baseExpression":{"id":2149,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"14473:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":2151,"indexExpression":{"id":2150,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"14479:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14473:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14453:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2153,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"14511:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14516:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"14511:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14537:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14529:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"14529:7:10","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14529:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14511:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":2160,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"14543:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14548:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"14543:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14511:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":2163,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"14561:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14566:8:10","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"14561:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14511:63:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"14507:106:10","trueBody":{"id":2168,"nodeType":"Block","src":"14576:37:10","statements":[{"expression":{"hexValue":"66616c7365","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14597:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2145,"id":2167,"nodeType":"Return","src":"14590:12:10"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2170,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14638:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14644:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"14638:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2172,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"14656:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14661:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"14656:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14638:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2145,"id":2175,"nodeType":"Return","src":"14631:38:10"}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"14213:157:10","text":" @dev Checks if a swap can be completed\n @param hashlock The hash of the secret\n @return bool True if the swap can be completed"},"functionSelector":"f4611fae","id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"canComplete","nameLocation":"14384:11:10","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"hashlock","nameLocation":"14404:8:10","nodeType":"VariableDeclaration","scope":2177,"src":"14396:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14396:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14395:18:10"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"14437:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2143,"name":"bool","nodeType":"ElementaryTypeName","src":"14437:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14436:6:10"},"scope":2310,"src":"14375:301:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2215,"nodeType":"Block","src":"14912:234:10","statements":[{"assignments":[2187],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"swap","nameLocation":"14935:4:10","nodeType":"VariableDeclaration","scope":2215,"src":"14922:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":2186,"nodeType":"UserDefinedTypeName","pathNode":{"id":2185,"name":"Swap","nameLocations":["14922:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"14922:4:10"},"referencedDeclaration":1362,"src":"14922:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":2191,"initialValue":{"baseExpression":{"id":2188,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"14942:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":2190,"indexExpression":{"id":2189,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"14948:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14942:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14922:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2192,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"14980:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14985:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"14980:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15006:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14998:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"14998:7:10","typeDescriptions":{}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14998:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14980:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":2199,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"15012:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15017:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"15012:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14980:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":2202,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"15030:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15035:8:10","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"15030:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14980:63:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2208,"nodeType":"IfStatement","src":"14976:106:10","trueBody":{"id":2207,"nodeType":"Block","src":"15045:37:10","statements":[{"expression":{"hexValue":"66616c7365","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15066:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2184,"id":2206,"nodeType":"Return","src":"15059:12:10"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2209,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15107:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15113:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"15107:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2211,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"15126:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15131:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"15126:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15107:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2184,"id":2214,"nodeType":"Return","src":"15100:39:10"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"14686:155:10","text":" @dev Checks if a swap can be refunded\n @param hashlock The hash of the secret\n @return bool True if the swap can be refunded"},"functionSelector":"8c8c2003","id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"canRefund","nameLocation":"14855:9:10","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"hashlock","nameLocation":"14873:8:10","nodeType":"VariableDeclaration","scope":2216,"src":"14865:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14865:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14864:18:10"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"14906:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2182,"name":"bool","nodeType":"ElementaryTypeName","src":"14906:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14905:6:10"},"scope":2310,"src":"14846:300:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2259,"nodeType":"Block","src":"15873:266:10","statements":[{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"swap","nameLocation":"15896:4:10","nodeType":"VariableDeclaration","scope":2259,"src":"15883:17:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"},"typeName":{"id":2237,"nodeType":"UserDefinedTypeName","pathNode":{"id":2236,"name":"Swap","nameLocations":["15883:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"15883:4:10"},"referencedDeclaration":1362,"src":"15883:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap"}},"visibility":"internal"}],"id":2242,"initialValue":{"baseExpression":{"id":2239,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"15903:5:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Swap_$1362_storage_$","typeString":"mapping(bytes32 => struct AtomicSwap.Swap storage ref)"}},"id":2241,"indexExpression":{"id":2240,"name":"hashlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"15909:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15903:15:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage","typeString":"struct AtomicSwap.Swap storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15883:35:10"},{"expression":{"components":[{"expression":{"id":2243,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"15949:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15954:9:10","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"15949:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2245,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"15977:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15982:9:10","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"15977:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2247,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"16005:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16010:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1355,"src":"16005:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2249,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"16029:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16034:6:10","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"16029:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2251,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"16054:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16059:8:10","memberName":"timelock","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"16054:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2253,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"16081:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16086:9:10","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":1359,"src":"16081:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2255,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"16109:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Swap_$1362_storage_ptr","typeString":"struct AtomicSwap.Swap storage pointer"}},"id":2256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16114:8:10","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":1361,"src":"16109:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15935:197:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$","typeString":"tuple(address,address,address,uint256,uint256,bool,bool)"}},"functionReturnParameters":2235,"id":2258,"nodeType":"Return","src":"15928:204:10"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"15156:474:10","text":" @dev Gets the details of a swap\n @param hashlock The hash of the secret\n @return initiator The address that initiated the swap\n @return recipient The address that will receive the tokens\n @return token The token address\n @return amount The amount of tokens\n @return timelock The expiration timestamp\n @return completed Whether the swap has been completed\n @return refunded Whether the swap has been refunded"},"functionSelector":"3da0e66e","id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"getSwap","nameLocation":"15644:7:10","nodeType":"FunctionDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"hashlock","nameLocation":"15660:8:10","nodeType":"VariableDeclaration","scope":2260,"src":"15652:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15652:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15651:18:10"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"initiator","nameLocation":"15710:9:10","nodeType":"VariableDeclaration","scope":2260,"src":"15702:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"15702:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"recipient","nameLocation":"15737:9:10","nodeType":"VariableDeclaration","scope":2260,"src":"15729:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"15729:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"token","nameLocation":"15764:5:10","nodeType":"VariableDeclaration","scope":2260,"src":"15756:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"15756:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"amount","nameLocation":"15787:6:10","nodeType":"VariableDeclaration","scope":2260,"src":"15779:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"timelock","nameLocation":"15811:8:10","nodeType":"VariableDeclaration","scope":2260,"src":"15803:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"15803:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"completed","nameLocation":"15834:9:10","nodeType":"VariableDeclaration","scope":2260,"src":"15829:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2231,"name":"bool","nodeType":"ElementaryTypeName","src":"15829:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"refunded","nameLocation":"15858:8:10","nodeType":"VariableDeclaration","scope":2260,"src":"15853:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2233,"name":"bool","nodeType":"ElementaryTypeName","src":"15853:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:180:10"},"scope":2310,"src":"15635:504:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2303,"nodeType":"Block","src":"16411:243:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"16425:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16442:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16434:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"16434:7:10","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16434:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16425:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2301,"nodeType":"Block","src":"16580:68:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"16621:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16621:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2298,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"16630:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2293,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"16601:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2292,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"16594:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16594:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16608:12:10","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":360,"src":"16594:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16594:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"ExpressionStatement","src":"16594:43:10"}]},"id":2302,"nodeType":"IfStatement","src":"16421:227:10","trueBody":{"id":2291,"nodeType":"Block","src":"16446:128:10","statements":[{"assignments":[2277,null],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"success","nameLocation":"16466:7:10","nodeType":"VariableDeclaration","scope":2291,"src":"16461:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2276,"name":"bool","nodeType":"ElementaryTypeName","src":"16461:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2285,"initialValue":{"arguments":[{"hexValue":"","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16507:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2278,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"16479:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16479:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16487:4:10","memberName":"call","nodeType":"MemberAccess","src":"16479:12:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2281,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"16499:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"16479:27:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16479:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16460:50:10"},{"expression":{"arguments":[{"id":2287,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"16532:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16541:21:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":2286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16524:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16524:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"16524:39:10"}]}}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"16149:180:10","text":" @dev Allows the owner to withdraw any stuck tokens (emergency only)\n @param token The token address to withdraw\n @param amount The amount to withdraw"},"functionSelector":"95ccea67","id":2304,"implemented":true,"kind":"function","modifiers":[{"id":2268,"kind":"modifierInvocation","modifierName":{"id":2267,"name":"onlyOwner","nameLocations":["16401:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16401:9:10"},"nodeType":"ModifierInvocation","src":"16401:9:10"}],"name":"emergencyWithdraw","nameLocation":"16343:17:10","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"token","nameLocation":"16369:5:10","nodeType":"VariableDeclaration","scope":2304,"src":"16361:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"16361:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"amount","nameLocation":"16384:6:10","nodeType":"VariableDeclaration","scope":2304,"src":"16376:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"16376:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16360:31:10"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[],"src":"16411:0:10"},"scope":2310,"src":"16334:320:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2308,"nodeType":"Block","src":"16754:2:10","statements":[]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"16664:58:10","text":" @dev Allows the contract to receive ETH"},"id":2309,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"16734:2:10"},"returnParameters":{"id":2307,"nodeType":"ParameterList","parameters":[],"src":"16754:0:10"},"scope":2310,"src":"16727:29:10","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2311,"src":"577:16181:10","usedErrors":[13,18,327,823,889,894,899,1396,1398,1400,1402,1404,1406,1408,1410,1412,1414,1416,1418,1420,1422,1424,1426],"usedEvents":[24,1323,1335,1345]}],"src":"32:16727:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220863d87b35fe8bddf79fb3b3121870f527cb1b4ce2bd866cf7ef1804094e8b28264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 RETURNDATASIZE DUP8 0xB3 PUSH0 0xE8 0xBD 0xDF PUSH26 0xFB3B3121870F527CB1B4CE2BD866CF7EF1804094E8B28264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220863d87b35fe8bddf79fb3b3121870f527cb1b4ce2bd866cf7ef1804094e8b28264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 RETURNDATASIZE DUP8 0xB3 PUSH0 0xE8 0xBD 0xDF PUSH26 0xFB3B3121870F527CB1B4CE2BD866CF7EF1804094E8B28264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"698:9376:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220acae791fa55ef8b52f115532cf60fcb946167beacca18e4f40c1e1d74cfcf77f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xAE PUSH26 0x1FA55EF8B52F115532CF60FCB946167BEACCA18E4F40C1E1D74C 0xFC 0xF7 PUSH32 0x64736F6C63430008180033000000000000000000000000000000000000000000 ","sourceMap":"344:7470:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220acae791fa55ef8b52f115532cf60fcb946167beacca18e4f40c1e1d74cfcf77f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xAE PUSH26 0x1FA55EF8B52F115532CF60FCB946167BEACCA18E4F40C1E1D74C 0xFC 0xF7 PUSH32 0x64736F6C63430008180033000000000000000000000000000000000000000000 ","sourceMap":"344:7470:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"contracts/AtomicSwap.sol":{"AtomicSwap":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"HashlockAlreadyUsed","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidNonce","type":"error"},{"inputs":[],"name":"InvalidRecipient","type":"error"},{"inputs":[],"name":"InvalidSecret","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvalidTimelock","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"SignatureAlreadyUsed","type":"error"},{"inputs":[],"name":"SignatureExpired","type":"error"},{"inputs":[],"name":"SwapAlreadyCompleted","type":"error"},{"inputs":[],"name":"SwapAlreadyRefunded","type":"error"},{"inputs":[],"name":"SwapNotFound","type":"error"},{"inputs":[],"name":"TimelockExpired","type":"error"},{"inputs":[],"name":"TimelockNotExpired","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"SwapCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timelock","type":"uint256"}],"name":"SwapInitiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SwapRefunded","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INITIATE_SWAP_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TIMELOCK","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_TIMELOCK","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"canComplete","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"canRefund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"completeSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"completeSwapAsInitiator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"getSwap","outputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"bool","name":"refunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"hashlockUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"initiateSwap","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct AtomicSwap.InitiateSwapMeta","name":"metaData","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"initiateSwapMeta","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"initiateTokenSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"name":"refundSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"swaps","outputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"uint256","name":"timelock","type":"uint256"},{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"bool","name":"refunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"usedMetaSignatures","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1287":{"entryPoint":null,"id":1287,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_831":{"entryPoint":null,"id":831,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":376,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":626,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":682,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":709,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":726,"id":null,"parameterSlots":6,"returnSlots":1},"cleanup_t_address":{"entryPoint":606,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":574,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":699,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1674:11","nodeType":"YulBlock","src":"0:1674:11","statements":[{"body":{"nativeSrc":"52:81:11","nodeType":"YulBlock","src":"52:81:11","statements":[{"nativeSrc":"62:65:11","nodeType":"YulAssignment","src":"62:65:11","value":{"arguments":[{"name":"value","nativeSrc":"77:5:11","nodeType":"YulIdentifier","src":"77:5:11"},{"kind":"number","nativeSrc":"84:42:11","nodeType":"YulLiteral","src":"84:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:11","nodeType":"YulIdentifier","src":"73:3:11"},"nativeSrc":"73:54:11","nodeType":"YulFunctionCall","src":"73:54:11"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:11","nodeType":"YulIdentifier","src":"62:7:11"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:11","nodeType":"YulTypedName","src":"34:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:11","nodeType":"YulTypedName","src":"44:7:11","type":""}],"src":"7:126:11"},{"body":{"nativeSrc":"184:51:11","nodeType":"YulBlock","src":"184:51:11","statements":[{"nativeSrc":"194:35:11","nodeType":"YulAssignment","src":"194:35:11","value":{"arguments":[{"name":"value","nativeSrc":"223:5:11","nodeType":"YulIdentifier","src":"223:5:11"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:11","nodeType":"YulIdentifier","src":"205:17:11"},"nativeSrc":"205:24:11","nodeType":"YulFunctionCall","src":"205:24:11"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:11","nodeType":"YulIdentifier","src":"194:7:11"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:11","nodeType":"YulTypedName","src":"166:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:11","nodeType":"YulTypedName","src":"176:7:11","type":""}],"src":"139:96:11"},{"body":{"nativeSrc":"306:53:11","nodeType":"YulBlock","src":"306:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:11","nodeType":"YulIdentifier","src":"323:3:11"},{"arguments":[{"name":"value","nativeSrc":"346:5:11","nodeType":"YulIdentifier","src":"346:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:11","nodeType":"YulIdentifier","src":"328:17:11"},"nativeSrc":"328:24:11","nodeType":"YulFunctionCall","src":"328:24:11"}],"functionName":{"name":"mstore","nativeSrc":"316:6:11","nodeType":"YulIdentifier","src":"316:6:11"},"nativeSrc":"316:37:11","nodeType":"YulFunctionCall","src":"316:37:11"},"nativeSrc":"316:37:11","nodeType":"YulExpressionStatement","src":"316:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:11","nodeType":"YulTypedName","src":"294:5:11","type":""},{"name":"pos","nativeSrc":"301:3:11","nodeType":"YulTypedName","src":"301:3:11","type":""}],"src":"241:118:11"},{"body":{"nativeSrc":"463:124:11","nodeType":"YulBlock","src":"463:124:11","statements":[{"nativeSrc":"473:26:11","nodeType":"YulAssignment","src":"473:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:11","nodeType":"YulIdentifier","src":"485:9:11"},{"kind":"number","nativeSrc":"496:2:11","nodeType":"YulLiteral","src":"496:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:11","nodeType":"YulIdentifier","src":"481:3:11"},"nativeSrc":"481:18:11","nodeType":"YulFunctionCall","src":"481:18:11"},"variableNames":[{"name":"tail","nativeSrc":"473:4:11","nodeType":"YulIdentifier","src":"473:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:11","nodeType":"YulIdentifier","src":"553:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:11","nodeType":"YulIdentifier","src":"566:9:11"},{"kind":"number","nativeSrc":"577:1:11","nodeType":"YulLiteral","src":"577:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:11","nodeType":"YulIdentifier","src":"562:3:11"},"nativeSrc":"562:17:11","nodeType":"YulFunctionCall","src":"562:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:11","nodeType":"YulIdentifier","src":"509:43:11"},"nativeSrc":"509:71:11","nodeType":"YulFunctionCall","src":"509:71:11"},"nativeSrc":"509:71:11","nodeType":"YulExpressionStatement","src":"509:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:11","nodeType":"YulTypedName","src":"435:9:11","type":""},{"name":"value0","nativeSrc":"447:6:11","nodeType":"YulTypedName","src":"447:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:11","nodeType":"YulTypedName","src":"458:4:11","type":""}],"src":"365:222:11"},{"body":{"nativeSrc":"638:32:11","nodeType":"YulBlock","src":"638:32:11","statements":[{"nativeSrc":"648:16:11","nodeType":"YulAssignment","src":"648:16:11","value":{"name":"value","nativeSrc":"659:5:11","nodeType":"YulIdentifier","src":"659:5:11"},"variableNames":[{"name":"cleaned","nativeSrc":"648:7:11","nodeType":"YulIdentifier","src":"648:7:11"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"593:77:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"620:5:11","nodeType":"YulTypedName","src":"620:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"630:7:11","nodeType":"YulTypedName","src":"630:7:11","type":""}],"src":"593:77:11"},{"body":{"nativeSrc":"741:53:11","nodeType":"YulBlock","src":"741:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"758:3:11","nodeType":"YulIdentifier","src":"758:3:11"},{"arguments":[{"name":"value","nativeSrc":"781:5:11","nodeType":"YulIdentifier","src":"781:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"763:17:11","nodeType":"YulIdentifier","src":"763:17:11"},"nativeSrc":"763:24:11","nodeType":"YulFunctionCall","src":"763:24:11"}],"functionName":{"name":"mstore","nativeSrc":"751:6:11","nodeType":"YulIdentifier","src":"751:6:11"},"nativeSrc":"751:37:11","nodeType":"YulFunctionCall","src":"751:37:11"},"nativeSrc":"751:37:11","nodeType":"YulExpressionStatement","src":"751:37:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"676:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"729:5:11","nodeType":"YulTypedName","src":"729:5:11","type":""},{"name":"pos","nativeSrc":"736:3:11","nodeType":"YulTypedName","src":"736:3:11","type":""}],"src":"676:118:11"},{"body":{"nativeSrc":"845:32:11","nodeType":"YulBlock","src":"845:32:11","statements":[{"nativeSrc":"855:16:11","nodeType":"YulAssignment","src":"855:16:11","value":{"name":"value","nativeSrc":"866:5:11","nodeType":"YulIdentifier","src":"866:5:11"},"variableNames":[{"name":"cleaned","nativeSrc":"855:7:11","nodeType":"YulIdentifier","src":"855:7:11"}]}]},"name":"cleanup_t_uint256","nativeSrc":"800:77:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"827:5:11","nodeType":"YulTypedName","src":"827:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"837:7:11","nodeType":"YulTypedName","src":"837:7:11","type":""}],"src":"800:77:11"},{"body":{"nativeSrc":"948:53:11","nodeType":"YulBlock","src":"948:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"965:3:11","nodeType":"YulIdentifier","src":"965:3:11"},{"arguments":[{"name":"value","nativeSrc":"988:5:11","nodeType":"YulIdentifier","src":"988:5:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"970:17:11","nodeType":"YulIdentifier","src":"970:17:11"},"nativeSrc":"970:24:11","nodeType":"YulFunctionCall","src":"970:24:11"}],"functionName":{"name":"mstore","nativeSrc":"958:6:11","nodeType":"YulIdentifier","src":"958:6:11"},"nativeSrc":"958:37:11","nodeType":"YulFunctionCall","src":"958:37:11"},"nativeSrc":"958:37:11","nodeType":"YulExpressionStatement","src":"958:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"883:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"936:5:11","nodeType":"YulTypedName","src":"936:5:11","type":""},{"name":"pos","nativeSrc":"943:3:11","nodeType":"YulTypedName","src":"943:3:11","type":""}],"src":"883:118:11"},{"body":{"nativeSrc":"1217:454:11","nodeType":"YulBlock","src":"1217:454:11","statements":[{"nativeSrc":"1227:27:11","nodeType":"YulAssignment","src":"1227:27:11","value":{"arguments":[{"name":"headStart","nativeSrc":"1239:9:11","nodeType":"YulIdentifier","src":"1239:9:11"},{"kind":"number","nativeSrc":"1250:3:11","nodeType":"YulLiteral","src":"1250:3:11","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"1235:3:11","nodeType":"YulIdentifier","src":"1235:3:11"},"nativeSrc":"1235:19:11","nodeType":"YulFunctionCall","src":"1235:19:11"},"variableNames":[{"name":"tail","nativeSrc":"1227:4:11","nodeType":"YulIdentifier","src":"1227:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1308:6:11","nodeType":"YulIdentifier","src":"1308:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"1321:9:11","nodeType":"YulIdentifier","src":"1321:9:11"},{"kind":"number","nativeSrc":"1332:1:11","nodeType":"YulLiteral","src":"1332:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1317:3:11","nodeType":"YulIdentifier","src":"1317:3:11"},"nativeSrc":"1317:17:11","nodeType":"YulFunctionCall","src":"1317:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"1264:43:11","nodeType":"YulIdentifier","src":"1264:43:11"},"nativeSrc":"1264:71:11","nodeType":"YulFunctionCall","src":"1264:71:11"},"nativeSrc":"1264:71:11","nodeType":"YulExpressionStatement","src":"1264:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"1389:6:11","nodeType":"YulIdentifier","src":"1389:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"1402:9:11","nodeType":"YulIdentifier","src":"1402:9:11"},{"kind":"number","nativeSrc":"1413:2:11","nodeType":"YulLiteral","src":"1413:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1398:3:11","nodeType":"YulIdentifier","src":"1398:3:11"},"nativeSrc":"1398:18:11","nodeType":"YulFunctionCall","src":"1398:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"1345:43:11","nodeType":"YulIdentifier","src":"1345:43:11"},"nativeSrc":"1345:72:11","nodeType":"YulFunctionCall","src":"1345:72:11"},"nativeSrc":"1345:72:11","nodeType":"YulExpressionStatement","src":"1345:72:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"1471:6:11","nodeType":"YulIdentifier","src":"1471:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"1484:9:11","nodeType":"YulIdentifier","src":"1484:9:11"},{"kind":"number","nativeSrc":"1495:2:11","nodeType":"YulLiteral","src":"1495:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1480:3:11","nodeType":"YulIdentifier","src":"1480:3:11"},"nativeSrc":"1480:18:11","nodeType":"YulFunctionCall","src":"1480:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"1427:43:11","nodeType":"YulIdentifier","src":"1427:43:11"},"nativeSrc":"1427:72:11","nodeType":"YulFunctionCall","src":"1427:72:11"},"nativeSrc":"1427:72:11","nodeType":"YulExpressionStatement","src":"1427:72:11"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"1553:6:11","nodeType":"YulIdentifier","src":"1553:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"1566:9:11","nodeType":"YulIdentifier","src":"1566:9:11"},{"kind":"number","nativeSrc":"1577:2:11","nodeType":"YulLiteral","src":"1577:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1562:3:11","nodeType":"YulIdentifier","src":"1562:3:11"},"nativeSrc":"1562:18:11","nodeType":"YulFunctionCall","src":"1562:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1509:43:11","nodeType":"YulIdentifier","src":"1509:43:11"},"nativeSrc":"1509:72:11","nodeType":"YulFunctionCall","src":"1509:72:11"},"nativeSrc":"1509:72:11","nodeType":"YulExpressionStatement","src":"1509:72:11"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"1635:6:11","nodeType":"YulIdentifier","src":"1635:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"1648:9:11","nodeType":"YulIdentifier","src":"1648:9:11"},{"kind":"number","nativeSrc":"1659:3:11","nodeType":"YulLiteral","src":"1659:3:11","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1644:3:11","nodeType":"YulIdentifier","src":"1644:3:11"},"nativeSrc":"1644:19:11","nodeType":"YulFunctionCall","src":"1644:19:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1591:43:11","nodeType":"YulIdentifier","src":"1591:43:11"},"nativeSrc":"1591:73:11","nodeType":"YulFunctionCall","src":"1591:73:11"},"nativeSrc":"1591:73:11","nodeType":"YulExpressionStatement","src":"1591:73:11"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"1007:664:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1157:9:11","nodeType":"YulTypedName","src":"1157:9:11","type":""},{"name":"value4","nativeSrc":"1169:6:11","nodeType":"YulTypedName","src":"1169:6:11","type":""},{"name":"value3","nativeSrc":"1177:6:11","nodeType":"YulTypedName","src":"1177:6:11","type":""},{"name":"value2","nativeSrc":"1185:6:11","nodeType":"YulTypedName","src":"1185:6:11","type":""},{"name":"value1","nativeSrc":"1193:6:11","nodeType":"YulTypedName","src":"1193:6:11","type":""},{"name":"value0","nativeSrc":"1201:6:11","nodeType":"YulTypedName","src":"1201:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1212:4:11","nodeType":"YulTypedName","src":"1212:4:11","type":""}],"src":"1007:664:11"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000905760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000087919062000283565b60405180910390fd5b620000a1816200017860201b60201c565b507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f41746f6d69635377617000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525080519060200120463060405160200162000155959493929190620002d6565b604051602081830303815290604052805190602001206080818152505062000333565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200026b826200023e565b9050919050565b6200027d816200025e565b82525050565b60006020820190506200029a600083018462000272565b92915050565b6000819050919050565b620002b581620002a0565b82525050565b6000819050919050565b620002d081620002bb565b82525050565b600060a082019050620002ed6000830188620002aa565b620002fc6020830187620002aa565b6200030b6040830186620002aa565b6200031a6060830185620002c5565b62000329608083018462000272565b9695505050505050565b6080516131586200035660003960008181610510015261131c01526131586000f3fe60806040526004361061012e5760003560e01c806394f1825b116100ab578063eb84e7f21161006f578063eb84e7f2146103d3578063f2fde38b14610417578063f4611fae14610440578063fb0c75491461047d578063fe2510ee146104a8578063ffdfa6de146104d157610135565b806394f1825b146102fd57806395ccea6714610328578063b401eb5614610351578063c4ddaaa41461036d578063dd781188146103aa57610135565b806378dc3356116100f257806378dc3356146102135780637ecebe001461023c5780638c8c2003146102795780638da5cb5b146102b6578063902d7236146102e157610135565b80633644e5151461013a5780633da0e66e1461016557806342655a4c146101a857806347899a0b146101d3578063715018a6146101fc57610135565b3661013557005b600080fd5b34801561014657600080fd5b5061014f61050e565b60405161015c91906127b9565b60405180910390f35b34801561017157600080fd5b5061018c6004803603810190610187919061280a565b610532565b60405161019f97969594939291906128ac565b60405180910390f35b3480156101b457600080fd5b506101bd61060a565b6040516101ca91906127b9565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f5919061291b565b61062e565b005b34801561020857600080fd5b50610211610b81565b005b34801561021f57600080fd5b5061023a6004803603810190610235919061291b565b610b95565b005b34801561024857600080fd5b50610263600480360381019061025e9190612987565b610fd6565b60405161027091906129b4565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b919061280a565b610fee565b6040516102ad91906129cf565b60405180910390f35b3480156102c257600080fd5b506102cb6110ac565b6040516102d891906129ea565b60405180910390f35b6102fb60048036038101906102f69190612a31565b6110d6565b005b34801561030957600080fd5b506103126110fa565b60405161031f91906129b4565b60405180910390f35b34801561033457600080fd5b5061034f600480360381019061034a9190612a98565b611101565b005b61036b60048036038101906103669190612b62565b61122d565b005b34801561037957600080fd5b50610394600480360381019061038f919061280a565b61155e565b6040516103a191906129cf565b60405180910390f35b3480156103b657600080fd5b506103d160048036038101906103cc9190612bc4565b61157e565b005b3480156103df57600080fd5b506103fa60048036038101906103f5919061280a565b6115cf565b60405161040e989796959493929190612c3f565b60405180910390f35b34801561042357600080fd5b5061043e60048036038101906104399190612987565b611691565b005b34801561044c57600080fd5b506104676004803603810190610462919061280a565b611717565b60405161047491906129cf565b60405180910390f35b34801561048957600080fd5b506104926117d4565b60405161049f91906129b4565b60405180910390f35b3480156104b457600080fd5b506104cf60048036038101906104ca919061280a565b6117da565b005b3480156104dd57600080fd5b506104f860048036038101906104f3919061280a565b611c43565b60405161050591906129cf565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600080600080600080600460008a815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836005015484600101548560060160009054906101000a900460ff168660060160019054906101000a900460ff16975097509750975097509750975050919395979092949650565b7fdae6e6c77828941043676793d78986b77a85f6a115edd49e62d3e4e0911ef44181565b610636611c63565b6000600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106d7576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff1615610720576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615610769576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015442106107a6576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82826040516020016107b89190612cde565b6040516020818303038152906040528051906020012014610805576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461088e576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610917576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a5d5760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600501546040516109da90612d2a565b60006040518083038185875af1925050503d8060008114610a17576040519150601f19603f3d011682016040523d82523d6000602084013e610a1c565b606091505b5050905080610a57576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610ad5565b610ad48160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610b6c93929190612d3f565b60405180910390a350610b7d611d28565b5050565b610b89611d32565b610b936000611db9565b565b610b9d611c63565b6000600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c3e576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff1615610c87576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615610cd0576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600101544210610d0d576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282604051602001610d1f9190612cde565b6040516020818303038152906040528051906020012014610d6c576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610eb25760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260050154604051610e2f90612d2a565b60006040518083038185875af1925050503d8060008114610e6c576040519150601f19603f3d011682016040523d82523d6000602084013e610e71565b606091505b5050905080610eac576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610f2a565b610f298160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610fc193929190612d3f565b60405180910390a350610fd2611d28565b5050565b60026020528060005260406000206000915090505481565b600080600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061107357508060060160009054906101000a900460ff165b8061108c57508060060160019054906101000a900460ff165b1561109b5760009150506110a7565b80600101544210159150505b919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110de611c63565b6110ec848484600085611e7f565b6110f4611d28565b50505050565b62093a8081565b611109611d32565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f65760006111476110ac565b73ffffffffffffffffffffffffffffffffffffffff168260405161116a90612d2a565b60006040518083038185875af1925050503d80600081146111a7576040519150601f19603f3d011682016040523d82523d6000602084013e6111ac565b606091505b50509050806111f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e790612dd3565b60405180910390fd5b50611229565b6112286112016110ac565b828473ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b5050565b611235611c63565b8260e00135421115611273576040517f0819bdcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007fdae6e6c77828941043676793d78986b77a85f6a115edd49e62d3e4e0911ef4418460000160208101906112a99190612987565b856020013586604001358760600160208101906112c69190612987565b8860800160208101906112d99190612987565b8960a001358a60c001358b60e0013560405160200161130099989796959493929190612df3565b60405160208183030381529060405280519060200120905060007f00000000000000000000000000000000000000000000000000000000000000008260405160200161134d929190612ed7565b6040516020818303038152906040528051906020012090506003600082815260200190815260200160002060009054906101000a900460ff16156113bd576040517f900bb2c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061141685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508361239490919063ffffffff16565b905085600001602081019061142b9190612987565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461148f576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600260008760000160208101906114d29190612987565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061151d90612f3d565b919050555061154e866020013587604001358860600160208101906115429190612987565b60008a60a00135611e7f565b505050611559611d28565b505050565b60036020528060005260406000206000915054906101000a900460ff1681565b611586611c63565b6115938585858585611e7f565b6115c03330838573ffffffffffffffffffffffffffffffffffffffff166123c0909392919063ffffffff16565b6115c8611d28565b5050505050565b60046020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b611699611d32565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361170b5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161170291906129ea565b60405180910390fd5b61171481611db9565b50565b600080600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061179c57508060060160009054906101000a900460ff165b806117b557508060060160019054906101000a900460ff165b156117c45760009150506117cf565b806001015442109150505b919050565b610e1081565b6117e2611c63565b6000600460008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611883576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff16156118cc576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615611915576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010154421015611953576040517f621e25c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119dc576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160016101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b225760008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260050154604051611a9f90612d2a565b60006040518083038185875af1925050503d8060008114611adc576040519150601f19603f3d011682016040523d82523d6000602084013e611ae1565b606091505b5050905080611b1c576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50611b9a565b611b998160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827fa19ac6ff80a8c71a18b3fd648fa480fa092eceb40ca2af1fadc2a1cc6e1baf7b8360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460050154604051611c2f929190612f85565b60405180910390a350611c40611d28565b50565b60056020528060005260406000206000915054906101000a900460ff1681565b600260005403611c9f576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b611d23838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611cdc929190612f85565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612442565b505050565b6001600081905550565b611d3a6124e4565b73ffffffffffffffffffffffffffffffffffffffff16611d586110ac565b73ffffffffffffffffffffffffffffffffffffffff1614611db757611d7b6124e4565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611dae91906129ea565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6005600086815260200190815260200160002060009054906101000a900460ff1615611ed7576040517fe9204a0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1042611ee59190612fae565b841080611eff575062093a8042611efc9190612fae565b84115b15611f36576040517ff8d10e8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f9c576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008103611fd6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361204457803414612043576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461212c57808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016120b291906129ea565b602060405180830381865afa1580156120cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f39190612ff7565b101561212b576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6040518061010001604052808681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016000151581526020016000151581525060046000878152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff02191690831515021790555090505060016005600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16867ff7fed894f2fc26a47c345a04b644fb954bf11c27c2eec80f3f7ffb2cb07ea74285858960405161238593929190613024565b60405180910390a45050505050565b6000806000806123a486866124ec565b9250925092506123b48282612548565b82935050505092915050565b61243c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016123f59392919061305b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612442565b50505050565b600080602060008451602086016000885af180612465576040513d6000823e3d81fd5b3d92506000519150506000821461248057600181141561249c565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b156124de57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016124d591906129ea565b60405180910390fd5b50505050565b600033905090565b600080600060418451036125315760008060006020870151925060408701519150606087015160001a9050612523888285856126ac565b955095509550505050612541565b60006002855160001b9250925092505b9250925092565b6000600381111561255c5761255b613092565b5b82600381111561256f5761256e613092565b5b03156126a8576001600381111561258957612588613092565b5b82600381111561259c5761259b613092565b5b036125d3576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156125e7576125e6613092565b5b8260038111156125fa576125f9613092565b5b0361263f578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161263691906129b4565b60405180910390fd5b60038081111561265257612651613092565b5b82600381111561266557612664613092565b5b036126a757806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161269e91906127b9565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156126ec576000600385925092509250612796565b60006001888888886040516000815260200160405260405161271194939291906130dd565b6020604051602081039080840390855afa158015612733573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361278757600060016000801b93509350935050612796565b8060008060001b935093509350505b9450945094915050565b6000819050919050565b6127b3816127a0565b82525050565b60006020820190506127ce60008301846127aa565b92915050565b600080fd5b600080fd5b6127e7816127a0565b81146127f257600080fd5b50565b600081359050612804816127de565b92915050565b6000602082840312156128205761281f6127d4565b5b600061282e848285016127f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061286282612837565b9050919050565b61287281612857565b82525050565b6000819050919050565b61288b81612878565b82525050565b60008115159050919050565b6128a681612891565b82525050565b600060e0820190506128c1600083018a612869565b6128ce6020830189612869565b6128db6040830188612869565b6128e86060830187612882565b6128f56080830186612882565b61290260a083018561289d565b61290f60c083018461289d565b98975050505050505050565b60008060408385031215612932576129316127d4565b5b6000612940858286016127f5565b9250506020612951858286016127f5565b9150509250929050565b61296481612857565b811461296f57600080fd5b50565b6000813590506129818161295b565b92915050565b60006020828403121561299d5761299c6127d4565b5b60006129ab84828501612972565b91505092915050565b60006020820190506129c96000830184612882565b92915050565b60006020820190506129e4600083018461289d565b92915050565b60006020820190506129ff6000830184612869565b92915050565b612a0e81612878565b8114612a1957600080fd5b50565b600081359050612a2b81612a05565b92915050565b60008060008060808587031215612a4b57612a4a6127d4565b5b6000612a59878288016127f5565b9450506020612a6a87828801612a1c565b9350506040612a7b87828801612972565b9250506060612a8c87828801612a1c565b91505092959194509250565b60008060408385031215612aaf57612aae6127d4565b5b6000612abd85828601612972565b9250506020612ace85828601612a1c565b9150509250929050565b600080fd5b60006101008284031215612af457612af3612ad8565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612b2257612b21612afd565b5b8235905067ffffffffffffffff811115612b3f57612b3e612b02565b5b602083019150836001820283011115612b5b57612b5a612b07565b5b9250929050565b60008060006101208486031215612b7c57612b7b6127d4565b5b6000612b8a86828701612add565b93505061010084013567ffffffffffffffff811115612bac57612bab6127d9565b5b612bb886828701612b0c565b92509250509250925092565b600080600080600060a08688031215612be057612bdf6127d4565b5b6000612bee888289016127f5565b9550506020612bff88828901612a1c565b9450506040612c1088828901612972565b9350506060612c2188828901612972565b9250506080612c3288828901612a1c565b9150509295509295909350565b600061010082019050612c55600083018b6127aa565b612c62602083018a612882565b612c6f6040830189612869565b612c7c6060830188612869565b612c896080830187612869565b612c9660a0830186612882565b612ca360c083018561289d565b612cb060e083018461289d565b9998505050505050505050565b6000819050919050565b612cd8612cd3826127a0565b612cbd565b82525050565b6000612cea8284612cc7565b60208201915081905092915050565b600081905092915050565b50565b6000612d14600083612cf9565b9150612d1f82612d04565b600082019050919050565b6000612d3582612d07565b9150819050919050565b6000606082019050612d546000830186612869565b612d616020830185612882565b612d6e60408301846127aa565b949350505050565b600082825260208201905092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000612dbd601383612d76565b9150612dc882612d87565b602082019050919050565b60006020820190508181036000830152612dec81612db0565b9050919050565b600061012082019050612e09600083018c6127aa565b612e16602083018b612869565b612e23604083018a6127aa565b612e306060830189612882565b612e3d6080830188612869565b612e4a60a0830187612869565b612e5760c0830186612882565b612e6460e0830185612882565b612e72610100830184612882565b9a9950505050505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ec1600283612e80565b9150612ecc82612e8b565b600282019050919050565b6000612ee282612eb4565b9150612eee8285612cc7565b602082019150612efe8284612cc7565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f4882612878565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f7a57612f79612f0e565b5b600182019050919050565b6000604082019050612f9a6000830185612869565b612fa76020830184612882565b9392505050565b6000612fb982612878565b9150612fc483612878565b9250828201905080821115612fdc57612fdb612f0e565b5b92915050565b600081519050612ff181612a05565b92915050565b60006020828403121561300d5761300c6127d4565b5b600061301b84828501612fe2565b91505092915050565b60006060820190506130396000830186612869565b6130466020830185612882565b6130536040830184612882565b949350505050565b60006060820190506130706000830186612869565b61307d6020830185612869565b61308a6040830184612882565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b6130d7816130c1565b82525050565b60006080820190506130f260008301876127aa565b6130ff60208301866130ce565b61310c60408301856127aa565b61311960608301846127aa565b9594505050505056fea2646970667358221220fd5dcda3a991b4be37a2b0622f8c9fd1fde4238f88345da5f8867c7d250d964c64736f6c63430008180033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x90 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA1 DUP2 PUSH3 0x178 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41746F6D69635377617000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x155 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH3 0x333 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP3 PUSH3 0x23E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x27D DUP2 PUSH3 0x25E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x29A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x272 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B5 DUP2 PUSH3 0x2A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D0 DUP2 PUSH3 0x2BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x2ED PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x2FC PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x30B PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x31A PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x2C5 JUMP JUMPDEST PUSH3 0x329 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x272 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3158 PUSH3 0x356 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x510 ADD MSTORE PUSH2 0x131C ADD MSTORE PUSH2 0x3158 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94F1825B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xEB84E7F2 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF4611FAE EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xFB0C7549 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xFE2510EE EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xFFDFA6DE EQ PUSH2 0x4D1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x94F1825B EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xB401EB56 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xC4DDAAA4 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xDD781188 EQ PUSH2 0x3AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x78DC3356 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x78DC3356 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8C8C2003 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x902D7236 EQ PUSH2 0x2E1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x3DA0E66E EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x42655A4C EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x47899A0B EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FC JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x291B JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0xB81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x291B JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH2 0x1101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2B62 JUMP JUMPDEST PUSH2 0x122D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH2 0x1691 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x17DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH32 0xDAE6E6C77828941043676793D78986B77A85F6A115EDD49E62D3E4E0911EF441 DUP2 JUMP JUMPDEST PUSH2 0x636 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x9DA SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xAD4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xB6C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xB7D PUSH2 0x1D28 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB89 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0xB93 PUSH1 0x0 PUSH2 0x1DB9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB9D PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xE2F SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xFC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xFD2 PUSH2 0x1D28 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1073 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x108C JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x109B JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x10EC DUP5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1E7F JUMP JUMPDEST PUSH2 0x10F4 PUSH2 0x1D28 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x1109 PUSH2 0x1D32 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F6 JUMPI PUSH1 0x0 PUSH2 0x1147 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x116A SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E7 SWAP1 PUSH2 0x2DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x1201 PUSH2 0x10AC JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1235 PUSH2 0x1C63 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x819BDCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xDAE6E6C77828941043676793D78986B77A85F6A115EDD49E62D3E4E0911EF441 DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD CALLDATALOAD DUP7 PUSH1 0x40 ADD CALLDATALOAD DUP8 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST DUP9 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST DUP10 PUSH1 0xA0 ADD CALLDATALOAD DUP11 PUSH1 0xC0 ADD CALLDATALOAD DUP12 PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1300 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x134D SWAP3 SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x900BB2C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH2 0x2394 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x151D SWAP1 PUSH2 0x2F3D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x154E DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP8 PUSH1 0x40 ADD CALLDATALOAD DUP9 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1542 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x0 DUP11 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1E7F JUMP JUMPDEST POP POP POP PUSH2 0x1559 PUSH2 0x1D28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1586 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1593 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1E7F JUMP JUMPDEST PUSH2 0x15C0 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23C0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x1D28 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x1699 PUSH2 0x1D32 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1702 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1714 DUP2 PUSH2 0x1DB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x179C JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x17B5 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x17C4 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x17CF JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x17E2 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x18CC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1915 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x621E25C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1A9F SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1ADC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x1B99 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xA19AC6FF80A8C71A18B3FD648FA480FA092ECEB40CA2AF1FADC2A1CC6E1BAF7B DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1C2F SWAP3 SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1C40 PUSH2 0x1D28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1C9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D23 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1CDC SWAP3 SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2442 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D3A PUSH2 0x24E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D58 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DB7 JUMPI PUSH2 0x1D7B PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAE SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1ED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE9204A0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 TIMESTAMP PUSH2 0x1EE5 SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST DUP5 LT DUP1 PUSH2 0x1EFF JUMPI POP PUSH3 0x93A80 TIMESTAMP PUSH2 0x1EFC SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST DUP5 GT JUMPDEST ISZERO PUSH2 0x1F36 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8D10E8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2044 JUMPI DUP1 CALLVALUE EQ PUSH2 0x2043 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x212C JUMPI DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B2 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20F3 SWAP2 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST LT ISZERO PUSH2 0x212B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0xF7FED894F2FC26A47C345A04B644FB954BF11C27C2EEC80F3F7FFB2CB07EA742 DUP6 DUP6 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2385 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x23A4 DUP7 DUP7 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x23B4 DUP3 DUP3 PUSH2 0x2548 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x243C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x23F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2442 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x2465 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x2480 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x249C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x24DE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D5 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2531 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2523 DUP9 DUP3 DUP6 DUP6 PUSH2 0x26AC JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255C JUMPI PUSH2 0x255B PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x256F JUMPI PUSH2 0x256E PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x26A8 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x259C JUMPI PUSH2 0x259B PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25E7 JUMPI PUSH2 0x25E6 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25FA JUMPI PUSH2 0x25F9 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x263F JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2636 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2652 JUMPI PUSH2 0x2651 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2665 JUMPI PUSH2 0x2664 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x26A7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269E SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x26EC JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2711 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2733 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2787 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2796 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B3 DUP2 PUSH2 0x27A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27E7 DUP2 PUSH2 0x27A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x27F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2804 DUP2 PUSH2 0x27DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2820 JUMPI PUSH2 0x281F PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x282E DUP5 DUP3 DUP6 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2862 DUP3 PUSH2 0x2837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2872 DUP2 PUSH2 0x2857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288B DUP2 PUSH2 0x2878 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A6 DUP2 PUSH2 0x2891 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x28C1 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x28CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x28DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x28E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x28F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2902 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x289D JUMP JUMPDEST PUSH2 0x290F PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x289D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2932 JUMPI PUSH2 0x2931 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2940 DUP6 DUP3 DUP7 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2951 DUP6 DUP3 DUP7 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2964 DUP2 PUSH2 0x2857 JUMP JUMPDEST DUP2 EQ PUSH2 0x296F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2981 DUP2 PUSH2 0x295B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x299D JUMPI PUSH2 0x299C PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29AB DUP5 DUP3 DUP6 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A0E DUP2 PUSH2 0x2878 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A2B DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A4B JUMPI PUSH2 0x2A4A PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A59 DUP8 DUP3 DUP9 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A6A DUP8 DUP3 DUP9 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A7B DUP8 DUP3 DUP9 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2A8C DUP8 DUP3 DUP9 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AAF JUMPI PUSH2 0x2AAE PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2ABD DUP6 DUP3 DUP7 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2ACE DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF4 JUMPI PUSH2 0x2AF3 PUSH2 0x2AD8 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B22 JUMPI PUSH2 0x2B21 PUSH2 0x2AFD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3F JUMPI PUSH2 0x2B3E PUSH2 0x2B02 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2B07 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B7C JUMPI PUSH2 0x2B7B PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B8A DUP7 DUP3 DUP8 ADD PUSH2 0x2ADD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BAC JUMPI PUSH2 0x2BAB PUSH2 0x27D9 JUMP JUMPDEST JUMPDEST PUSH2 0x2BB8 DUP7 DUP3 DUP8 ADD PUSH2 0x2B0C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BE0 JUMPI PUSH2 0x2BDF PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BEE DUP9 DUP3 DUP10 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2BFF DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2C10 DUP9 DUP3 DUP10 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2C21 DUP9 DUP3 DUP10 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2C32 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2C55 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x2C62 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2C6F PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2C7C PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2C89 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2C96 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2CA3 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x289D JUMP JUMPDEST PUSH2 0x2CB0 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x289D JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD8 PUSH2 0x2CD3 DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH2 0x2CBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CEA DUP3 DUP5 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D14 PUSH1 0x0 DUP4 PUSH2 0x2CF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1F DUP3 PUSH2 0x2D04 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D35 DUP3 PUSH2 0x2D07 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D54 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2D61 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2D6E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBD PUSH1 0x13 DUP4 PUSH2 0x2D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC8 DUP3 PUSH2 0x2D87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DEC DUP2 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x2E09 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x2E16 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2E23 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x2E30 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2E3D PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2E4A PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2E57 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2E64 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2E72 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC1 PUSH1 0x2 DUP4 PUSH2 0x2E80 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ECC DUP3 PUSH2 0x2E8B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE2 DUP3 PUSH2 0x2EB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEE DUP3 DUP6 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2EFE DUP3 DUP5 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F48 DUP3 PUSH2 0x2878 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2F7A JUMPI PUSH2 0x2F79 PUSH2 0x2F0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2FA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB9 DUP3 PUSH2 0x2878 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP4 PUSH2 0x2878 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FDC JUMPI PUSH2 0x2FDB PUSH2 0x2F0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FF1 DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x300D JUMPI PUSH2 0x300C PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x301B DUP5 DUP3 DUP6 ADD PUSH2 0x2FE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3039 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x3046 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x3053 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3070 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x307D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x308A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D7 DUP2 PUSH2 0x30C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x30F2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x30FF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30CE JUMP JUMPDEST PUSH2 0x310C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x3119 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TSTORE 0xCD LOG3 0xA9 SWAP2 0xB4 0xBE CALLDATACOPY LOG2 0xB0 PUSH3 0x2F8C9F 0xD1 REVERT 0xE4 0x23 DUP16 DUP9 CALLVALUE TSTORE 0xA5 0xF8 DUP7 PUSH29 0x7D250D964C64736F6C6343000818003300000000000000000000000000 ","sourceMap":"577:16181:10:-:0;;;631:389;;;;;;;;;;653:10;1857:1:7;2061:7;:21;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;745:95:10::1;868:19;;;;;;;;;;;;;;;;::::0;858:30:::1;;;;;;916:10;;;;;;;;;;;;;;;;::::0;906:21:::1;;;;;;945:13;984:4;717:286;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;694:319;;;;;;675:338;;;;::::0;::::1;577:16181:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:77::-;837:7;866:5;855:16;;800:77;;;:::o;883:118::-;970:24;988:5;970:24;:::i;:::-;965:3;958:37;883:118;;:::o;1007:664::-;1212:4;1250:3;1239:9;1235:19;1227:27;;1264:71;1332:1;1321:9;1317:17;1308:6;1264:71;:::i;:::-;1345:72;1413:2;1402:9;1398:18;1389:6;1345:72;:::i;:::-;1427;1495:2;1484:9;1480:18;1471:6;1427:72;:::i;:::-;1509;1577:2;1566:9;1562:18;1553:6;1509:72;:::i;:::-;1591:73;1659:3;1648:9;1644:19;1635:6;1591:73;:::i;:::-;1007:664;;;;;;;;:::o;577:16181:10:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1289":{"entryPoint":1294,"id":1289,"parameterSlots":0,"returnSlots":0},"@INITIATE_SWAP_TYPEHASH_1294":{"entryPoint":1546,"id":1294,"parameterSlots":0,"returnSlots":0},"@MAX_TIMELOCK_1394":{"entryPoint":4346,"id":1394,"parameterSlots":0,"returnSlots":0},"@MIN_TIMELOCK_1391":{"entryPoint":6100,"id":1391,"parameterSlots":0,"returnSlots":0},"@_2309":{"entryPoint":null,"id":2309,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_737":{"entryPoint":9282,"id":737,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":7474,"id":84,"parameterSlots":0,"returnSlots":0},"@_initiateSwap_1755":{"entryPoint":7807,"id":1755,"parameterSlots":5,"returnSlots":0},"@_msgSender_791":{"entryPoint":9444,"id":791,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_866":{"entryPoint":7464,"id":866,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_858":{"entryPoint":7267,"id":858,"parameterSlots":0,"returnSlots":0},"@_throwError_1225":{"entryPoint":9544,"id":1225,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":7609,"id":146,"parameterSlots":1,"returnSlots":0},"@canComplete_2177":{"entryPoint":5911,"id":2177,"parameterSlots":1,"returnSlots":1},"@canRefund_2216":{"entryPoint":4078,"id":2216,"parameterSlots":1,"returnSlots":1},"@completeSwapAsInitiator_2021":{"entryPoint":1582,"id":2021,"parameterSlots":2,"returnSlots":0},"@completeSwap_1878":{"entryPoint":2965,"id":1878,"parameterSlots":2,"returnSlots":0},"@emergencyWithdraw_2304":{"entryPoint":4353,"id":2304,"parameterSlots":2,"returnSlots":0},"@getSwap_2260":{"entryPoint":1330,"id":2260,"parameterSlots":1,"returnSlots":7},"@hashlockUsed_1388":{"entryPoint":7235,"id":1388,"parameterSlots":0,"returnSlots":0},"@initiateSwapMeta_1561":{"entryPoint":4653,"id":1561,"parameterSlots":3,"returnSlots":0},"@initiateSwap_1452":{"entryPoint":4310,"id":1452,"parameterSlots":4,"returnSlots":0},"@initiateTokenSwap_1624":{"entryPoint":5502,"id":1624,"parameterSlots":5,"returnSlots":0},"@nonces_1305":{"entryPoint":4054,"id":1305,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":4268,"id":67,"parameterSlots":0,"returnSlots":1},"@recover_982":{"entryPoint":9108,"id":982,"parameterSlots":2,"returnSlots":1},"@refundSwap_2138":{"entryPoint":6106,"id":2138,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2945,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_387":{"entryPoint":9152,"id":387,"parameterSlots":4,"returnSlots":0},"@safeTransfer_360":{"entryPoint":7337,"id":360,"parameterSlots":3,"returnSlots":0},"@swaps_1384":{"entryPoint":5583,"id":1384,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":5777,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_1140":{"entryPoint":9900,"id":1140,"parameterSlots":4,"returnSlots":3},"@tryRecover_952":{"entryPoint":9452,"id":952,"parameterSlots":2,"returnSlots":3},"@usedMetaSignatures_1309":{"entryPoint":5470,"id":1309,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":10610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":11020,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_InitiateSwapMeta_$1379_calldata_ptr":{"entryPoint":10973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10904,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":10250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes32":{"entryPoint":10523,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256":{"entryPoint":11204,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256":{"entryPoint":10801,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_InitiateSwapMeta_$1379_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":11106,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10345,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":10154,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":11463,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11956,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11527,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":11696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10370,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":12494,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":11486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":11991,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11562,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":10412,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":12379,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":12165,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":11583,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12324,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":10169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11763,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":11327,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":12509,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10676,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11513,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11638,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11904,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12206,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":10327,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10385,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":10144,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10295,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10360,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":12481,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":12093,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":11453,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12046,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12434,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":11010,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11005,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":10968,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11015,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10201,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10196,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":11915,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":11524,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd":{"entryPoint":11655,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10587,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10206,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10757,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:19341:11","nodeType":"YulBlock","src":"0:19341:11","statements":[{"body":{"nativeSrc":"52:32:11","nodeType":"YulBlock","src":"52:32:11","statements":[{"nativeSrc":"62:16:11","nodeType":"YulAssignment","src":"62:16:11","value":{"name":"value","nativeSrc":"73:5:11","nodeType":"YulIdentifier","src":"73:5:11"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:11","nodeType":"YulIdentifier","src":"62:7:11"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"7:77:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:11","nodeType":"YulTypedName","src":"34:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:11","nodeType":"YulTypedName","src":"44:7:11","type":""}],"src":"7:77:11"},{"body":{"nativeSrc":"155:53:11","nodeType":"YulBlock","src":"155:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:11","nodeType":"YulIdentifier","src":"172:3:11"},{"arguments":[{"name":"value","nativeSrc":"195:5:11","nodeType":"YulIdentifier","src":"195:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"177:17:11","nodeType":"YulIdentifier","src":"177:17:11"},"nativeSrc":"177:24:11","nodeType":"YulFunctionCall","src":"177:24:11"}],"functionName":{"name":"mstore","nativeSrc":"165:6:11","nodeType":"YulIdentifier","src":"165:6:11"},"nativeSrc":"165:37:11","nodeType":"YulFunctionCall","src":"165:37:11"},"nativeSrc":"165:37:11","nodeType":"YulExpressionStatement","src":"165:37:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"90:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:11","nodeType":"YulTypedName","src":"143:5:11","type":""},{"name":"pos","nativeSrc":"150:3:11","nodeType":"YulTypedName","src":"150:3:11","type":""}],"src":"90:118:11"},{"body":{"nativeSrc":"312:124:11","nodeType":"YulBlock","src":"312:124:11","statements":[{"nativeSrc":"322:26:11","nodeType":"YulAssignment","src":"322:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:11","nodeType":"YulIdentifier","src":"334:9:11"},{"kind":"number","nativeSrc":"345:2:11","nodeType":"YulLiteral","src":"345:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:11","nodeType":"YulIdentifier","src":"330:3:11"},"nativeSrc":"330:18:11","nodeType":"YulFunctionCall","src":"330:18:11"},"variableNames":[{"name":"tail","nativeSrc":"322:4:11","nodeType":"YulIdentifier","src":"322:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:11","nodeType":"YulIdentifier","src":"402:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:11","nodeType":"YulIdentifier","src":"415:9:11"},{"kind":"number","nativeSrc":"426:1:11","nodeType":"YulLiteral","src":"426:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:11","nodeType":"YulIdentifier","src":"411:3:11"},"nativeSrc":"411:17:11","nodeType":"YulFunctionCall","src":"411:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"358:43:11","nodeType":"YulIdentifier","src":"358:43:11"},"nativeSrc":"358:71:11","nodeType":"YulFunctionCall","src":"358:71:11"},"nativeSrc":"358:71:11","nodeType":"YulExpressionStatement","src":"358:71:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"214:222:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:11","nodeType":"YulTypedName","src":"284:9:11","type":""},{"name":"value0","nativeSrc":"296:6:11","nodeType":"YulTypedName","src":"296:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:11","nodeType":"YulTypedName","src":"307:4:11","type":""}],"src":"214:222:11"},{"body":{"nativeSrc":"482:35:11","nodeType":"YulBlock","src":"482:35:11","statements":[{"nativeSrc":"492:19:11","nodeType":"YulAssignment","src":"492:19:11","value":{"arguments":[{"kind":"number","nativeSrc":"508:2:11","nodeType":"YulLiteral","src":"508:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"502:5:11","nodeType":"YulIdentifier","src":"502:5:11"},"nativeSrc":"502:9:11","nodeType":"YulFunctionCall","src":"502:9:11"},"variableNames":[{"name":"memPtr","nativeSrc":"492:6:11","nodeType":"YulIdentifier","src":"492:6:11"}]}]},"name":"allocate_unbounded","nativeSrc":"442:75:11","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"475:6:11","nodeType":"YulTypedName","src":"475:6:11","type":""}],"src":"442:75:11"},{"body":{"nativeSrc":"612:28:11","nodeType":"YulBlock","src":"612:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"629:1:11","nodeType":"YulLiteral","src":"629:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"632:1:11","nodeType":"YulLiteral","src":"632:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"622:6:11","nodeType":"YulIdentifier","src":"622:6:11"},"nativeSrc":"622:12:11","nodeType":"YulFunctionCall","src":"622:12:11"},"nativeSrc":"622:12:11","nodeType":"YulExpressionStatement","src":"622:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"523:117:11","nodeType":"YulFunctionDefinition","src":"523:117:11"},{"body":{"nativeSrc":"735:28:11","nodeType":"YulBlock","src":"735:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"752:1:11","nodeType":"YulLiteral","src":"752:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"755:1:11","nodeType":"YulLiteral","src":"755:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"745:6:11","nodeType":"YulIdentifier","src":"745:6:11"},"nativeSrc":"745:12:11","nodeType":"YulFunctionCall","src":"745:12:11"},"nativeSrc":"745:12:11","nodeType":"YulExpressionStatement","src":"745:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"646:117:11","nodeType":"YulFunctionDefinition","src":"646:117:11"},{"body":{"nativeSrc":"812:79:11","nodeType":"YulBlock","src":"812:79:11","statements":[{"body":{"nativeSrc":"869:16:11","nodeType":"YulBlock","src":"869:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"878:1:11","nodeType":"YulLiteral","src":"878:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"881:1:11","nodeType":"YulLiteral","src":"881:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"871:6:11","nodeType":"YulIdentifier","src":"871:6:11"},"nativeSrc":"871:12:11","nodeType":"YulFunctionCall","src":"871:12:11"},"nativeSrc":"871:12:11","nodeType":"YulExpressionStatement","src":"871:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"835:5:11","nodeType":"YulIdentifier","src":"835:5:11"},{"arguments":[{"name":"value","nativeSrc":"860:5:11","nodeType":"YulIdentifier","src":"860:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"842:17:11","nodeType":"YulIdentifier","src":"842:17:11"},"nativeSrc":"842:24:11","nodeType":"YulFunctionCall","src":"842:24:11"}],"functionName":{"name":"eq","nativeSrc":"832:2:11","nodeType":"YulIdentifier","src":"832:2:11"},"nativeSrc":"832:35:11","nodeType":"YulFunctionCall","src":"832:35:11"}],"functionName":{"name":"iszero","nativeSrc":"825:6:11","nodeType":"YulIdentifier","src":"825:6:11"},"nativeSrc":"825:43:11","nodeType":"YulFunctionCall","src":"825:43:11"},"nativeSrc":"822:63:11","nodeType":"YulIf","src":"822:63:11"}]},"name":"validator_revert_t_bytes32","nativeSrc":"769:122:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"805:5:11","nodeType":"YulTypedName","src":"805:5:11","type":""}],"src":"769:122:11"},{"body":{"nativeSrc":"949:87:11","nodeType":"YulBlock","src":"949:87:11","statements":[{"nativeSrc":"959:29:11","nodeType":"YulAssignment","src":"959:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"981:6:11","nodeType":"YulIdentifier","src":"981:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"968:12:11","nodeType":"YulIdentifier","src":"968:12:11"},"nativeSrc":"968:20:11","nodeType":"YulFunctionCall","src":"968:20:11"},"variableNames":[{"name":"value","nativeSrc":"959:5:11","nodeType":"YulIdentifier","src":"959:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1024:5:11","nodeType":"YulIdentifier","src":"1024:5:11"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"997:26:11","nodeType":"YulIdentifier","src":"997:26:11"},"nativeSrc":"997:33:11","nodeType":"YulFunctionCall","src":"997:33:11"},"nativeSrc":"997:33:11","nodeType":"YulExpressionStatement","src":"997:33:11"}]},"name":"abi_decode_t_bytes32","nativeSrc":"897:139:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"927:6:11","nodeType":"YulTypedName","src":"927:6:11","type":""},{"name":"end","nativeSrc":"935:3:11","nodeType":"YulTypedName","src":"935:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"943:5:11","nodeType":"YulTypedName","src":"943:5:11","type":""}],"src":"897:139:11"},{"body":{"nativeSrc":"1108:263:11","nodeType":"YulBlock","src":"1108:263:11","statements":[{"body":{"nativeSrc":"1154:83:11","nodeType":"YulBlock","src":"1154:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1156:77:11","nodeType":"YulIdentifier","src":"1156:77:11"},"nativeSrc":"1156:79:11","nodeType":"YulFunctionCall","src":"1156:79:11"},"nativeSrc":"1156:79:11","nodeType":"YulExpressionStatement","src":"1156:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1129:7:11","nodeType":"YulIdentifier","src":"1129:7:11"},{"name":"headStart","nativeSrc":"1138:9:11","nodeType":"YulIdentifier","src":"1138:9:11"}],"functionName":{"name":"sub","nativeSrc":"1125:3:11","nodeType":"YulIdentifier","src":"1125:3:11"},"nativeSrc":"1125:23:11","nodeType":"YulFunctionCall","src":"1125:23:11"},{"kind":"number","nativeSrc":"1150:2:11","nodeType":"YulLiteral","src":"1150:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1121:3:11","nodeType":"YulIdentifier","src":"1121:3:11"},"nativeSrc":"1121:32:11","nodeType":"YulFunctionCall","src":"1121:32:11"},"nativeSrc":"1118:119:11","nodeType":"YulIf","src":"1118:119:11"},{"nativeSrc":"1247:117:11","nodeType":"YulBlock","src":"1247:117:11","statements":[{"nativeSrc":"1262:15:11","nodeType":"YulVariableDeclaration","src":"1262:15:11","value":{"kind":"number","nativeSrc":"1276:1:11","nodeType":"YulLiteral","src":"1276:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1266:6:11","nodeType":"YulTypedName","src":"1266:6:11","type":""}]},{"nativeSrc":"1291:63:11","nodeType":"YulAssignment","src":"1291:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1326:9:11","nodeType":"YulIdentifier","src":"1326:9:11"},{"name":"offset","nativeSrc":"1337:6:11","nodeType":"YulIdentifier","src":"1337:6:11"}],"functionName":{"name":"add","nativeSrc":"1322:3:11","nodeType":"YulIdentifier","src":"1322:3:11"},"nativeSrc":"1322:22:11","nodeType":"YulFunctionCall","src":"1322:22:11"},{"name":"dataEnd","nativeSrc":"1346:7:11","nodeType":"YulIdentifier","src":"1346:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"1301:20:11","nodeType":"YulIdentifier","src":"1301:20:11"},"nativeSrc":"1301:53:11","nodeType":"YulFunctionCall","src":"1301:53:11"},"variableNames":[{"name":"value0","nativeSrc":"1291:6:11","nodeType":"YulIdentifier","src":"1291:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"1042:329:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1078:9:11","nodeType":"YulTypedName","src":"1078:9:11","type":""},{"name":"dataEnd","nativeSrc":"1089:7:11","nodeType":"YulTypedName","src":"1089:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1101:6:11","nodeType":"YulTypedName","src":"1101:6:11","type":""}],"src":"1042:329:11"},{"body":{"nativeSrc":"1422:81:11","nodeType":"YulBlock","src":"1422:81:11","statements":[{"nativeSrc":"1432:65:11","nodeType":"YulAssignment","src":"1432:65:11","value":{"arguments":[{"name":"value","nativeSrc":"1447:5:11","nodeType":"YulIdentifier","src":"1447:5:11"},{"kind":"number","nativeSrc":"1454:42:11","nodeType":"YulLiteral","src":"1454:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1443:3:11","nodeType":"YulIdentifier","src":"1443:3:11"},"nativeSrc":"1443:54:11","nodeType":"YulFunctionCall","src":"1443:54:11"},"variableNames":[{"name":"cleaned","nativeSrc":"1432:7:11","nodeType":"YulIdentifier","src":"1432:7:11"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1377:126:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1404:5:11","nodeType":"YulTypedName","src":"1404:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1414:7:11","nodeType":"YulTypedName","src":"1414:7:11","type":""}],"src":"1377:126:11"},{"body":{"nativeSrc":"1554:51:11","nodeType":"YulBlock","src":"1554:51:11","statements":[{"nativeSrc":"1564:35:11","nodeType":"YulAssignment","src":"1564:35:11","value":{"arguments":[{"name":"value","nativeSrc":"1593:5:11","nodeType":"YulIdentifier","src":"1593:5:11"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1575:17:11","nodeType":"YulIdentifier","src":"1575:17:11"},"nativeSrc":"1575:24:11","nodeType":"YulFunctionCall","src":"1575:24:11"},"variableNames":[{"name":"cleaned","nativeSrc":"1564:7:11","nodeType":"YulIdentifier","src":"1564:7:11"}]}]},"name":"cleanup_t_address","nativeSrc":"1509:96:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1536:5:11","nodeType":"YulTypedName","src":"1536:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1546:7:11","nodeType":"YulTypedName","src":"1546:7:11","type":""}],"src":"1509:96:11"},{"body":{"nativeSrc":"1676:53:11","nodeType":"YulBlock","src":"1676:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1693:3:11","nodeType":"YulIdentifier","src":"1693:3:11"},{"arguments":[{"name":"value","nativeSrc":"1716:5:11","nodeType":"YulIdentifier","src":"1716:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1698:17:11","nodeType":"YulIdentifier","src":"1698:17:11"},"nativeSrc":"1698:24:11","nodeType":"YulFunctionCall","src":"1698:24:11"}],"functionName":{"name":"mstore","nativeSrc":"1686:6:11","nodeType":"YulIdentifier","src":"1686:6:11"},"nativeSrc":"1686:37:11","nodeType":"YulFunctionCall","src":"1686:37:11"},"nativeSrc":"1686:37:11","nodeType":"YulExpressionStatement","src":"1686:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1611:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1664:5:11","nodeType":"YulTypedName","src":"1664:5:11","type":""},{"name":"pos","nativeSrc":"1671:3:11","nodeType":"YulTypedName","src":"1671:3:11","type":""}],"src":"1611:118:11"},{"body":{"nativeSrc":"1780:32:11","nodeType":"YulBlock","src":"1780:32:11","statements":[{"nativeSrc":"1790:16:11","nodeType":"YulAssignment","src":"1790:16:11","value":{"name":"value","nativeSrc":"1801:5:11","nodeType":"YulIdentifier","src":"1801:5:11"},"variableNames":[{"name":"cleaned","nativeSrc":"1790:7:11","nodeType":"YulIdentifier","src":"1790:7:11"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1735:77:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1762:5:11","nodeType":"YulTypedName","src":"1762:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1772:7:11","nodeType":"YulTypedName","src":"1772:7:11","type":""}],"src":"1735:77:11"},{"body":{"nativeSrc":"1883:53:11","nodeType":"YulBlock","src":"1883:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1900:3:11","nodeType":"YulIdentifier","src":"1900:3:11"},{"arguments":[{"name":"value","nativeSrc":"1923:5:11","nodeType":"YulIdentifier","src":"1923:5:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1905:17:11","nodeType":"YulIdentifier","src":"1905:17:11"},"nativeSrc":"1905:24:11","nodeType":"YulFunctionCall","src":"1905:24:11"}],"functionName":{"name":"mstore","nativeSrc":"1893:6:11","nodeType":"YulIdentifier","src":"1893:6:11"},"nativeSrc":"1893:37:11","nodeType":"YulFunctionCall","src":"1893:37:11"},"nativeSrc":"1893:37:11","nodeType":"YulExpressionStatement","src":"1893:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1818:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1871:5:11","nodeType":"YulTypedName","src":"1871:5:11","type":""},{"name":"pos","nativeSrc":"1878:3:11","nodeType":"YulTypedName","src":"1878:3:11","type":""}],"src":"1818:118:11"},{"body":{"nativeSrc":"1984:48:11","nodeType":"YulBlock","src":"1984:48:11","statements":[{"nativeSrc":"1994:32:11","nodeType":"YulAssignment","src":"1994:32:11","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2019:5:11","nodeType":"YulIdentifier","src":"2019:5:11"}],"functionName":{"name":"iszero","nativeSrc":"2012:6:11","nodeType":"YulIdentifier","src":"2012:6:11"},"nativeSrc":"2012:13:11","nodeType":"YulFunctionCall","src":"2012:13:11"}],"functionName":{"name":"iszero","nativeSrc":"2005:6:11","nodeType":"YulIdentifier","src":"2005:6:11"},"nativeSrc":"2005:21:11","nodeType":"YulFunctionCall","src":"2005:21:11"},"variableNames":[{"name":"cleaned","nativeSrc":"1994:7:11","nodeType":"YulIdentifier","src":"1994:7:11"}]}]},"name":"cleanup_t_bool","nativeSrc":"1942:90:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1966:5:11","nodeType":"YulTypedName","src":"1966:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1976:7:11","nodeType":"YulTypedName","src":"1976:7:11","type":""}],"src":"1942:90:11"},{"body":{"nativeSrc":"2097:50:11","nodeType":"YulBlock","src":"2097:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2114:3:11","nodeType":"YulIdentifier","src":"2114:3:11"},{"arguments":[{"name":"value","nativeSrc":"2134:5:11","nodeType":"YulIdentifier","src":"2134:5:11"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"2119:14:11","nodeType":"YulIdentifier","src":"2119:14:11"},"nativeSrc":"2119:21:11","nodeType":"YulFunctionCall","src":"2119:21:11"}],"functionName":{"name":"mstore","nativeSrc":"2107:6:11","nodeType":"YulIdentifier","src":"2107:6:11"},"nativeSrc":"2107:34:11","nodeType":"YulFunctionCall","src":"2107:34:11"},"nativeSrc":"2107:34:11","nodeType":"YulExpressionStatement","src":"2107:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2038:109:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2085:5:11","nodeType":"YulTypedName","src":"2085:5:11","type":""},{"name":"pos","nativeSrc":"2092:3:11","nodeType":"YulTypedName","src":"2092:3:11","type":""}],"src":"2038:109:11"},{"body":{"nativeSrc":"2407:608:11","nodeType":"YulBlock","src":"2407:608:11","statements":[{"nativeSrc":"2417:27:11","nodeType":"YulAssignment","src":"2417:27:11","value":{"arguments":[{"name":"headStart","nativeSrc":"2429:9:11","nodeType":"YulIdentifier","src":"2429:9:11"},{"kind":"number","nativeSrc":"2440:3:11","nodeType":"YulLiteral","src":"2440:3:11","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"2425:3:11","nodeType":"YulIdentifier","src":"2425:3:11"},"nativeSrc":"2425:19:11","nodeType":"YulFunctionCall","src":"2425:19:11"},"variableNames":[{"name":"tail","nativeSrc":"2417:4:11","nodeType":"YulIdentifier","src":"2417:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2498:6:11","nodeType":"YulIdentifier","src":"2498:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2511:9:11","nodeType":"YulIdentifier","src":"2511:9:11"},{"kind":"number","nativeSrc":"2522:1:11","nodeType":"YulLiteral","src":"2522:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2507:3:11","nodeType":"YulIdentifier","src":"2507:3:11"},"nativeSrc":"2507:17:11","nodeType":"YulFunctionCall","src":"2507:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2454:43:11","nodeType":"YulIdentifier","src":"2454:43:11"},"nativeSrc":"2454:71:11","nodeType":"YulFunctionCall","src":"2454:71:11"},"nativeSrc":"2454:71:11","nodeType":"YulExpressionStatement","src":"2454:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"2579:6:11","nodeType":"YulIdentifier","src":"2579:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2592:9:11","nodeType":"YulIdentifier","src":"2592:9:11"},{"kind":"number","nativeSrc":"2603:2:11","nodeType":"YulLiteral","src":"2603:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2588:3:11","nodeType":"YulIdentifier","src":"2588:3:11"},"nativeSrc":"2588:18:11","nodeType":"YulFunctionCall","src":"2588:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2535:43:11","nodeType":"YulIdentifier","src":"2535:43:11"},"nativeSrc":"2535:72:11","nodeType":"YulFunctionCall","src":"2535:72:11"},"nativeSrc":"2535:72:11","nodeType":"YulExpressionStatement","src":"2535:72:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"2661:6:11","nodeType":"YulIdentifier","src":"2661:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2674:9:11","nodeType":"YulIdentifier","src":"2674:9:11"},{"kind":"number","nativeSrc":"2685:2:11","nodeType":"YulLiteral","src":"2685:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2670:3:11","nodeType":"YulIdentifier","src":"2670:3:11"},"nativeSrc":"2670:18:11","nodeType":"YulFunctionCall","src":"2670:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2617:43:11","nodeType":"YulIdentifier","src":"2617:43:11"},"nativeSrc":"2617:72:11","nodeType":"YulFunctionCall","src":"2617:72:11"},"nativeSrc":"2617:72:11","nodeType":"YulExpressionStatement","src":"2617:72:11"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"2743:6:11","nodeType":"YulIdentifier","src":"2743:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2756:9:11","nodeType":"YulIdentifier","src":"2756:9:11"},{"kind":"number","nativeSrc":"2767:2:11","nodeType":"YulLiteral","src":"2767:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2752:3:11","nodeType":"YulIdentifier","src":"2752:3:11"},"nativeSrc":"2752:18:11","nodeType":"YulFunctionCall","src":"2752:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2699:43:11","nodeType":"YulIdentifier","src":"2699:43:11"},"nativeSrc":"2699:72:11","nodeType":"YulFunctionCall","src":"2699:72:11"},"nativeSrc":"2699:72:11","nodeType":"YulExpressionStatement","src":"2699:72:11"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"2825:6:11","nodeType":"YulIdentifier","src":"2825:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2838:9:11","nodeType":"YulIdentifier","src":"2838:9:11"},{"kind":"number","nativeSrc":"2849:3:11","nodeType":"YulLiteral","src":"2849:3:11","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2834:3:11","nodeType":"YulIdentifier","src":"2834:3:11"},"nativeSrc":"2834:19:11","nodeType":"YulFunctionCall","src":"2834:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2781:43:11","nodeType":"YulIdentifier","src":"2781:43:11"},"nativeSrc":"2781:73:11","nodeType":"YulFunctionCall","src":"2781:73:11"},"nativeSrc":"2781:73:11","nodeType":"YulExpressionStatement","src":"2781:73:11"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"2902:6:11","nodeType":"YulIdentifier","src":"2902:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2915:9:11","nodeType":"YulIdentifier","src":"2915:9:11"},{"kind":"number","nativeSrc":"2926:3:11","nodeType":"YulLiteral","src":"2926:3:11","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"2911:3:11","nodeType":"YulIdentifier","src":"2911:3:11"},"nativeSrc":"2911:19:11","nodeType":"YulFunctionCall","src":"2911:19:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2864:37:11","nodeType":"YulIdentifier","src":"2864:37:11"},"nativeSrc":"2864:67:11","nodeType":"YulFunctionCall","src":"2864:67:11"},"nativeSrc":"2864:67:11","nodeType":"YulExpressionStatement","src":"2864:67:11"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"2979:6:11","nodeType":"YulIdentifier","src":"2979:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2992:9:11","nodeType":"YulIdentifier","src":"2992:9:11"},{"kind":"number","nativeSrc":"3003:3:11","nodeType":"YulLiteral","src":"3003:3:11","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"2988:3:11","nodeType":"YulIdentifier","src":"2988:3:11"},"nativeSrc":"2988:19:11","nodeType":"YulFunctionCall","src":"2988:19:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2941:37:11","nodeType":"YulIdentifier","src":"2941:37:11"},"nativeSrc":"2941:67:11","nodeType":"YulFunctionCall","src":"2941:67:11"},"nativeSrc":"2941:67:11","nodeType":"YulExpressionStatement","src":"2941:67:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nativeSrc":"2153:862:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2331:9:11","nodeType":"YulTypedName","src":"2331:9:11","type":""},{"name":"value6","nativeSrc":"2343:6:11","nodeType":"YulTypedName","src":"2343:6:11","type":""},{"name":"value5","nativeSrc":"2351:6:11","nodeType":"YulTypedName","src":"2351:6:11","type":""},{"name":"value4","nativeSrc":"2359:6:11","nodeType":"YulTypedName","src":"2359:6:11","type":""},{"name":"value3","nativeSrc":"2367:6:11","nodeType":"YulTypedName","src":"2367:6:11","type":""},{"name":"value2","nativeSrc":"2375:6:11","nodeType":"YulTypedName","src":"2375:6:11","type":""},{"name":"value1","nativeSrc":"2383:6:11","nodeType":"YulTypedName","src":"2383:6:11","type":""},{"name":"value0","nativeSrc":"2391:6:11","nodeType":"YulTypedName","src":"2391:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2402:4:11","nodeType":"YulTypedName","src":"2402:4:11","type":""}],"src":"2153:862:11"},{"body":{"nativeSrc":"3104:391:11","nodeType":"YulBlock","src":"3104:391:11","statements":[{"body":{"nativeSrc":"3150:83:11","nodeType":"YulBlock","src":"3150:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3152:77:11","nodeType":"YulIdentifier","src":"3152:77:11"},"nativeSrc":"3152:79:11","nodeType":"YulFunctionCall","src":"3152:79:11"},"nativeSrc":"3152:79:11","nodeType":"YulExpressionStatement","src":"3152:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3125:7:11","nodeType":"YulIdentifier","src":"3125:7:11"},{"name":"headStart","nativeSrc":"3134:9:11","nodeType":"YulIdentifier","src":"3134:9:11"}],"functionName":{"name":"sub","nativeSrc":"3121:3:11","nodeType":"YulIdentifier","src":"3121:3:11"},"nativeSrc":"3121:23:11","nodeType":"YulFunctionCall","src":"3121:23:11"},{"kind":"number","nativeSrc":"3146:2:11","nodeType":"YulLiteral","src":"3146:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3117:3:11","nodeType":"YulIdentifier","src":"3117:3:11"},"nativeSrc":"3117:32:11","nodeType":"YulFunctionCall","src":"3117:32:11"},"nativeSrc":"3114:119:11","nodeType":"YulIf","src":"3114:119:11"},{"nativeSrc":"3243:117:11","nodeType":"YulBlock","src":"3243:117:11","statements":[{"nativeSrc":"3258:15:11","nodeType":"YulVariableDeclaration","src":"3258:15:11","value":{"kind":"number","nativeSrc":"3272:1:11","nodeType":"YulLiteral","src":"3272:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3262:6:11","nodeType":"YulTypedName","src":"3262:6:11","type":""}]},{"nativeSrc":"3287:63:11","nodeType":"YulAssignment","src":"3287:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3322:9:11","nodeType":"YulIdentifier","src":"3322:9:11"},{"name":"offset","nativeSrc":"3333:6:11","nodeType":"YulIdentifier","src":"3333:6:11"}],"functionName":{"name":"add","nativeSrc":"3318:3:11","nodeType":"YulIdentifier","src":"3318:3:11"},"nativeSrc":"3318:22:11","nodeType":"YulFunctionCall","src":"3318:22:11"},{"name":"dataEnd","nativeSrc":"3342:7:11","nodeType":"YulIdentifier","src":"3342:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"3297:20:11","nodeType":"YulIdentifier","src":"3297:20:11"},"nativeSrc":"3297:53:11","nodeType":"YulFunctionCall","src":"3297:53:11"},"variableNames":[{"name":"value0","nativeSrc":"3287:6:11","nodeType":"YulIdentifier","src":"3287:6:11"}]}]},{"nativeSrc":"3370:118:11","nodeType":"YulBlock","src":"3370:118:11","statements":[{"nativeSrc":"3385:16:11","nodeType":"YulVariableDeclaration","src":"3385:16:11","value":{"kind":"number","nativeSrc":"3399:2:11","nodeType":"YulLiteral","src":"3399:2:11","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3389:6:11","nodeType":"YulTypedName","src":"3389:6:11","type":""}]},{"nativeSrc":"3415:63:11","nodeType":"YulAssignment","src":"3415:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3450:9:11","nodeType":"YulIdentifier","src":"3450:9:11"},{"name":"offset","nativeSrc":"3461:6:11","nodeType":"YulIdentifier","src":"3461:6:11"}],"functionName":{"name":"add","nativeSrc":"3446:3:11","nodeType":"YulIdentifier","src":"3446:3:11"},"nativeSrc":"3446:22:11","nodeType":"YulFunctionCall","src":"3446:22:11"},{"name":"dataEnd","nativeSrc":"3470:7:11","nodeType":"YulIdentifier","src":"3470:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"3425:20:11","nodeType":"YulIdentifier","src":"3425:20:11"},"nativeSrc":"3425:53:11","nodeType":"YulFunctionCall","src":"3425:53:11"},"variableNames":[{"name":"value1","nativeSrc":"3415:6:11","nodeType":"YulIdentifier","src":"3415:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32","nativeSrc":"3021:474:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3066:9:11","nodeType":"YulTypedName","src":"3066:9:11","type":""},{"name":"dataEnd","nativeSrc":"3077:7:11","nodeType":"YulTypedName","src":"3077:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3089:6:11","nodeType":"YulTypedName","src":"3089:6:11","type":""},{"name":"value1","nativeSrc":"3097:6:11","nodeType":"YulTypedName","src":"3097:6:11","type":""}],"src":"3021:474:11"},{"body":{"nativeSrc":"3544:79:11","nodeType":"YulBlock","src":"3544:79:11","statements":[{"body":{"nativeSrc":"3601:16:11","nodeType":"YulBlock","src":"3601:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3610:1:11","nodeType":"YulLiteral","src":"3610:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"3613:1:11","nodeType":"YulLiteral","src":"3613:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3603:6:11","nodeType":"YulIdentifier","src":"3603:6:11"},"nativeSrc":"3603:12:11","nodeType":"YulFunctionCall","src":"3603:12:11"},"nativeSrc":"3603:12:11","nodeType":"YulExpressionStatement","src":"3603:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3567:5:11","nodeType":"YulIdentifier","src":"3567:5:11"},{"arguments":[{"name":"value","nativeSrc":"3592:5:11","nodeType":"YulIdentifier","src":"3592:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3574:17:11","nodeType":"YulIdentifier","src":"3574:17:11"},"nativeSrc":"3574:24:11","nodeType":"YulFunctionCall","src":"3574:24:11"}],"functionName":{"name":"eq","nativeSrc":"3564:2:11","nodeType":"YulIdentifier","src":"3564:2:11"},"nativeSrc":"3564:35:11","nodeType":"YulFunctionCall","src":"3564:35:11"}],"functionName":{"name":"iszero","nativeSrc":"3557:6:11","nodeType":"YulIdentifier","src":"3557:6:11"},"nativeSrc":"3557:43:11","nodeType":"YulFunctionCall","src":"3557:43:11"},"nativeSrc":"3554:63:11","nodeType":"YulIf","src":"3554:63:11"}]},"name":"validator_revert_t_address","nativeSrc":"3501:122:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3537:5:11","nodeType":"YulTypedName","src":"3537:5:11","type":""}],"src":"3501:122:11"},{"body":{"nativeSrc":"3681:87:11","nodeType":"YulBlock","src":"3681:87:11","statements":[{"nativeSrc":"3691:29:11","nodeType":"YulAssignment","src":"3691:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"3713:6:11","nodeType":"YulIdentifier","src":"3713:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"3700:12:11","nodeType":"YulIdentifier","src":"3700:12:11"},"nativeSrc":"3700:20:11","nodeType":"YulFunctionCall","src":"3700:20:11"},"variableNames":[{"name":"value","nativeSrc":"3691:5:11","nodeType":"YulIdentifier","src":"3691:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3756:5:11","nodeType":"YulIdentifier","src":"3756:5:11"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3729:26:11","nodeType":"YulIdentifier","src":"3729:26:11"},"nativeSrc":"3729:33:11","nodeType":"YulFunctionCall","src":"3729:33:11"},"nativeSrc":"3729:33:11","nodeType":"YulExpressionStatement","src":"3729:33:11"}]},"name":"abi_decode_t_address","nativeSrc":"3629:139:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3659:6:11","nodeType":"YulTypedName","src":"3659:6:11","type":""},{"name":"end","nativeSrc":"3667:3:11","nodeType":"YulTypedName","src":"3667:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3675:5:11","nodeType":"YulTypedName","src":"3675:5:11","type":""}],"src":"3629:139:11"},{"body":{"nativeSrc":"3840:263:11","nodeType":"YulBlock","src":"3840:263:11","statements":[{"body":{"nativeSrc":"3886:83:11","nodeType":"YulBlock","src":"3886:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3888:77:11","nodeType":"YulIdentifier","src":"3888:77:11"},"nativeSrc":"3888:79:11","nodeType":"YulFunctionCall","src":"3888:79:11"},"nativeSrc":"3888:79:11","nodeType":"YulExpressionStatement","src":"3888:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3861:7:11","nodeType":"YulIdentifier","src":"3861:7:11"},{"name":"headStart","nativeSrc":"3870:9:11","nodeType":"YulIdentifier","src":"3870:9:11"}],"functionName":{"name":"sub","nativeSrc":"3857:3:11","nodeType":"YulIdentifier","src":"3857:3:11"},"nativeSrc":"3857:23:11","nodeType":"YulFunctionCall","src":"3857:23:11"},{"kind":"number","nativeSrc":"3882:2:11","nodeType":"YulLiteral","src":"3882:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3853:3:11","nodeType":"YulIdentifier","src":"3853:3:11"},"nativeSrc":"3853:32:11","nodeType":"YulFunctionCall","src":"3853:32:11"},"nativeSrc":"3850:119:11","nodeType":"YulIf","src":"3850:119:11"},{"nativeSrc":"3979:117:11","nodeType":"YulBlock","src":"3979:117:11","statements":[{"nativeSrc":"3994:15:11","nodeType":"YulVariableDeclaration","src":"3994:15:11","value":{"kind":"number","nativeSrc":"4008:1:11","nodeType":"YulLiteral","src":"4008:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3998:6:11","nodeType":"YulTypedName","src":"3998:6:11","type":""}]},{"nativeSrc":"4023:63:11","nodeType":"YulAssignment","src":"4023:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4058:9:11","nodeType":"YulIdentifier","src":"4058:9:11"},{"name":"offset","nativeSrc":"4069:6:11","nodeType":"YulIdentifier","src":"4069:6:11"}],"functionName":{"name":"add","nativeSrc":"4054:3:11","nodeType":"YulIdentifier","src":"4054:3:11"},"nativeSrc":"4054:22:11","nodeType":"YulFunctionCall","src":"4054:22:11"},{"name":"dataEnd","nativeSrc":"4078:7:11","nodeType":"YulIdentifier","src":"4078:7:11"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4033:20:11","nodeType":"YulIdentifier","src":"4033:20:11"},"nativeSrc":"4033:53:11","nodeType":"YulFunctionCall","src":"4033:53:11"},"variableNames":[{"name":"value0","nativeSrc":"4023:6:11","nodeType":"YulIdentifier","src":"4023:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3774:329:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3810:9:11","nodeType":"YulTypedName","src":"3810:9:11","type":""},{"name":"dataEnd","nativeSrc":"3821:7:11","nodeType":"YulTypedName","src":"3821:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3833:6:11","nodeType":"YulTypedName","src":"3833:6:11","type":""}],"src":"3774:329:11"},{"body":{"nativeSrc":"4207:124:11","nodeType":"YulBlock","src":"4207:124:11","statements":[{"nativeSrc":"4217:26:11","nodeType":"YulAssignment","src":"4217:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"4229:9:11","nodeType":"YulIdentifier","src":"4229:9:11"},{"kind":"number","nativeSrc":"4240:2:11","nodeType":"YulLiteral","src":"4240:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4225:3:11","nodeType":"YulIdentifier","src":"4225:3:11"},"nativeSrc":"4225:18:11","nodeType":"YulFunctionCall","src":"4225:18:11"},"variableNames":[{"name":"tail","nativeSrc":"4217:4:11","nodeType":"YulIdentifier","src":"4217:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4297:6:11","nodeType":"YulIdentifier","src":"4297:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"4310:9:11","nodeType":"YulIdentifier","src":"4310:9:11"},{"kind":"number","nativeSrc":"4321:1:11","nodeType":"YulLiteral","src":"4321:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4306:3:11","nodeType":"YulIdentifier","src":"4306:3:11"},"nativeSrc":"4306:17:11","nodeType":"YulFunctionCall","src":"4306:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4253:43:11","nodeType":"YulIdentifier","src":"4253:43:11"},"nativeSrc":"4253:71:11","nodeType":"YulFunctionCall","src":"4253:71:11"},"nativeSrc":"4253:71:11","nodeType":"YulExpressionStatement","src":"4253:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4109:222:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4179:9:11","nodeType":"YulTypedName","src":"4179:9:11","type":""},{"name":"value0","nativeSrc":"4191:6:11","nodeType":"YulTypedName","src":"4191:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4202:4:11","nodeType":"YulTypedName","src":"4202:4:11","type":""}],"src":"4109:222:11"},{"body":{"nativeSrc":"4429:118:11","nodeType":"YulBlock","src":"4429:118:11","statements":[{"nativeSrc":"4439:26:11","nodeType":"YulAssignment","src":"4439:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"4451:9:11","nodeType":"YulIdentifier","src":"4451:9:11"},{"kind":"number","nativeSrc":"4462:2:11","nodeType":"YulLiteral","src":"4462:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4447:3:11","nodeType":"YulIdentifier","src":"4447:3:11"},"nativeSrc":"4447:18:11","nodeType":"YulFunctionCall","src":"4447:18:11"},"variableNames":[{"name":"tail","nativeSrc":"4439:4:11","nodeType":"YulIdentifier","src":"4439:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4513:6:11","nodeType":"YulIdentifier","src":"4513:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"4526:9:11","nodeType":"YulIdentifier","src":"4526:9:11"},{"kind":"number","nativeSrc":"4537:1:11","nodeType":"YulLiteral","src":"4537:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4522:3:11","nodeType":"YulIdentifier","src":"4522:3:11"},"nativeSrc":"4522:17:11","nodeType":"YulFunctionCall","src":"4522:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4475:37:11","nodeType":"YulIdentifier","src":"4475:37:11"},"nativeSrc":"4475:65:11","nodeType":"YulFunctionCall","src":"4475:65:11"},"nativeSrc":"4475:65:11","nodeType":"YulExpressionStatement","src":"4475:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"4337:210:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4401:9:11","nodeType":"YulTypedName","src":"4401:9:11","type":""},{"name":"value0","nativeSrc":"4413:6:11","nodeType":"YulTypedName","src":"4413:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4424:4:11","nodeType":"YulTypedName","src":"4424:4:11","type":""}],"src":"4337:210:11"},{"body":{"nativeSrc":"4651:124:11","nodeType":"YulBlock","src":"4651:124:11","statements":[{"nativeSrc":"4661:26:11","nodeType":"YulAssignment","src":"4661:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"4673:9:11","nodeType":"YulIdentifier","src":"4673:9:11"},{"kind":"number","nativeSrc":"4684:2:11","nodeType":"YulLiteral","src":"4684:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4669:3:11","nodeType":"YulIdentifier","src":"4669:3:11"},"nativeSrc":"4669:18:11","nodeType":"YulFunctionCall","src":"4669:18:11"},"variableNames":[{"name":"tail","nativeSrc":"4661:4:11","nodeType":"YulIdentifier","src":"4661:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4741:6:11","nodeType":"YulIdentifier","src":"4741:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"4754:9:11","nodeType":"YulIdentifier","src":"4754:9:11"},{"kind":"number","nativeSrc":"4765:1:11","nodeType":"YulLiteral","src":"4765:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4750:3:11","nodeType":"YulIdentifier","src":"4750:3:11"},"nativeSrc":"4750:17:11","nodeType":"YulFunctionCall","src":"4750:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4697:43:11","nodeType":"YulIdentifier","src":"4697:43:11"},"nativeSrc":"4697:71:11","nodeType":"YulFunctionCall","src":"4697:71:11"},"nativeSrc":"4697:71:11","nodeType":"YulExpressionStatement","src":"4697:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4553:222:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4623:9:11","nodeType":"YulTypedName","src":"4623:9:11","type":""},{"name":"value0","nativeSrc":"4635:6:11","nodeType":"YulTypedName","src":"4635:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4646:4:11","nodeType":"YulTypedName","src":"4646:4:11","type":""}],"src":"4553:222:11"},{"body":{"nativeSrc":"4824:79:11","nodeType":"YulBlock","src":"4824:79:11","statements":[{"body":{"nativeSrc":"4881:16:11","nodeType":"YulBlock","src":"4881:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4890:1:11","nodeType":"YulLiteral","src":"4890:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"4893:1:11","nodeType":"YulLiteral","src":"4893:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4883:6:11","nodeType":"YulIdentifier","src":"4883:6:11"},"nativeSrc":"4883:12:11","nodeType":"YulFunctionCall","src":"4883:12:11"},"nativeSrc":"4883:12:11","nodeType":"YulExpressionStatement","src":"4883:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4847:5:11","nodeType":"YulIdentifier","src":"4847:5:11"},{"arguments":[{"name":"value","nativeSrc":"4872:5:11","nodeType":"YulIdentifier","src":"4872:5:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4854:17:11","nodeType":"YulIdentifier","src":"4854:17:11"},"nativeSrc":"4854:24:11","nodeType":"YulFunctionCall","src":"4854:24:11"}],"functionName":{"name":"eq","nativeSrc":"4844:2:11","nodeType":"YulIdentifier","src":"4844:2:11"},"nativeSrc":"4844:35:11","nodeType":"YulFunctionCall","src":"4844:35:11"}],"functionName":{"name":"iszero","nativeSrc":"4837:6:11","nodeType":"YulIdentifier","src":"4837:6:11"},"nativeSrc":"4837:43:11","nodeType":"YulFunctionCall","src":"4837:43:11"},"nativeSrc":"4834:63:11","nodeType":"YulIf","src":"4834:63:11"}]},"name":"validator_revert_t_uint256","nativeSrc":"4781:122:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4817:5:11","nodeType":"YulTypedName","src":"4817:5:11","type":""}],"src":"4781:122:11"},{"body":{"nativeSrc":"4961:87:11","nodeType":"YulBlock","src":"4961:87:11","statements":[{"nativeSrc":"4971:29:11","nodeType":"YulAssignment","src":"4971:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"4993:6:11","nodeType":"YulIdentifier","src":"4993:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"4980:12:11","nodeType":"YulIdentifier","src":"4980:12:11"},"nativeSrc":"4980:20:11","nodeType":"YulFunctionCall","src":"4980:20:11"},"variableNames":[{"name":"value","nativeSrc":"4971:5:11","nodeType":"YulIdentifier","src":"4971:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5036:5:11","nodeType":"YulIdentifier","src":"5036:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5009:26:11","nodeType":"YulIdentifier","src":"5009:26:11"},"nativeSrc":"5009:33:11","nodeType":"YulFunctionCall","src":"5009:33:11"},"nativeSrc":"5009:33:11","nodeType":"YulExpressionStatement","src":"5009:33:11"}]},"name":"abi_decode_t_uint256","nativeSrc":"4909:139:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4939:6:11","nodeType":"YulTypedName","src":"4939:6:11","type":""},{"name":"end","nativeSrc":"4947:3:11","nodeType":"YulTypedName","src":"4947:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4955:5:11","nodeType":"YulTypedName","src":"4955:5:11","type":""}],"src":"4909:139:11"},{"body":{"nativeSrc":"5171:648:11","nodeType":"YulBlock","src":"5171:648:11","statements":[{"body":{"nativeSrc":"5218:83:11","nodeType":"YulBlock","src":"5218:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5220:77:11","nodeType":"YulIdentifier","src":"5220:77:11"},"nativeSrc":"5220:79:11","nodeType":"YulFunctionCall","src":"5220:79:11"},"nativeSrc":"5220:79:11","nodeType":"YulExpressionStatement","src":"5220:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5192:7:11","nodeType":"YulIdentifier","src":"5192:7:11"},{"name":"headStart","nativeSrc":"5201:9:11","nodeType":"YulIdentifier","src":"5201:9:11"}],"functionName":{"name":"sub","nativeSrc":"5188:3:11","nodeType":"YulIdentifier","src":"5188:3:11"},"nativeSrc":"5188:23:11","nodeType":"YulFunctionCall","src":"5188:23:11"},{"kind":"number","nativeSrc":"5213:3:11","nodeType":"YulLiteral","src":"5213:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"5184:3:11","nodeType":"YulIdentifier","src":"5184:3:11"},"nativeSrc":"5184:33:11","nodeType":"YulFunctionCall","src":"5184:33:11"},"nativeSrc":"5181:120:11","nodeType":"YulIf","src":"5181:120:11"},{"nativeSrc":"5311:117:11","nodeType":"YulBlock","src":"5311:117:11","statements":[{"nativeSrc":"5326:15:11","nodeType":"YulVariableDeclaration","src":"5326:15:11","value":{"kind":"number","nativeSrc":"5340:1:11","nodeType":"YulLiteral","src":"5340:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5330:6:11","nodeType":"YulTypedName","src":"5330:6:11","type":""}]},{"nativeSrc":"5355:63:11","nodeType":"YulAssignment","src":"5355:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5390:9:11","nodeType":"YulIdentifier","src":"5390:9:11"},{"name":"offset","nativeSrc":"5401:6:11","nodeType":"YulIdentifier","src":"5401:6:11"}],"functionName":{"name":"add","nativeSrc":"5386:3:11","nodeType":"YulIdentifier","src":"5386:3:11"},"nativeSrc":"5386:22:11","nodeType":"YulFunctionCall","src":"5386:22:11"},{"name":"dataEnd","nativeSrc":"5410:7:11","nodeType":"YulIdentifier","src":"5410:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5365:20:11","nodeType":"YulIdentifier","src":"5365:20:11"},"nativeSrc":"5365:53:11","nodeType":"YulFunctionCall","src":"5365:53:11"},"variableNames":[{"name":"value0","nativeSrc":"5355:6:11","nodeType":"YulIdentifier","src":"5355:6:11"}]}]},{"nativeSrc":"5438:118:11","nodeType":"YulBlock","src":"5438:118:11","statements":[{"nativeSrc":"5453:16:11","nodeType":"YulVariableDeclaration","src":"5453:16:11","value":{"kind":"number","nativeSrc":"5467:2:11","nodeType":"YulLiteral","src":"5467:2:11","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5457:6:11","nodeType":"YulTypedName","src":"5457:6:11","type":""}]},{"nativeSrc":"5483:63:11","nodeType":"YulAssignment","src":"5483:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5518:9:11","nodeType":"YulIdentifier","src":"5518:9:11"},{"name":"offset","nativeSrc":"5529:6:11","nodeType":"YulIdentifier","src":"5529:6:11"}],"functionName":{"name":"add","nativeSrc":"5514:3:11","nodeType":"YulIdentifier","src":"5514:3:11"},"nativeSrc":"5514:22:11","nodeType":"YulFunctionCall","src":"5514:22:11"},{"name":"dataEnd","nativeSrc":"5538:7:11","nodeType":"YulIdentifier","src":"5538:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5493:20:11","nodeType":"YulIdentifier","src":"5493:20:11"},"nativeSrc":"5493:53:11","nodeType":"YulFunctionCall","src":"5493:53:11"},"variableNames":[{"name":"value1","nativeSrc":"5483:6:11","nodeType":"YulIdentifier","src":"5483:6:11"}]}]},{"nativeSrc":"5566:118:11","nodeType":"YulBlock","src":"5566:118:11","statements":[{"nativeSrc":"5581:16:11","nodeType":"YulVariableDeclaration","src":"5581:16:11","value":{"kind":"number","nativeSrc":"5595:2:11","nodeType":"YulLiteral","src":"5595:2:11","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5585:6:11","nodeType":"YulTypedName","src":"5585:6:11","type":""}]},{"nativeSrc":"5611:63:11","nodeType":"YulAssignment","src":"5611:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5646:9:11","nodeType":"YulIdentifier","src":"5646:9:11"},{"name":"offset","nativeSrc":"5657:6:11","nodeType":"YulIdentifier","src":"5657:6:11"}],"functionName":{"name":"add","nativeSrc":"5642:3:11","nodeType":"YulIdentifier","src":"5642:3:11"},"nativeSrc":"5642:22:11","nodeType":"YulFunctionCall","src":"5642:22:11"},{"name":"dataEnd","nativeSrc":"5666:7:11","nodeType":"YulIdentifier","src":"5666:7:11"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5621:20:11","nodeType":"YulIdentifier","src":"5621:20:11"},"nativeSrc":"5621:53:11","nodeType":"YulFunctionCall","src":"5621:53:11"},"variableNames":[{"name":"value2","nativeSrc":"5611:6:11","nodeType":"YulIdentifier","src":"5611:6:11"}]}]},{"nativeSrc":"5694:118:11","nodeType":"YulBlock","src":"5694:118:11","statements":[{"nativeSrc":"5709:16:11","nodeType":"YulVariableDeclaration","src":"5709:16:11","value":{"kind":"number","nativeSrc":"5723:2:11","nodeType":"YulLiteral","src":"5723:2:11","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"5713:6:11","nodeType":"YulTypedName","src":"5713:6:11","type":""}]},{"nativeSrc":"5739:63:11","nodeType":"YulAssignment","src":"5739:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5774:9:11","nodeType":"YulIdentifier","src":"5774:9:11"},{"name":"offset","nativeSrc":"5785:6:11","nodeType":"YulIdentifier","src":"5785:6:11"}],"functionName":{"name":"add","nativeSrc":"5770:3:11","nodeType":"YulIdentifier","src":"5770:3:11"},"nativeSrc":"5770:22:11","nodeType":"YulFunctionCall","src":"5770:22:11"},{"name":"dataEnd","nativeSrc":"5794:7:11","nodeType":"YulIdentifier","src":"5794:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5749:20:11","nodeType":"YulIdentifier","src":"5749:20:11"},"nativeSrc":"5749:53:11","nodeType":"YulFunctionCall","src":"5749:53:11"},"variableNames":[{"name":"value3","nativeSrc":"5739:6:11","nodeType":"YulIdentifier","src":"5739:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256","nativeSrc":"5054:765:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5117:9:11","nodeType":"YulTypedName","src":"5117:9:11","type":""},{"name":"dataEnd","nativeSrc":"5128:7:11","nodeType":"YulTypedName","src":"5128:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5140:6:11","nodeType":"YulTypedName","src":"5140:6:11","type":""},{"name":"value1","nativeSrc":"5148:6:11","nodeType":"YulTypedName","src":"5148:6:11","type":""},{"name":"value2","nativeSrc":"5156:6:11","nodeType":"YulTypedName","src":"5156:6:11","type":""},{"name":"value3","nativeSrc":"5164:6:11","nodeType":"YulTypedName","src":"5164:6:11","type":""}],"src":"5054:765:11"},{"body":{"nativeSrc":"5908:391:11","nodeType":"YulBlock","src":"5908:391:11","statements":[{"body":{"nativeSrc":"5954:83:11","nodeType":"YulBlock","src":"5954:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5956:77:11","nodeType":"YulIdentifier","src":"5956:77:11"},"nativeSrc":"5956:79:11","nodeType":"YulFunctionCall","src":"5956:79:11"},"nativeSrc":"5956:79:11","nodeType":"YulExpressionStatement","src":"5956:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5929:7:11","nodeType":"YulIdentifier","src":"5929:7:11"},{"name":"headStart","nativeSrc":"5938:9:11","nodeType":"YulIdentifier","src":"5938:9:11"}],"functionName":{"name":"sub","nativeSrc":"5925:3:11","nodeType":"YulIdentifier","src":"5925:3:11"},"nativeSrc":"5925:23:11","nodeType":"YulFunctionCall","src":"5925:23:11"},{"kind":"number","nativeSrc":"5950:2:11","nodeType":"YulLiteral","src":"5950:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5921:3:11","nodeType":"YulIdentifier","src":"5921:3:11"},"nativeSrc":"5921:32:11","nodeType":"YulFunctionCall","src":"5921:32:11"},"nativeSrc":"5918:119:11","nodeType":"YulIf","src":"5918:119:11"},{"nativeSrc":"6047:117:11","nodeType":"YulBlock","src":"6047:117:11","statements":[{"nativeSrc":"6062:15:11","nodeType":"YulVariableDeclaration","src":"6062:15:11","value":{"kind":"number","nativeSrc":"6076:1:11","nodeType":"YulLiteral","src":"6076:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6066:6:11","nodeType":"YulTypedName","src":"6066:6:11","type":""}]},{"nativeSrc":"6091:63:11","nodeType":"YulAssignment","src":"6091:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6126:9:11","nodeType":"YulIdentifier","src":"6126:9:11"},{"name":"offset","nativeSrc":"6137:6:11","nodeType":"YulIdentifier","src":"6137:6:11"}],"functionName":{"name":"add","nativeSrc":"6122:3:11","nodeType":"YulIdentifier","src":"6122:3:11"},"nativeSrc":"6122:22:11","nodeType":"YulFunctionCall","src":"6122:22:11"},{"name":"dataEnd","nativeSrc":"6146:7:11","nodeType":"YulIdentifier","src":"6146:7:11"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6101:20:11","nodeType":"YulIdentifier","src":"6101:20:11"},"nativeSrc":"6101:53:11","nodeType":"YulFunctionCall","src":"6101:53:11"},"variableNames":[{"name":"value0","nativeSrc":"6091:6:11","nodeType":"YulIdentifier","src":"6091:6:11"}]}]},{"nativeSrc":"6174:118:11","nodeType":"YulBlock","src":"6174:118:11","statements":[{"nativeSrc":"6189:16:11","nodeType":"YulVariableDeclaration","src":"6189:16:11","value":{"kind":"number","nativeSrc":"6203:2:11","nodeType":"YulLiteral","src":"6203:2:11","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6193:6:11","nodeType":"YulTypedName","src":"6193:6:11","type":""}]},{"nativeSrc":"6219:63:11","nodeType":"YulAssignment","src":"6219:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6254:9:11","nodeType":"YulIdentifier","src":"6254:9:11"},{"name":"offset","nativeSrc":"6265:6:11","nodeType":"YulIdentifier","src":"6265:6:11"}],"functionName":{"name":"add","nativeSrc":"6250:3:11","nodeType":"YulIdentifier","src":"6250:3:11"},"nativeSrc":"6250:22:11","nodeType":"YulFunctionCall","src":"6250:22:11"},{"name":"dataEnd","nativeSrc":"6274:7:11","nodeType":"YulIdentifier","src":"6274:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6229:20:11","nodeType":"YulIdentifier","src":"6229:20:11"},"nativeSrc":"6229:53:11","nodeType":"YulFunctionCall","src":"6229:53:11"},"variableNames":[{"name":"value1","nativeSrc":"6219:6:11","nodeType":"YulIdentifier","src":"6219:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"5825:474:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5870:9:11","nodeType":"YulTypedName","src":"5870:9:11","type":""},{"name":"dataEnd","nativeSrc":"5881:7:11","nodeType":"YulTypedName","src":"5881:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5893:6:11","nodeType":"YulTypedName","src":"5893:6:11","type":""},{"name":"value1","nativeSrc":"5901:6:11","nodeType":"YulTypedName","src":"5901:6:11","type":""}],"src":"5825:474:11"},{"body":{"nativeSrc":"6394:28:11","nodeType":"YulBlock","src":"6394:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6411:1:11","nodeType":"YulLiteral","src":"6411:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"6414:1:11","nodeType":"YulLiteral","src":"6414:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6404:6:11","nodeType":"YulIdentifier","src":"6404:6:11"},"nativeSrc":"6404:12:11","nodeType":"YulFunctionCall","src":"6404:12:11"},"nativeSrc":"6404:12:11","nodeType":"YulExpressionStatement","src":"6404:12:11"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"6305:117:11","nodeType":"YulFunctionDefinition","src":"6305:117:11"},{"body":{"nativeSrc":"6558:153:11","nodeType":"YulBlock","src":"6558:153:11","statements":[{"body":{"nativeSrc":"6598:83:11","nodeType":"YulBlock","src":"6598:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"6600:77:11","nodeType":"YulIdentifier","src":"6600:77:11"},"nativeSrc":"6600:79:11","nodeType":"YulFunctionCall","src":"6600:79:11"},"nativeSrc":"6600:79:11","nodeType":"YulExpressionStatement","src":"6600:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"6579:3:11","nodeType":"YulIdentifier","src":"6579:3:11"},{"name":"offset","nativeSrc":"6584:6:11","nodeType":"YulIdentifier","src":"6584:6:11"}],"functionName":{"name":"sub","nativeSrc":"6575:3:11","nodeType":"YulIdentifier","src":"6575:3:11"},"nativeSrc":"6575:16:11","nodeType":"YulFunctionCall","src":"6575:16:11"},{"kind":"number","nativeSrc":"6593:3:11","nodeType":"YulLiteral","src":"6593:3:11","type":"","value":"256"}],"functionName":{"name":"slt","nativeSrc":"6571:3:11","nodeType":"YulIdentifier","src":"6571:3:11"},"nativeSrc":"6571:26:11","nodeType":"YulFunctionCall","src":"6571:26:11"},"nativeSrc":"6568:113:11","nodeType":"YulIf","src":"6568:113:11"},{"nativeSrc":"6690:15:11","nodeType":"YulAssignment","src":"6690:15:11","value":{"name":"offset","nativeSrc":"6699:6:11","nodeType":"YulIdentifier","src":"6699:6:11"},"variableNames":[{"name":"value","nativeSrc":"6690:5:11","nodeType":"YulIdentifier","src":"6690:5:11"}]}]},"name":"abi_decode_t_struct$_InitiateSwapMeta_$1379_calldata_ptr","nativeSrc":"6470:241:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6536:6:11","nodeType":"YulTypedName","src":"6536:6:11","type":""},{"name":"end","nativeSrc":"6544:3:11","nodeType":"YulTypedName","src":"6544:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6552:5:11","nodeType":"YulTypedName","src":"6552:5:11","type":""}],"src":"6470:241:11"},{"body":{"nativeSrc":"6806:28:11","nodeType":"YulBlock","src":"6806:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6823:1:11","nodeType":"YulLiteral","src":"6823:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"6826:1:11","nodeType":"YulLiteral","src":"6826:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6816:6:11","nodeType":"YulIdentifier","src":"6816:6:11"},"nativeSrc":"6816:12:11","nodeType":"YulFunctionCall","src":"6816:12:11"},"nativeSrc":"6816:12:11","nodeType":"YulExpressionStatement","src":"6816:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6717:117:11","nodeType":"YulFunctionDefinition","src":"6717:117:11"},{"body":{"nativeSrc":"6929:28:11","nodeType":"YulBlock","src":"6929:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6946:1:11","nodeType":"YulLiteral","src":"6946:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"6949:1:11","nodeType":"YulLiteral","src":"6949:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6939:6:11","nodeType":"YulIdentifier","src":"6939:6:11"},"nativeSrc":"6939:12:11","nodeType":"YulFunctionCall","src":"6939:12:11"},"nativeSrc":"6939:12:11","nodeType":"YulExpressionStatement","src":"6939:12:11"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6840:117:11","nodeType":"YulFunctionDefinition","src":"6840:117:11"},{"body":{"nativeSrc":"7052:28:11","nodeType":"YulBlock","src":"7052:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7069:1:11","nodeType":"YulLiteral","src":"7069:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"7072:1:11","nodeType":"YulLiteral","src":"7072:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7062:6:11","nodeType":"YulIdentifier","src":"7062:6:11"},"nativeSrc":"7062:12:11","nodeType":"YulFunctionCall","src":"7062:12:11"},"nativeSrc":"7062:12:11","nodeType":"YulExpressionStatement","src":"7062:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6963:117:11","nodeType":"YulFunctionDefinition","src":"6963:117:11"},{"body":{"nativeSrc":"7173:478:11","nodeType":"YulBlock","src":"7173:478:11","statements":[{"body":{"nativeSrc":"7222:83:11","nodeType":"YulBlock","src":"7222:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7224:77:11","nodeType":"YulIdentifier","src":"7224:77:11"},"nativeSrc":"7224:79:11","nodeType":"YulFunctionCall","src":"7224:79:11"},"nativeSrc":"7224:79:11","nodeType":"YulExpressionStatement","src":"7224:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7201:6:11","nodeType":"YulIdentifier","src":"7201:6:11"},{"kind":"number","nativeSrc":"7209:4:11","nodeType":"YulLiteral","src":"7209:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7197:3:11","nodeType":"YulIdentifier","src":"7197:3:11"},"nativeSrc":"7197:17:11","nodeType":"YulFunctionCall","src":"7197:17:11"},{"name":"end","nativeSrc":"7216:3:11","nodeType":"YulIdentifier","src":"7216:3:11"}],"functionName":{"name":"slt","nativeSrc":"7193:3:11","nodeType":"YulIdentifier","src":"7193:3:11"},"nativeSrc":"7193:27:11","nodeType":"YulFunctionCall","src":"7193:27:11"}],"functionName":{"name":"iszero","nativeSrc":"7186:6:11","nodeType":"YulIdentifier","src":"7186:6:11"},"nativeSrc":"7186:35:11","nodeType":"YulFunctionCall","src":"7186:35:11"},"nativeSrc":"7183:122:11","nodeType":"YulIf","src":"7183:122:11"},{"nativeSrc":"7314:30:11","nodeType":"YulAssignment","src":"7314:30:11","value":{"arguments":[{"name":"offset","nativeSrc":"7337:6:11","nodeType":"YulIdentifier","src":"7337:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"7324:12:11","nodeType":"YulIdentifier","src":"7324:12:11"},"nativeSrc":"7324:20:11","nodeType":"YulFunctionCall","src":"7324:20:11"},"variableNames":[{"name":"length","nativeSrc":"7314:6:11","nodeType":"YulIdentifier","src":"7314:6:11"}]},{"body":{"nativeSrc":"7387:83:11","nodeType":"YulBlock","src":"7387:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"7389:77:11","nodeType":"YulIdentifier","src":"7389:77:11"},"nativeSrc":"7389:79:11","nodeType":"YulFunctionCall","src":"7389:79:11"},"nativeSrc":"7389:79:11","nodeType":"YulExpressionStatement","src":"7389:79:11"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7359:6:11","nodeType":"YulIdentifier","src":"7359:6:11"},{"kind":"number","nativeSrc":"7367:18:11","nodeType":"YulLiteral","src":"7367:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7356:2:11","nodeType":"YulIdentifier","src":"7356:2:11"},"nativeSrc":"7356:30:11","nodeType":"YulFunctionCall","src":"7356:30:11"},"nativeSrc":"7353:117:11","nodeType":"YulIf","src":"7353:117:11"},{"nativeSrc":"7479:29:11","nodeType":"YulAssignment","src":"7479:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"7495:6:11","nodeType":"YulIdentifier","src":"7495:6:11"},{"kind":"number","nativeSrc":"7503:4:11","nodeType":"YulLiteral","src":"7503:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7491:3:11","nodeType":"YulIdentifier","src":"7491:3:11"},"nativeSrc":"7491:17:11","nodeType":"YulFunctionCall","src":"7491:17:11"},"variableNames":[{"name":"arrayPos","nativeSrc":"7479:8:11","nodeType":"YulIdentifier","src":"7479:8:11"}]},{"body":{"nativeSrc":"7562:83:11","nodeType":"YulBlock","src":"7562:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7564:77:11","nodeType":"YulIdentifier","src":"7564:77:11"},"nativeSrc":"7564:79:11","nodeType":"YulFunctionCall","src":"7564:79:11"},"nativeSrc":"7564:79:11","nodeType":"YulExpressionStatement","src":"7564:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"7527:8:11","nodeType":"YulIdentifier","src":"7527:8:11"},{"arguments":[{"name":"length","nativeSrc":"7541:6:11","nodeType":"YulIdentifier","src":"7541:6:11"},{"kind":"number","nativeSrc":"7549:4:11","nodeType":"YulLiteral","src":"7549:4:11","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"7537:3:11","nodeType":"YulIdentifier","src":"7537:3:11"},"nativeSrc":"7537:17:11","nodeType":"YulFunctionCall","src":"7537:17:11"}],"functionName":{"name":"add","nativeSrc":"7523:3:11","nodeType":"YulIdentifier","src":"7523:3:11"},"nativeSrc":"7523:32:11","nodeType":"YulFunctionCall","src":"7523:32:11"},{"name":"end","nativeSrc":"7557:3:11","nodeType":"YulIdentifier","src":"7557:3:11"}],"functionName":{"name":"gt","nativeSrc":"7520:2:11","nodeType":"YulIdentifier","src":"7520:2:11"},"nativeSrc":"7520:41:11","nodeType":"YulFunctionCall","src":"7520:41:11"},"nativeSrc":"7517:128:11","nodeType":"YulIf","src":"7517:128:11"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"7099:552:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7140:6:11","nodeType":"YulTypedName","src":"7140:6:11","type":""},{"name":"end","nativeSrc":"7148:3:11","nodeType":"YulTypedName","src":"7148:3:11","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"7156:8:11","nodeType":"YulTypedName","src":"7156:8:11","type":""},{"name":"length","nativeSrc":"7166:6:11","nodeType":"YulTypedName","src":"7166:6:11","type":""}],"src":"7099:552:11"},{"body":{"nativeSrc":"7795:608:11","nodeType":"YulBlock","src":"7795:608:11","statements":[{"body":{"nativeSrc":"7842:83:11","nodeType":"YulBlock","src":"7842:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7844:77:11","nodeType":"YulIdentifier","src":"7844:77:11"},"nativeSrc":"7844:79:11","nodeType":"YulFunctionCall","src":"7844:79:11"},"nativeSrc":"7844:79:11","nodeType":"YulExpressionStatement","src":"7844:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7816:7:11","nodeType":"YulIdentifier","src":"7816:7:11"},{"name":"headStart","nativeSrc":"7825:9:11","nodeType":"YulIdentifier","src":"7825:9:11"}],"functionName":{"name":"sub","nativeSrc":"7812:3:11","nodeType":"YulIdentifier","src":"7812:3:11"},"nativeSrc":"7812:23:11","nodeType":"YulFunctionCall","src":"7812:23:11"},{"kind":"number","nativeSrc":"7837:3:11","nodeType":"YulLiteral","src":"7837:3:11","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"7808:3:11","nodeType":"YulIdentifier","src":"7808:3:11"},"nativeSrc":"7808:33:11","nodeType":"YulFunctionCall","src":"7808:33:11"},"nativeSrc":"7805:120:11","nodeType":"YulIf","src":"7805:120:11"},{"nativeSrc":"7935:153:11","nodeType":"YulBlock","src":"7935:153:11","statements":[{"nativeSrc":"7950:15:11","nodeType":"YulVariableDeclaration","src":"7950:15:11","value":{"kind":"number","nativeSrc":"7964:1:11","nodeType":"YulLiteral","src":"7964:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7954:6:11","nodeType":"YulTypedName","src":"7954:6:11","type":""}]},{"nativeSrc":"7979:99:11","nodeType":"YulAssignment","src":"7979:99:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8050:9:11","nodeType":"YulIdentifier","src":"8050:9:11"},{"name":"offset","nativeSrc":"8061:6:11","nodeType":"YulIdentifier","src":"8061:6:11"}],"functionName":{"name":"add","nativeSrc":"8046:3:11","nodeType":"YulIdentifier","src":"8046:3:11"},"nativeSrc":"8046:22:11","nodeType":"YulFunctionCall","src":"8046:22:11"},{"name":"dataEnd","nativeSrc":"8070:7:11","nodeType":"YulIdentifier","src":"8070:7:11"}],"functionName":{"name":"abi_decode_t_struct$_InitiateSwapMeta_$1379_calldata_ptr","nativeSrc":"7989:56:11","nodeType":"YulIdentifier","src":"7989:56:11"},"nativeSrc":"7989:89:11","nodeType":"YulFunctionCall","src":"7989:89:11"},"variableNames":[{"name":"value0","nativeSrc":"7979:6:11","nodeType":"YulIdentifier","src":"7979:6:11"}]}]},{"nativeSrc":"8098:298:11","nodeType":"YulBlock","src":"8098:298:11","statements":[{"nativeSrc":"8113:47:11","nodeType":"YulVariableDeclaration","src":"8113:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8144:9:11","nodeType":"YulIdentifier","src":"8144:9:11"},{"kind":"number","nativeSrc":"8155:3:11","nodeType":"YulLiteral","src":"8155:3:11","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"8140:3:11","nodeType":"YulIdentifier","src":"8140:3:11"},"nativeSrc":"8140:19:11","nodeType":"YulFunctionCall","src":"8140:19:11"}],"functionName":{"name":"calldataload","nativeSrc":"8127:12:11","nodeType":"YulIdentifier","src":"8127:12:11"},"nativeSrc":"8127:33:11","nodeType":"YulFunctionCall","src":"8127:33:11"},"variables":[{"name":"offset","nativeSrc":"8117:6:11","nodeType":"YulTypedName","src":"8117:6:11","type":""}]},{"body":{"nativeSrc":"8207:83:11","nodeType":"YulBlock","src":"8207:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8209:77:11","nodeType":"YulIdentifier","src":"8209:77:11"},"nativeSrc":"8209:79:11","nodeType":"YulFunctionCall","src":"8209:79:11"},"nativeSrc":"8209:79:11","nodeType":"YulExpressionStatement","src":"8209:79:11"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8179:6:11","nodeType":"YulIdentifier","src":"8179:6:11"},{"kind":"number","nativeSrc":"8187:18:11","nodeType":"YulLiteral","src":"8187:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8176:2:11","nodeType":"YulIdentifier","src":"8176:2:11"},"nativeSrc":"8176:30:11","nodeType":"YulFunctionCall","src":"8176:30:11"},"nativeSrc":"8173:117:11","nodeType":"YulIf","src":"8173:117:11"},{"nativeSrc":"8304:82:11","nodeType":"YulAssignment","src":"8304:82:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8358:9:11","nodeType":"YulIdentifier","src":"8358:9:11"},{"name":"offset","nativeSrc":"8369:6:11","nodeType":"YulIdentifier","src":"8369:6:11"}],"functionName":{"name":"add","nativeSrc":"8354:3:11","nodeType":"YulIdentifier","src":"8354:3:11"},"nativeSrc":"8354:22:11","nodeType":"YulFunctionCall","src":"8354:22:11"},{"name":"dataEnd","nativeSrc":"8378:7:11","nodeType":"YulIdentifier","src":"8378:7:11"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"8322:31:11","nodeType":"YulIdentifier","src":"8322:31:11"},"nativeSrc":"8322:64:11","nodeType":"YulFunctionCall","src":"8322:64:11"},"variableNames":[{"name":"value1","nativeSrc":"8304:6:11","nodeType":"YulIdentifier","src":"8304:6:11"},{"name":"value2","nativeSrc":"8312:6:11","nodeType":"YulIdentifier","src":"8312:6:11"}]}]}]},"name":"abi_decode_tuple_t_struct$_InitiateSwapMeta_$1379_calldata_ptrt_bytes_calldata_ptr","nativeSrc":"7657:746:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7749:9:11","nodeType":"YulTypedName","src":"7749:9:11","type":""},{"name":"dataEnd","nativeSrc":"7760:7:11","nodeType":"YulTypedName","src":"7760:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7772:6:11","nodeType":"YulTypedName","src":"7772:6:11","type":""},{"name":"value1","nativeSrc":"7780:6:11","nodeType":"YulTypedName","src":"7780:6:11","type":""},{"name":"value2","nativeSrc":"7788:6:11","nodeType":"YulTypedName","src":"7788:6:11","type":""}],"src":"7657:746:11"},{"body":{"nativeSrc":"8543:777:11","nodeType":"YulBlock","src":"8543:777:11","statements":[{"body":{"nativeSrc":"8590:83:11","nodeType":"YulBlock","src":"8590:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8592:77:11","nodeType":"YulIdentifier","src":"8592:77:11"},"nativeSrc":"8592:79:11","nodeType":"YulFunctionCall","src":"8592:79:11"},"nativeSrc":"8592:79:11","nodeType":"YulExpressionStatement","src":"8592:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8564:7:11","nodeType":"YulIdentifier","src":"8564:7:11"},{"name":"headStart","nativeSrc":"8573:9:11","nodeType":"YulIdentifier","src":"8573:9:11"}],"functionName":{"name":"sub","nativeSrc":"8560:3:11","nodeType":"YulIdentifier","src":"8560:3:11"},"nativeSrc":"8560:23:11","nodeType":"YulFunctionCall","src":"8560:23:11"},{"kind":"number","nativeSrc":"8585:3:11","nodeType":"YulLiteral","src":"8585:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"8556:3:11","nodeType":"YulIdentifier","src":"8556:3:11"},"nativeSrc":"8556:33:11","nodeType":"YulFunctionCall","src":"8556:33:11"},"nativeSrc":"8553:120:11","nodeType":"YulIf","src":"8553:120:11"},{"nativeSrc":"8683:117:11","nodeType":"YulBlock","src":"8683:117:11","statements":[{"nativeSrc":"8698:15:11","nodeType":"YulVariableDeclaration","src":"8698:15:11","value":{"kind":"number","nativeSrc":"8712:1:11","nodeType":"YulLiteral","src":"8712:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8702:6:11","nodeType":"YulTypedName","src":"8702:6:11","type":""}]},{"nativeSrc":"8727:63:11","nodeType":"YulAssignment","src":"8727:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8762:9:11","nodeType":"YulIdentifier","src":"8762:9:11"},{"name":"offset","nativeSrc":"8773:6:11","nodeType":"YulIdentifier","src":"8773:6:11"}],"functionName":{"name":"add","nativeSrc":"8758:3:11","nodeType":"YulIdentifier","src":"8758:3:11"},"nativeSrc":"8758:22:11","nodeType":"YulFunctionCall","src":"8758:22:11"},{"name":"dataEnd","nativeSrc":"8782:7:11","nodeType":"YulIdentifier","src":"8782:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"8737:20:11","nodeType":"YulIdentifier","src":"8737:20:11"},"nativeSrc":"8737:53:11","nodeType":"YulFunctionCall","src":"8737:53:11"},"variableNames":[{"name":"value0","nativeSrc":"8727:6:11","nodeType":"YulIdentifier","src":"8727:6:11"}]}]},{"nativeSrc":"8810:118:11","nodeType":"YulBlock","src":"8810:118:11","statements":[{"nativeSrc":"8825:16:11","nodeType":"YulVariableDeclaration","src":"8825:16:11","value":{"kind":"number","nativeSrc":"8839:2:11","nodeType":"YulLiteral","src":"8839:2:11","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8829:6:11","nodeType":"YulTypedName","src":"8829:6:11","type":""}]},{"nativeSrc":"8855:63:11","nodeType":"YulAssignment","src":"8855:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8890:9:11","nodeType":"YulIdentifier","src":"8890:9:11"},{"name":"offset","nativeSrc":"8901:6:11","nodeType":"YulIdentifier","src":"8901:6:11"}],"functionName":{"name":"add","nativeSrc":"8886:3:11","nodeType":"YulIdentifier","src":"8886:3:11"},"nativeSrc":"8886:22:11","nodeType":"YulFunctionCall","src":"8886:22:11"},{"name":"dataEnd","nativeSrc":"8910:7:11","nodeType":"YulIdentifier","src":"8910:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8865:20:11","nodeType":"YulIdentifier","src":"8865:20:11"},"nativeSrc":"8865:53:11","nodeType":"YulFunctionCall","src":"8865:53:11"},"variableNames":[{"name":"value1","nativeSrc":"8855:6:11","nodeType":"YulIdentifier","src":"8855:6:11"}]}]},{"nativeSrc":"8938:118:11","nodeType":"YulBlock","src":"8938:118:11","statements":[{"nativeSrc":"8953:16:11","nodeType":"YulVariableDeclaration","src":"8953:16:11","value":{"kind":"number","nativeSrc":"8967:2:11","nodeType":"YulLiteral","src":"8967:2:11","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8957:6:11","nodeType":"YulTypedName","src":"8957:6:11","type":""}]},{"nativeSrc":"8983:63:11","nodeType":"YulAssignment","src":"8983:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9018:9:11","nodeType":"YulIdentifier","src":"9018:9:11"},{"name":"offset","nativeSrc":"9029:6:11","nodeType":"YulIdentifier","src":"9029:6:11"}],"functionName":{"name":"add","nativeSrc":"9014:3:11","nodeType":"YulIdentifier","src":"9014:3:11"},"nativeSrc":"9014:22:11","nodeType":"YulFunctionCall","src":"9014:22:11"},{"name":"dataEnd","nativeSrc":"9038:7:11","nodeType":"YulIdentifier","src":"9038:7:11"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8993:20:11","nodeType":"YulIdentifier","src":"8993:20:11"},"nativeSrc":"8993:53:11","nodeType":"YulFunctionCall","src":"8993:53:11"},"variableNames":[{"name":"value2","nativeSrc":"8983:6:11","nodeType":"YulIdentifier","src":"8983:6:11"}]}]},{"nativeSrc":"9066:118:11","nodeType":"YulBlock","src":"9066:118:11","statements":[{"nativeSrc":"9081:16:11","nodeType":"YulVariableDeclaration","src":"9081:16:11","value":{"kind":"number","nativeSrc":"9095:2:11","nodeType":"YulLiteral","src":"9095:2:11","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"9085:6:11","nodeType":"YulTypedName","src":"9085:6:11","type":""}]},{"nativeSrc":"9111:63:11","nodeType":"YulAssignment","src":"9111:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9146:9:11","nodeType":"YulIdentifier","src":"9146:9:11"},{"name":"offset","nativeSrc":"9157:6:11","nodeType":"YulIdentifier","src":"9157:6:11"}],"functionName":{"name":"add","nativeSrc":"9142:3:11","nodeType":"YulIdentifier","src":"9142:3:11"},"nativeSrc":"9142:22:11","nodeType":"YulFunctionCall","src":"9142:22:11"},{"name":"dataEnd","nativeSrc":"9166:7:11","nodeType":"YulIdentifier","src":"9166:7:11"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9121:20:11","nodeType":"YulIdentifier","src":"9121:20:11"},"nativeSrc":"9121:53:11","nodeType":"YulFunctionCall","src":"9121:53:11"},"variableNames":[{"name":"value3","nativeSrc":"9111:6:11","nodeType":"YulIdentifier","src":"9111:6:11"}]}]},{"nativeSrc":"9194:119:11","nodeType":"YulBlock","src":"9194:119:11","statements":[{"nativeSrc":"9209:17:11","nodeType":"YulVariableDeclaration","src":"9209:17:11","value":{"kind":"number","nativeSrc":"9223:3:11","nodeType":"YulLiteral","src":"9223:3:11","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"9213:6:11","nodeType":"YulTypedName","src":"9213:6:11","type":""}]},{"nativeSrc":"9240:63:11","nodeType":"YulAssignment","src":"9240:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9275:9:11","nodeType":"YulIdentifier","src":"9275:9:11"},{"name":"offset","nativeSrc":"9286:6:11","nodeType":"YulIdentifier","src":"9286:6:11"}],"functionName":{"name":"add","nativeSrc":"9271:3:11","nodeType":"YulIdentifier","src":"9271:3:11"},"nativeSrc":"9271:22:11","nodeType":"YulFunctionCall","src":"9271:22:11"},{"name":"dataEnd","nativeSrc":"9295:7:11","nodeType":"YulIdentifier","src":"9295:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9250:20:11","nodeType":"YulIdentifier","src":"9250:20:11"},"nativeSrc":"9250:53:11","nodeType":"YulFunctionCall","src":"9250:53:11"},"variableNames":[{"name":"value4","nativeSrc":"9240:6:11","nodeType":"YulIdentifier","src":"9240:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256","nativeSrc":"8409:911:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8481:9:11","nodeType":"YulTypedName","src":"8481:9:11","type":""},{"name":"dataEnd","nativeSrc":"8492:7:11","nodeType":"YulTypedName","src":"8492:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8504:6:11","nodeType":"YulTypedName","src":"8504:6:11","type":""},{"name":"value1","nativeSrc":"8512:6:11","nodeType":"YulTypedName","src":"8512:6:11","type":""},{"name":"value2","nativeSrc":"8520:6:11","nodeType":"YulTypedName","src":"8520:6:11","type":""},{"name":"value3","nativeSrc":"8528:6:11","nodeType":"YulTypedName","src":"8528:6:11","type":""},{"name":"value4","nativeSrc":"8536:6:11","nodeType":"YulTypedName","src":"8536:6:11","type":""}],"src":"8409:911:11"},{"body":{"nativeSrc":"9608:691:11","nodeType":"YulBlock","src":"9608:691:11","statements":[{"nativeSrc":"9618:27:11","nodeType":"YulAssignment","src":"9618:27:11","value":{"arguments":[{"name":"headStart","nativeSrc":"9630:9:11","nodeType":"YulIdentifier","src":"9630:9:11"},{"kind":"number","nativeSrc":"9641:3:11","nodeType":"YulLiteral","src":"9641:3:11","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"9626:3:11","nodeType":"YulIdentifier","src":"9626:3:11"},"nativeSrc":"9626:19:11","nodeType":"YulFunctionCall","src":"9626:19:11"},"variableNames":[{"name":"tail","nativeSrc":"9618:4:11","nodeType":"YulIdentifier","src":"9618:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9699:6:11","nodeType":"YulIdentifier","src":"9699:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"9712:9:11","nodeType":"YulIdentifier","src":"9712:9:11"},{"kind":"number","nativeSrc":"9723:1:11","nodeType":"YulLiteral","src":"9723:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9708:3:11","nodeType":"YulIdentifier","src":"9708:3:11"},"nativeSrc":"9708:17:11","nodeType":"YulFunctionCall","src":"9708:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9655:43:11","nodeType":"YulIdentifier","src":"9655:43:11"},"nativeSrc":"9655:71:11","nodeType":"YulFunctionCall","src":"9655:71:11"},"nativeSrc":"9655:71:11","nodeType":"YulExpressionStatement","src":"9655:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9780:6:11","nodeType":"YulIdentifier","src":"9780:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"9793:9:11","nodeType":"YulIdentifier","src":"9793:9:11"},{"kind":"number","nativeSrc":"9804:2:11","nodeType":"YulLiteral","src":"9804:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9789:3:11","nodeType":"YulIdentifier","src":"9789:3:11"},"nativeSrc":"9789:18:11","nodeType":"YulFunctionCall","src":"9789:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9736:43:11","nodeType":"YulIdentifier","src":"9736:43:11"},"nativeSrc":"9736:72:11","nodeType":"YulFunctionCall","src":"9736:72:11"},"nativeSrc":"9736:72:11","nodeType":"YulExpressionStatement","src":"9736:72:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9862:6:11","nodeType":"YulIdentifier","src":"9862:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"9875:9:11","nodeType":"YulIdentifier","src":"9875:9:11"},{"kind":"number","nativeSrc":"9886:2:11","nodeType":"YulLiteral","src":"9886:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9871:3:11","nodeType":"YulIdentifier","src":"9871:3:11"},"nativeSrc":"9871:18:11","nodeType":"YulFunctionCall","src":"9871:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9818:43:11","nodeType":"YulIdentifier","src":"9818:43:11"},"nativeSrc":"9818:72:11","nodeType":"YulFunctionCall","src":"9818:72:11"},"nativeSrc":"9818:72:11","nodeType":"YulExpressionStatement","src":"9818:72:11"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9944:6:11","nodeType":"YulIdentifier","src":"9944:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"9957:9:11","nodeType":"YulIdentifier","src":"9957:9:11"},{"kind":"number","nativeSrc":"9968:2:11","nodeType":"YulLiteral","src":"9968:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9953:3:11","nodeType":"YulIdentifier","src":"9953:3:11"},"nativeSrc":"9953:18:11","nodeType":"YulFunctionCall","src":"9953:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9900:43:11","nodeType":"YulIdentifier","src":"9900:43:11"},"nativeSrc":"9900:72:11","nodeType":"YulFunctionCall","src":"9900:72:11"},"nativeSrc":"9900:72:11","nodeType":"YulExpressionStatement","src":"9900:72:11"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"10026:6:11","nodeType":"YulIdentifier","src":"10026:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"10039:9:11","nodeType":"YulIdentifier","src":"10039:9:11"},{"kind":"number","nativeSrc":"10050:3:11","nodeType":"YulLiteral","src":"10050:3:11","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10035:3:11","nodeType":"YulIdentifier","src":"10035:3:11"},"nativeSrc":"10035:19:11","nodeType":"YulFunctionCall","src":"10035:19:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9982:43:11","nodeType":"YulIdentifier","src":"9982:43:11"},"nativeSrc":"9982:73:11","nodeType":"YulFunctionCall","src":"9982:73:11"},"nativeSrc":"9982:73:11","nodeType":"YulExpressionStatement","src":"9982:73:11"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"10109:6:11","nodeType":"YulIdentifier","src":"10109:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"10122:9:11","nodeType":"YulIdentifier","src":"10122:9:11"},{"kind":"number","nativeSrc":"10133:3:11","nodeType":"YulLiteral","src":"10133:3:11","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10118:3:11","nodeType":"YulIdentifier","src":"10118:3:11"},"nativeSrc":"10118:19:11","nodeType":"YulFunctionCall","src":"10118:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10065:43:11","nodeType":"YulIdentifier","src":"10065:43:11"},"nativeSrc":"10065:73:11","nodeType":"YulFunctionCall","src":"10065:73:11"},"nativeSrc":"10065:73:11","nodeType":"YulExpressionStatement","src":"10065:73:11"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"10186:6:11","nodeType":"YulIdentifier","src":"10186:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"10199:9:11","nodeType":"YulIdentifier","src":"10199:9:11"},{"kind":"number","nativeSrc":"10210:3:11","nodeType":"YulLiteral","src":"10210:3:11","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"10195:3:11","nodeType":"YulIdentifier","src":"10195:3:11"},"nativeSrc":"10195:19:11","nodeType":"YulFunctionCall","src":"10195:19:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"10148:37:11","nodeType":"YulIdentifier","src":"10148:37:11"},"nativeSrc":"10148:67:11","nodeType":"YulFunctionCall","src":"10148:67:11"},"nativeSrc":"10148:67:11","nodeType":"YulExpressionStatement","src":"10148:67:11"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"10263:6:11","nodeType":"YulIdentifier","src":"10263:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"10276:9:11","nodeType":"YulIdentifier","src":"10276:9:11"},{"kind":"number","nativeSrc":"10287:3:11","nodeType":"YulLiteral","src":"10287:3:11","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"10272:3:11","nodeType":"YulIdentifier","src":"10272:3:11"},"nativeSrc":"10272:19:11","nodeType":"YulFunctionCall","src":"10272:19:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"10225:37:11","nodeType":"YulIdentifier","src":"10225:37:11"},"nativeSrc":"10225:67:11","nodeType":"YulFunctionCall","src":"10225:67:11"},"nativeSrc":"10225:67:11","nodeType":"YulExpressionStatement","src":"10225:67:11"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed","nativeSrc":"9326:973:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9524:9:11","nodeType":"YulTypedName","src":"9524:9:11","type":""},{"name":"value7","nativeSrc":"9536:6:11","nodeType":"YulTypedName","src":"9536:6:11","type":""},{"name":"value6","nativeSrc":"9544:6:11","nodeType":"YulTypedName","src":"9544:6:11","type":""},{"name":"value5","nativeSrc":"9552:6:11","nodeType":"YulTypedName","src":"9552:6:11","type":""},{"name":"value4","nativeSrc":"9560:6:11","nodeType":"YulTypedName","src":"9560:6:11","type":""},{"name":"value3","nativeSrc":"9568:6:11","nodeType":"YulTypedName","src":"9568:6:11","type":""},{"name":"value2","nativeSrc":"9576:6:11","nodeType":"YulTypedName","src":"9576:6:11","type":""},{"name":"value1","nativeSrc":"9584:6:11","nodeType":"YulTypedName","src":"9584:6:11","type":""},{"name":"value0","nativeSrc":"9592:6:11","nodeType":"YulTypedName","src":"9592:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9603:4:11","nodeType":"YulTypedName","src":"9603:4:11","type":""}],"src":"9326:973:11"},{"body":{"nativeSrc":"10352:32:11","nodeType":"YulBlock","src":"10352:32:11","statements":[{"nativeSrc":"10362:16:11","nodeType":"YulAssignment","src":"10362:16:11","value":{"name":"value","nativeSrc":"10373:5:11","nodeType":"YulIdentifier","src":"10373:5:11"},"variableNames":[{"name":"aligned","nativeSrc":"10362:7:11","nodeType":"YulIdentifier","src":"10362:7:11"}]}]},"name":"leftAlign_t_bytes32","nativeSrc":"10305:79:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10334:5:11","nodeType":"YulTypedName","src":"10334:5:11","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"10344:7:11","nodeType":"YulTypedName","src":"10344:7:11","type":""}],"src":"10305:79:11"},{"body":{"nativeSrc":"10473:74:11","nodeType":"YulBlock","src":"10473:74:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10490:3:11","nodeType":"YulIdentifier","src":"10490:3:11"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10533:5:11","nodeType":"YulIdentifier","src":"10533:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10515:17:11","nodeType":"YulIdentifier","src":"10515:17:11"},"nativeSrc":"10515:24:11","nodeType":"YulFunctionCall","src":"10515:24:11"}],"functionName":{"name":"leftAlign_t_bytes32","nativeSrc":"10495:19:11","nodeType":"YulIdentifier","src":"10495:19:11"},"nativeSrc":"10495:45:11","nodeType":"YulFunctionCall","src":"10495:45:11"}],"functionName":{"name":"mstore","nativeSrc":"10483:6:11","nodeType":"YulIdentifier","src":"10483:6:11"},"nativeSrc":"10483:58:11","nodeType":"YulFunctionCall","src":"10483:58:11"},"nativeSrc":"10483:58:11","nodeType":"YulExpressionStatement","src":"10483:58:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"10390:157:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10461:5:11","nodeType":"YulTypedName","src":"10461:5:11","type":""},{"name":"pos","nativeSrc":"10468:3:11","nodeType":"YulTypedName","src":"10468:3:11","type":""}],"src":"10390:157:11"},{"body":{"nativeSrc":"10669:140:11","nodeType":"YulBlock","src":"10669:140:11","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"10742:6:11","nodeType":"YulIdentifier","src":"10742:6:11"},{"name":"pos","nativeSrc":"10751:3:11","nodeType":"YulIdentifier","src":"10751:3:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"10680:61:11","nodeType":"YulIdentifier","src":"10680:61:11"},"nativeSrc":"10680:75:11","nodeType":"YulFunctionCall","src":"10680:75:11"},"nativeSrc":"10680:75:11","nodeType":"YulExpressionStatement","src":"10680:75:11"},{"nativeSrc":"10764:19:11","nodeType":"YulAssignment","src":"10764:19:11","value":{"arguments":[{"name":"pos","nativeSrc":"10775:3:11","nodeType":"YulIdentifier","src":"10775:3:11"},{"kind":"number","nativeSrc":"10780:2:11","nodeType":"YulLiteral","src":"10780:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10771:3:11","nodeType":"YulIdentifier","src":"10771:3:11"},"nativeSrc":"10771:12:11","nodeType":"YulFunctionCall","src":"10771:12:11"},"variableNames":[{"name":"pos","nativeSrc":"10764:3:11","nodeType":"YulIdentifier","src":"10764:3:11"}]},{"nativeSrc":"10793:10:11","nodeType":"YulAssignment","src":"10793:10:11","value":{"name":"pos","nativeSrc":"10800:3:11","nodeType":"YulIdentifier","src":"10800:3:11"},"variableNames":[{"name":"end","nativeSrc":"10793:3:11","nodeType":"YulIdentifier","src":"10793:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"10553:256:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10648:3:11","nodeType":"YulTypedName","src":"10648:3:11","type":""},{"name":"value0","nativeSrc":"10654:6:11","nodeType":"YulTypedName","src":"10654:6:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10665:3:11","nodeType":"YulTypedName","src":"10665:3:11","type":""}],"src":"10553:256:11"},{"body":{"nativeSrc":"10928:34:11","nodeType":"YulBlock","src":"10928:34:11","statements":[{"nativeSrc":"10938:18:11","nodeType":"YulAssignment","src":"10938:18:11","value":{"name":"pos","nativeSrc":"10953:3:11","nodeType":"YulIdentifier","src":"10953:3:11"},"variableNames":[{"name":"updated_pos","nativeSrc":"10938:11:11","nodeType":"YulIdentifier","src":"10938:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"10815:147:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10900:3:11","nodeType":"YulTypedName","src":"10900:3:11","type":""},{"name":"length","nativeSrc":"10905:6:11","nodeType":"YulTypedName","src":"10905:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10916:11:11","nodeType":"YulTypedName","src":"10916:11:11","type":""}],"src":"10815:147:11"},{"body":{"nativeSrc":"11074:8:11","nodeType":"YulBlock","src":"11074:8:11","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"10968:114:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11066:6:11","nodeType":"YulTypedName","src":"11066:6:11","type":""}],"src":"10968:114:11"},{"body":{"nativeSrc":"11251:235:11","nodeType":"YulBlock","src":"11251:235:11","statements":[{"nativeSrc":"11261:90:11","nodeType":"YulAssignment","src":"11261:90:11","value":{"arguments":[{"name":"pos","nativeSrc":"11344:3:11","nodeType":"YulIdentifier","src":"11344:3:11"},{"kind":"number","nativeSrc":"11349:1:11","nodeType":"YulLiteral","src":"11349:1:11","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11268:75:11","nodeType":"YulIdentifier","src":"11268:75:11"},"nativeSrc":"11268:83:11","nodeType":"YulFunctionCall","src":"11268:83:11"},"variableNames":[{"name":"pos","nativeSrc":"11261:3:11","nodeType":"YulIdentifier","src":"11261:3:11"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11449:3:11","nodeType":"YulIdentifier","src":"11449:3:11"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"11360:88:11","nodeType":"YulIdentifier","src":"11360:88:11"},"nativeSrc":"11360:93:11","nodeType":"YulFunctionCall","src":"11360:93:11"},"nativeSrc":"11360:93:11","nodeType":"YulExpressionStatement","src":"11360:93:11"},{"nativeSrc":"11462:18:11","nodeType":"YulAssignment","src":"11462:18:11","value":{"arguments":[{"name":"pos","nativeSrc":"11473:3:11","nodeType":"YulIdentifier","src":"11473:3:11"},{"kind":"number","nativeSrc":"11478:1:11","nodeType":"YulLiteral","src":"11478:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11469:3:11","nodeType":"YulIdentifier","src":"11469:3:11"},"nativeSrc":"11469:11:11","nodeType":"YulFunctionCall","src":"11469:11:11"},"variableNames":[{"name":"end","nativeSrc":"11462:3:11","nodeType":"YulIdentifier","src":"11462:3:11"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11088:398:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11239:3:11","nodeType":"YulTypedName","src":"11239:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11247:3:11","nodeType":"YulTypedName","src":"11247:3:11","type":""}],"src":"11088:398:11"},{"body":{"nativeSrc":"11680:191:11","nodeType":"YulBlock","src":"11680:191:11","statements":[{"nativeSrc":"11691:154:11","nodeType":"YulAssignment","src":"11691:154:11","value":{"arguments":[{"name":"pos","nativeSrc":"11841:3:11","nodeType":"YulIdentifier","src":"11841:3:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"11698:141:11","nodeType":"YulIdentifier","src":"11698:141:11"},"nativeSrc":"11698:147:11","nodeType":"YulFunctionCall","src":"11698:147:11"},"variableNames":[{"name":"pos","nativeSrc":"11691:3:11","nodeType":"YulIdentifier","src":"11691:3:11"}]},{"nativeSrc":"11855:10:11","nodeType":"YulAssignment","src":"11855:10:11","value":{"name":"pos","nativeSrc":"11862:3:11","nodeType":"YulIdentifier","src":"11862:3:11"},"variableNames":[{"name":"end","nativeSrc":"11855:3:11","nodeType":"YulIdentifier","src":"11855:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"11492:379:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11667:3:11","nodeType":"YulTypedName","src":"11667:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11676:3:11","nodeType":"YulTypedName","src":"11676:3:11","type":""}],"src":"11492:379:11"},{"body":{"nativeSrc":"12031:288:11","nodeType":"YulBlock","src":"12031:288:11","statements":[{"nativeSrc":"12041:26:11","nodeType":"YulAssignment","src":"12041:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"12053:9:11","nodeType":"YulIdentifier","src":"12053:9:11"},{"kind":"number","nativeSrc":"12064:2:11","nodeType":"YulLiteral","src":"12064:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12049:3:11","nodeType":"YulIdentifier","src":"12049:3:11"},"nativeSrc":"12049:18:11","nodeType":"YulFunctionCall","src":"12049:18:11"},"variableNames":[{"name":"tail","nativeSrc":"12041:4:11","nodeType":"YulIdentifier","src":"12041:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12121:6:11","nodeType":"YulIdentifier","src":"12121:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"12134:9:11","nodeType":"YulIdentifier","src":"12134:9:11"},{"kind":"number","nativeSrc":"12145:1:11","nodeType":"YulLiteral","src":"12145:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12130:3:11","nodeType":"YulIdentifier","src":"12130:3:11"},"nativeSrc":"12130:17:11","nodeType":"YulFunctionCall","src":"12130:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12077:43:11","nodeType":"YulIdentifier","src":"12077:43:11"},"nativeSrc":"12077:71:11","nodeType":"YulFunctionCall","src":"12077:71:11"},"nativeSrc":"12077:71:11","nodeType":"YulExpressionStatement","src":"12077:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12202:6:11","nodeType":"YulIdentifier","src":"12202:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"12215:9:11","nodeType":"YulIdentifier","src":"12215:9:11"},{"kind":"number","nativeSrc":"12226:2:11","nodeType":"YulLiteral","src":"12226:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12211:3:11","nodeType":"YulIdentifier","src":"12211:3:11"},"nativeSrc":"12211:18:11","nodeType":"YulFunctionCall","src":"12211:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12158:43:11","nodeType":"YulIdentifier","src":"12158:43:11"},"nativeSrc":"12158:72:11","nodeType":"YulFunctionCall","src":"12158:72:11"},"nativeSrc":"12158:72:11","nodeType":"YulExpressionStatement","src":"12158:72:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12284:6:11","nodeType":"YulIdentifier","src":"12284:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"12297:9:11","nodeType":"YulIdentifier","src":"12297:9:11"},{"kind":"number","nativeSrc":"12308:2:11","nodeType":"YulLiteral","src":"12308:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12293:3:11","nodeType":"YulIdentifier","src":"12293:3:11"},"nativeSrc":"12293:18:11","nodeType":"YulFunctionCall","src":"12293:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12240:43:11","nodeType":"YulIdentifier","src":"12240:43:11"},"nativeSrc":"12240:72:11","nodeType":"YulFunctionCall","src":"12240:72:11"},"nativeSrc":"12240:72:11","nodeType":"YulExpressionStatement","src":"12240:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"11877:442:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11987:9:11","nodeType":"YulTypedName","src":"11987:9:11","type":""},{"name":"value2","nativeSrc":"11999:6:11","nodeType":"YulTypedName","src":"11999:6:11","type":""},{"name":"value1","nativeSrc":"12007:6:11","nodeType":"YulTypedName","src":"12007:6:11","type":""},{"name":"value0","nativeSrc":"12015:6:11","nodeType":"YulTypedName","src":"12015:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12026:4:11","nodeType":"YulTypedName","src":"12026:4:11","type":""}],"src":"11877:442:11"},{"body":{"nativeSrc":"12421:73:11","nodeType":"YulBlock","src":"12421:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12438:3:11","nodeType":"YulIdentifier","src":"12438:3:11"},{"name":"length","nativeSrc":"12443:6:11","nodeType":"YulIdentifier","src":"12443:6:11"}],"functionName":{"name":"mstore","nativeSrc":"12431:6:11","nodeType":"YulIdentifier","src":"12431:6:11"},"nativeSrc":"12431:19:11","nodeType":"YulFunctionCall","src":"12431:19:11"},"nativeSrc":"12431:19:11","nodeType":"YulExpressionStatement","src":"12431:19:11"},{"nativeSrc":"12459:29:11","nodeType":"YulAssignment","src":"12459:29:11","value":{"arguments":[{"name":"pos","nativeSrc":"12478:3:11","nodeType":"YulIdentifier","src":"12478:3:11"},{"kind":"number","nativeSrc":"12483:4:11","nodeType":"YulLiteral","src":"12483:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12474:3:11","nodeType":"YulIdentifier","src":"12474:3:11"},"nativeSrc":"12474:14:11","nodeType":"YulFunctionCall","src":"12474:14:11"},"variableNames":[{"name":"updated_pos","nativeSrc":"12459:11:11","nodeType":"YulIdentifier","src":"12459:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12325:169:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12393:3:11","nodeType":"YulTypedName","src":"12393:3:11","type":""},{"name":"length","nativeSrc":"12398:6:11","nodeType":"YulTypedName","src":"12398:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"12409:11:11","nodeType":"YulTypedName","src":"12409:11:11","type":""}],"src":"12325:169:11"},{"body":{"nativeSrc":"12606:63:11","nodeType":"YulBlock","src":"12606:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12628:6:11","nodeType":"YulIdentifier","src":"12628:6:11"},{"kind":"number","nativeSrc":"12636:1:11","nodeType":"YulLiteral","src":"12636:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12624:3:11","nodeType":"YulIdentifier","src":"12624:3:11"},"nativeSrc":"12624:14:11","nodeType":"YulFunctionCall","src":"12624:14:11"},{"hexValue":"455448207472616e73666572206661696c6564","kind":"string","nativeSrc":"12640:21:11","nodeType":"YulLiteral","src":"12640:21:11","type":"","value":"ETH transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"12617:6:11","nodeType":"YulIdentifier","src":"12617:6:11"},"nativeSrc":"12617:45:11","nodeType":"YulFunctionCall","src":"12617:45:11"},"nativeSrc":"12617:45:11","nodeType":"YulExpressionStatement","src":"12617:45:11"}]},"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"12500:169:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12598:6:11","nodeType":"YulTypedName","src":"12598:6:11","type":""}],"src":"12500:169:11"},{"body":{"nativeSrc":"12821:220:11","nodeType":"YulBlock","src":"12821:220:11","statements":[{"nativeSrc":"12831:74:11","nodeType":"YulAssignment","src":"12831:74:11","value":{"arguments":[{"name":"pos","nativeSrc":"12897:3:11","nodeType":"YulIdentifier","src":"12897:3:11"},{"kind":"number","nativeSrc":"12902:2:11","nodeType":"YulLiteral","src":"12902:2:11","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12838:58:11","nodeType":"YulIdentifier","src":"12838:58:11"},"nativeSrc":"12838:67:11","nodeType":"YulFunctionCall","src":"12838:67:11"},"variableNames":[{"name":"pos","nativeSrc":"12831:3:11","nodeType":"YulIdentifier","src":"12831:3:11"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13003:3:11","nodeType":"YulIdentifier","src":"13003:3:11"}],"functionName":{"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"12914:88:11","nodeType":"YulIdentifier","src":"12914:88:11"},"nativeSrc":"12914:93:11","nodeType":"YulFunctionCall","src":"12914:93:11"},"nativeSrc":"12914:93:11","nodeType":"YulExpressionStatement","src":"12914:93:11"},{"nativeSrc":"13016:19:11","nodeType":"YulAssignment","src":"13016:19:11","value":{"arguments":[{"name":"pos","nativeSrc":"13027:3:11","nodeType":"YulIdentifier","src":"13027:3:11"},{"kind":"number","nativeSrc":"13032:2:11","nodeType":"YulLiteral","src":"13032:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13023:3:11","nodeType":"YulIdentifier","src":"13023:3:11"},"nativeSrc":"13023:12:11","nodeType":"YulFunctionCall","src":"13023:12:11"},"variableNames":[{"name":"end","nativeSrc":"13016:3:11","nodeType":"YulIdentifier","src":"13016:3:11"}]}]},"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"12675:366:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12809:3:11","nodeType":"YulTypedName","src":"12809:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12817:3:11","nodeType":"YulTypedName","src":"12817:3:11","type":""}],"src":"12675:366:11"},{"body":{"nativeSrc":"13218:248:11","nodeType":"YulBlock","src":"13218:248:11","statements":[{"nativeSrc":"13228:26:11","nodeType":"YulAssignment","src":"13228:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"13240:9:11","nodeType":"YulIdentifier","src":"13240:9:11"},{"kind":"number","nativeSrc":"13251:2:11","nodeType":"YulLiteral","src":"13251:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13236:3:11","nodeType":"YulIdentifier","src":"13236:3:11"},"nativeSrc":"13236:18:11","nodeType":"YulFunctionCall","src":"13236:18:11"},"variableNames":[{"name":"tail","nativeSrc":"13228:4:11","nodeType":"YulIdentifier","src":"13228:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13275:9:11","nodeType":"YulIdentifier","src":"13275:9:11"},{"kind":"number","nativeSrc":"13286:1:11","nodeType":"YulLiteral","src":"13286:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13271:3:11","nodeType":"YulIdentifier","src":"13271:3:11"},"nativeSrc":"13271:17:11","nodeType":"YulFunctionCall","src":"13271:17:11"},{"arguments":[{"name":"tail","nativeSrc":"13294:4:11","nodeType":"YulIdentifier","src":"13294:4:11"},{"name":"headStart","nativeSrc":"13300:9:11","nodeType":"YulIdentifier","src":"13300:9:11"}],"functionName":{"name":"sub","nativeSrc":"13290:3:11","nodeType":"YulIdentifier","src":"13290:3:11"},"nativeSrc":"13290:20:11","nodeType":"YulFunctionCall","src":"13290:20:11"}],"functionName":{"name":"mstore","nativeSrc":"13264:6:11","nodeType":"YulIdentifier","src":"13264:6:11"},"nativeSrc":"13264:47:11","nodeType":"YulFunctionCall","src":"13264:47:11"},"nativeSrc":"13264:47:11","nodeType":"YulExpressionStatement","src":"13264:47:11"},{"nativeSrc":"13320:139:11","nodeType":"YulAssignment","src":"13320:139:11","value":{"arguments":[{"name":"tail","nativeSrc":"13454:4:11","nodeType":"YulIdentifier","src":"13454:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"13328:124:11","nodeType":"YulIdentifier","src":"13328:124:11"},"nativeSrc":"13328:131:11","nodeType":"YulFunctionCall","src":"13328:131:11"},"variableNames":[{"name":"tail","nativeSrc":"13320:4:11","nodeType":"YulIdentifier","src":"13320:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13047:419:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13198:9:11","nodeType":"YulTypedName","src":"13198:9:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13213:4:11","nodeType":"YulTypedName","src":"13213:4:11","type":""}],"src":"13047:419:11"},{"body":{"nativeSrc":"13794:786:11","nodeType":"YulBlock","src":"13794:786:11","statements":[{"nativeSrc":"13804:27:11","nodeType":"YulAssignment","src":"13804:27:11","value":{"arguments":[{"name":"headStart","nativeSrc":"13816:9:11","nodeType":"YulIdentifier","src":"13816:9:11"},{"kind":"number","nativeSrc":"13827:3:11","nodeType":"YulLiteral","src":"13827:3:11","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"13812:3:11","nodeType":"YulIdentifier","src":"13812:3:11"},"nativeSrc":"13812:19:11","nodeType":"YulFunctionCall","src":"13812:19:11"},"variableNames":[{"name":"tail","nativeSrc":"13804:4:11","nodeType":"YulIdentifier","src":"13804:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13885:6:11","nodeType":"YulIdentifier","src":"13885:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"13898:9:11","nodeType":"YulIdentifier","src":"13898:9:11"},{"kind":"number","nativeSrc":"13909:1:11","nodeType":"YulLiteral","src":"13909:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13894:3:11","nodeType":"YulIdentifier","src":"13894:3:11"},"nativeSrc":"13894:17:11","nodeType":"YulFunctionCall","src":"13894:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"13841:43:11","nodeType":"YulIdentifier","src":"13841:43:11"},"nativeSrc":"13841:71:11","nodeType":"YulFunctionCall","src":"13841:71:11"},"nativeSrc":"13841:71:11","nodeType":"YulExpressionStatement","src":"13841:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13966:6:11","nodeType":"YulIdentifier","src":"13966:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"13979:9:11","nodeType":"YulIdentifier","src":"13979:9:11"},{"kind":"number","nativeSrc":"13990:2:11","nodeType":"YulLiteral","src":"13990:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13975:3:11","nodeType":"YulIdentifier","src":"13975:3:11"},"nativeSrc":"13975:18:11","nodeType":"YulFunctionCall","src":"13975:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13922:43:11","nodeType":"YulIdentifier","src":"13922:43:11"},"nativeSrc":"13922:72:11","nodeType":"YulFunctionCall","src":"13922:72:11"},"nativeSrc":"13922:72:11","nodeType":"YulExpressionStatement","src":"13922:72:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14048:6:11","nodeType":"YulIdentifier","src":"14048:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"14061:9:11","nodeType":"YulIdentifier","src":"14061:9:11"},{"kind":"number","nativeSrc":"14072:2:11","nodeType":"YulLiteral","src":"14072:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14057:3:11","nodeType":"YulIdentifier","src":"14057:3:11"},"nativeSrc":"14057:18:11","nodeType":"YulFunctionCall","src":"14057:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14004:43:11","nodeType":"YulIdentifier","src":"14004:43:11"},"nativeSrc":"14004:72:11","nodeType":"YulFunctionCall","src":"14004:72:11"},"nativeSrc":"14004:72:11","nodeType":"YulExpressionStatement","src":"14004:72:11"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14130:6:11","nodeType":"YulIdentifier","src":"14130:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"14143:9:11","nodeType":"YulIdentifier","src":"14143:9:11"},{"kind":"number","nativeSrc":"14154:2:11","nodeType":"YulLiteral","src":"14154:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14139:3:11","nodeType":"YulIdentifier","src":"14139:3:11"},"nativeSrc":"14139:18:11","nodeType":"YulFunctionCall","src":"14139:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14086:43:11","nodeType":"YulIdentifier","src":"14086:43:11"},"nativeSrc":"14086:72:11","nodeType":"YulFunctionCall","src":"14086:72:11"},"nativeSrc":"14086:72:11","nodeType":"YulExpressionStatement","src":"14086:72:11"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14212:6:11","nodeType":"YulIdentifier","src":"14212:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"14225:9:11","nodeType":"YulIdentifier","src":"14225:9:11"},{"kind":"number","nativeSrc":"14236:3:11","nodeType":"YulLiteral","src":"14236:3:11","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14221:3:11","nodeType":"YulIdentifier","src":"14221:3:11"},"nativeSrc":"14221:19:11","nodeType":"YulFunctionCall","src":"14221:19:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14168:43:11","nodeType":"YulIdentifier","src":"14168:43:11"},"nativeSrc":"14168:73:11","nodeType":"YulFunctionCall","src":"14168:73:11"},"nativeSrc":"14168:73:11","nodeType":"YulExpressionStatement","src":"14168:73:11"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"14295:6:11","nodeType":"YulIdentifier","src":"14295:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"14308:9:11","nodeType":"YulIdentifier","src":"14308:9:11"},{"kind":"number","nativeSrc":"14319:3:11","nodeType":"YulLiteral","src":"14319:3:11","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14304:3:11","nodeType":"YulIdentifier","src":"14304:3:11"},"nativeSrc":"14304:19:11","nodeType":"YulFunctionCall","src":"14304:19:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14251:43:11","nodeType":"YulIdentifier","src":"14251:43:11"},"nativeSrc":"14251:73:11","nodeType":"YulFunctionCall","src":"14251:73:11"},"nativeSrc":"14251:73:11","nodeType":"YulExpressionStatement","src":"14251:73:11"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"14378:6:11","nodeType":"YulIdentifier","src":"14378:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"14391:9:11","nodeType":"YulIdentifier","src":"14391:9:11"},{"kind":"number","nativeSrc":"14402:3:11","nodeType":"YulLiteral","src":"14402:3:11","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"14387:3:11","nodeType":"YulIdentifier","src":"14387:3:11"},"nativeSrc":"14387:19:11","nodeType":"YulFunctionCall","src":"14387:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14334:43:11","nodeType":"YulIdentifier","src":"14334:43:11"},"nativeSrc":"14334:73:11","nodeType":"YulFunctionCall","src":"14334:73:11"},"nativeSrc":"14334:73:11","nodeType":"YulExpressionStatement","src":"14334:73:11"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"14461:6:11","nodeType":"YulIdentifier","src":"14461:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"14474:9:11","nodeType":"YulIdentifier","src":"14474:9:11"},{"kind":"number","nativeSrc":"14485:3:11","nodeType":"YulLiteral","src":"14485:3:11","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"14470:3:11","nodeType":"YulIdentifier","src":"14470:3:11"},"nativeSrc":"14470:19:11","nodeType":"YulFunctionCall","src":"14470:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14417:43:11","nodeType":"YulIdentifier","src":"14417:43:11"},"nativeSrc":"14417:73:11","nodeType":"YulFunctionCall","src":"14417:73:11"},"nativeSrc":"14417:73:11","nodeType":"YulExpressionStatement","src":"14417:73:11"},{"expression":{"arguments":[{"name":"value8","nativeSrc":"14544:6:11","nodeType":"YulIdentifier","src":"14544:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"14557:9:11","nodeType":"YulIdentifier","src":"14557:9:11"},{"kind":"number","nativeSrc":"14568:3:11","nodeType":"YulLiteral","src":"14568:3:11","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"14553:3:11","nodeType":"YulIdentifier","src":"14553:3:11"},"nativeSrc":"14553:19:11","nodeType":"YulFunctionCall","src":"14553:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14500:43:11","nodeType":"YulIdentifier","src":"14500:43:11"},"nativeSrc":"14500:73:11","nodeType":"YulFunctionCall","src":"14500:73:11"},"nativeSrc":"14500:73:11","nodeType":"YulExpressionStatement","src":"14500:73:11"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13472:1108:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13702:9:11","nodeType":"YulTypedName","src":"13702:9:11","type":""},{"name":"value8","nativeSrc":"13714:6:11","nodeType":"YulTypedName","src":"13714:6:11","type":""},{"name":"value7","nativeSrc":"13722:6:11","nodeType":"YulTypedName","src":"13722:6:11","type":""},{"name":"value6","nativeSrc":"13730:6:11","nodeType":"YulTypedName","src":"13730:6:11","type":""},{"name":"value5","nativeSrc":"13738:6:11","nodeType":"YulTypedName","src":"13738:6:11","type":""},{"name":"value4","nativeSrc":"13746:6:11","nodeType":"YulTypedName","src":"13746:6:11","type":""},{"name":"value3","nativeSrc":"13754:6:11","nodeType":"YulTypedName","src":"13754:6:11","type":""},{"name":"value2","nativeSrc":"13762:6:11","nodeType":"YulTypedName","src":"13762:6:11","type":""},{"name":"value1","nativeSrc":"13770:6:11","nodeType":"YulTypedName","src":"13770:6:11","type":""},{"name":"value0","nativeSrc":"13778:6:11","nodeType":"YulTypedName","src":"13778:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13789:4:11","nodeType":"YulTypedName","src":"13789:4:11","type":""}],"src":"13472:1108:11"},{"body":{"nativeSrc":"14700:34:11","nodeType":"YulBlock","src":"14700:34:11","statements":[{"nativeSrc":"14710:18:11","nodeType":"YulAssignment","src":"14710:18:11","value":{"name":"pos","nativeSrc":"14725:3:11","nodeType":"YulIdentifier","src":"14725:3:11"},"variableNames":[{"name":"updated_pos","nativeSrc":"14710:11:11","nodeType":"YulIdentifier","src":"14710:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14586:148:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14672:3:11","nodeType":"YulTypedName","src":"14672:3:11","type":""},{"name":"length","nativeSrc":"14677:6:11","nodeType":"YulTypedName","src":"14677:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14688:11:11","nodeType":"YulTypedName","src":"14688:11:11","type":""}],"src":"14586:148:11"},{"body":{"nativeSrc":"14846:108:11","nodeType":"YulBlock","src":"14846:108:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14868:6:11","nodeType":"YulIdentifier","src":"14868:6:11"},{"kind":"number","nativeSrc":"14876:1:11","nodeType":"YulLiteral","src":"14876:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14864:3:11","nodeType":"YulIdentifier","src":"14864:3:11"},"nativeSrc":"14864:14:11","nodeType":"YulFunctionCall","src":"14864:14:11"},{"kind":"number","nativeSrc":"14880:66:11","nodeType":"YulLiteral","src":"14880:66:11","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nativeSrc":"14857:6:11","nodeType":"YulIdentifier","src":"14857:6:11"},"nativeSrc":"14857:90:11","nodeType":"YulFunctionCall","src":"14857:90:11"},"nativeSrc":"14857:90:11","nodeType":"YulExpressionStatement","src":"14857:90:11"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nativeSrc":"14740:214:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14838:6:11","nodeType":"YulTypedName","src":"14838:6:11","type":""}],"src":"14740:214:11"},{"body":{"nativeSrc":"15124:236:11","nodeType":"YulBlock","src":"15124:236:11","statements":[{"nativeSrc":"15134:91:11","nodeType":"YulAssignment","src":"15134:91:11","value":{"arguments":[{"name":"pos","nativeSrc":"15218:3:11","nodeType":"YulIdentifier","src":"15218:3:11"},{"kind":"number","nativeSrc":"15223:1:11","nodeType":"YulLiteral","src":"15223:1:11","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15141:76:11","nodeType":"YulIdentifier","src":"15141:76:11"},"nativeSrc":"15141:84:11","nodeType":"YulFunctionCall","src":"15141:84:11"},"variableNames":[{"name":"pos","nativeSrc":"15134:3:11","nodeType":"YulIdentifier","src":"15134:3:11"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15323:3:11","nodeType":"YulIdentifier","src":"15323:3:11"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nativeSrc":"15234:88:11","nodeType":"YulIdentifier","src":"15234:88:11"},"nativeSrc":"15234:93:11","nodeType":"YulFunctionCall","src":"15234:93:11"},"nativeSrc":"15234:93:11","nodeType":"YulExpressionStatement","src":"15234:93:11"},{"nativeSrc":"15336:18:11","nodeType":"YulAssignment","src":"15336:18:11","value":{"arguments":[{"name":"pos","nativeSrc":"15347:3:11","nodeType":"YulIdentifier","src":"15347:3:11"},{"kind":"number","nativeSrc":"15352:1:11","nodeType":"YulLiteral","src":"15352:1:11","type":"","value":"2"}],"functionName":{"name":"add","nativeSrc":"15343:3:11","nodeType":"YulIdentifier","src":"15343:3:11"},"nativeSrc":"15343:11:11","nodeType":"YulFunctionCall","src":"15343:11:11"},"variableNames":[{"name":"end","nativeSrc":"15336:3:11","nodeType":"YulIdentifier","src":"15336:3:11"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14960:400:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15112:3:11","nodeType":"YulTypedName","src":"15112:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15120:3:11","nodeType":"YulTypedName","src":"15120:3:11","type":""}],"src":"14960:400:11"},{"body":{"nativeSrc":"15611:418:11","nodeType":"YulBlock","src":"15611:418:11","statements":[{"nativeSrc":"15622:155:11","nodeType":"YulAssignment","src":"15622:155:11","value":{"arguments":[{"name":"pos","nativeSrc":"15773:3:11","nodeType":"YulIdentifier","src":"15773:3:11"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15629:142:11","nodeType":"YulIdentifier","src":"15629:142:11"},"nativeSrc":"15629:148:11","nodeType":"YulFunctionCall","src":"15629:148:11"},"variableNames":[{"name":"pos","nativeSrc":"15622:3:11","nodeType":"YulIdentifier","src":"15622:3:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15849:6:11","nodeType":"YulIdentifier","src":"15849:6:11"},{"name":"pos","nativeSrc":"15858:3:11","nodeType":"YulIdentifier","src":"15858:3:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"15787:61:11","nodeType":"YulIdentifier","src":"15787:61:11"},"nativeSrc":"15787:75:11","nodeType":"YulFunctionCall","src":"15787:75:11"},"nativeSrc":"15787:75:11","nodeType":"YulExpressionStatement","src":"15787:75:11"},{"nativeSrc":"15871:19:11","nodeType":"YulAssignment","src":"15871:19:11","value":{"arguments":[{"name":"pos","nativeSrc":"15882:3:11","nodeType":"YulIdentifier","src":"15882:3:11"},{"kind":"number","nativeSrc":"15887:2:11","nodeType":"YulLiteral","src":"15887:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15878:3:11","nodeType":"YulIdentifier","src":"15878:3:11"},"nativeSrc":"15878:12:11","nodeType":"YulFunctionCall","src":"15878:12:11"},"variableNames":[{"name":"pos","nativeSrc":"15871:3:11","nodeType":"YulIdentifier","src":"15871:3:11"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15962:6:11","nodeType":"YulIdentifier","src":"15962:6:11"},{"name":"pos","nativeSrc":"15971:3:11","nodeType":"YulIdentifier","src":"15971:3:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"15900:61:11","nodeType":"YulIdentifier","src":"15900:61:11"},"nativeSrc":"15900:75:11","nodeType":"YulFunctionCall","src":"15900:75:11"},"nativeSrc":"15900:75:11","nodeType":"YulExpressionStatement","src":"15900:75:11"},{"nativeSrc":"15984:19:11","nodeType":"YulAssignment","src":"15984:19:11","value":{"arguments":[{"name":"pos","nativeSrc":"15995:3:11","nodeType":"YulIdentifier","src":"15995:3:11"},{"kind":"number","nativeSrc":"16000:2:11","nodeType":"YulLiteral","src":"16000:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15991:3:11","nodeType":"YulIdentifier","src":"15991:3:11"},"nativeSrc":"15991:12:11","nodeType":"YulFunctionCall","src":"15991:12:11"},"variableNames":[{"name":"pos","nativeSrc":"15984:3:11","nodeType":"YulIdentifier","src":"15984:3:11"}]},{"nativeSrc":"16013:10:11","nodeType":"YulAssignment","src":"16013:10:11","value":{"name":"pos","nativeSrc":"16020:3:11","nodeType":"YulIdentifier","src":"16020:3:11"},"variableNames":[{"name":"end","nativeSrc":"16013:3:11","nodeType":"YulIdentifier","src":"16013:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"15366:663:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15582:3:11","nodeType":"YulTypedName","src":"15582:3:11","type":""},{"name":"value1","nativeSrc":"15588:6:11","nodeType":"YulTypedName","src":"15588:6:11","type":""},{"name":"value0","nativeSrc":"15596:6:11","nodeType":"YulTypedName","src":"15596:6:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15607:3:11","nodeType":"YulTypedName","src":"15607:3:11","type":""}],"src":"15366:663:11"},{"body":{"nativeSrc":"16063:152:11","nodeType":"YulBlock","src":"16063:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16080:1:11","nodeType":"YulLiteral","src":"16080:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"16083:77:11","nodeType":"YulLiteral","src":"16083:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16073:6:11","nodeType":"YulIdentifier","src":"16073:6:11"},"nativeSrc":"16073:88:11","nodeType":"YulFunctionCall","src":"16073:88:11"},"nativeSrc":"16073:88:11","nodeType":"YulExpressionStatement","src":"16073:88:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16177:1:11","nodeType":"YulLiteral","src":"16177:1:11","type":"","value":"4"},{"kind":"number","nativeSrc":"16180:4:11","nodeType":"YulLiteral","src":"16180:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16170:6:11","nodeType":"YulIdentifier","src":"16170:6:11"},"nativeSrc":"16170:15:11","nodeType":"YulFunctionCall","src":"16170:15:11"},"nativeSrc":"16170:15:11","nodeType":"YulExpressionStatement","src":"16170:15:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16201:1:11","nodeType":"YulLiteral","src":"16201:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"16204:4:11","nodeType":"YulLiteral","src":"16204:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16194:6:11","nodeType":"YulIdentifier","src":"16194:6:11"},"nativeSrc":"16194:15:11","nodeType":"YulFunctionCall","src":"16194:15:11"},"nativeSrc":"16194:15:11","nodeType":"YulExpressionStatement","src":"16194:15:11"}]},"name":"panic_error_0x11","nativeSrc":"16035:180:11","nodeType":"YulFunctionDefinition","src":"16035:180:11"},{"body":{"nativeSrc":"16264:190:11","nodeType":"YulBlock","src":"16264:190:11","statements":[{"nativeSrc":"16274:33:11","nodeType":"YulAssignment","src":"16274:33:11","value":{"arguments":[{"name":"value","nativeSrc":"16301:5:11","nodeType":"YulIdentifier","src":"16301:5:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16283:17:11","nodeType":"YulIdentifier","src":"16283:17:11"},"nativeSrc":"16283:24:11","nodeType":"YulFunctionCall","src":"16283:24:11"},"variableNames":[{"name":"value","nativeSrc":"16274:5:11","nodeType":"YulIdentifier","src":"16274:5:11"}]},{"body":{"nativeSrc":"16397:22:11","nodeType":"YulBlock","src":"16397:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16399:16:11","nodeType":"YulIdentifier","src":"16399:16:11"},"nativeSrc":"16399:18:11","nodeType":"YulFunctionCall","src":"16399:18:11"},"nativeSrc":"16399:18:11","nodeType":"YulExpressionStatement","src":"16399:18:11"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"16322:5:11","nodeType":"YulIdentifier","src":"16322:5:11"},{"kind":"number","nativeSrc":"16329:66:11","nodeType":"YulLiteral","src":"16329:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"16319:2:11","nodeType":"YulIdentifier","src":"16319:2:11"},"nativeSrc":"16319:77:11","nodeType":"YulFunctionCall","src":"16319:77:11"},"nativeSrc":"16316:103:11","nodeType":"YulIf","src":"16316:103:11"},{"nativeSrc":"16428:20:11","nodeType":"YulAssignment","src":"16428:20:11","value":{"arguments":[{"name":"value","nativeSrc":"16439:5:11","nodeType":"YulIdentifier","src":"16439:5:11"},{"kind":"number","nativeSrc":"16446:1:11","nodeType":"YulLiteral","src":"16446:1:11","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16435:3:11","nodeType":"YulIdentifier","src":"16435:3:11"},"nativeSrc":"16435:13:11","nodeType":"YulFunctionCall","src":"16435:13:11"},"variableNames":[{"name":"ret","nativeSrc":"16428:3:11","nodeType":"YulIdentifier","src":"16428:3:11"}]}]},"name":"increment_t_uint256","nativeSrc":"16221:233:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16250:5:11","nodeType":"YulTypedName","src":"16250:5:11","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"16260:3:11","nodeType":"YulTypedName","src":"16260:3:11","type":""}],"src":"16221:233:11"},{"body":{"nativeSrc":"16586:206:11","nodeType":"YulBlock","src":"16586:206:11","statements":[{"nativeSrc":"16596:26:11","nodeType":"YulAssignment","src":"16596:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"16608:9:11","nodeType":"YulIdentifier","src":"16608:9:11"},{"kind":"number","nativeSrc":"16619:2:11","nodeType":"YulLiteral","src":"16619:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16604:3:11","nodeType":"YulIdentifier","src":"16604:3:11"},"nativeSrc":"16604:18:11","nodeType":"YulFunctionCall","src":"16604:18:11"},"variableNames":[{"name":"tail","nativeSrc":"16596:4:11","nodeType":"YulIdentifier","src":"16596:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16676:6:11","nodeType":"YulIdentifier","src":"16676:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"16689:9:11","nodeType":"YulIdentifier","src":"16689:9:11"},{"kind":"number","nativeSrc":"16700:1:11","nodeType":"YulLiteral","src":"16700:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16685:3:11","nodeType":"YulIdentifier","src":"16685:3:11"},"nativeSrc":"16685:17:11","nodeType":"YulFunctionCall","src":"16685:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16632:43:11","nodeType":"YulIdentifier","src":"16632:43:11"},"nativeSrc":"16632:71:11","nodeType":"YulFunctionCall","src":"16632:71:11"},"nativeSrc":"16632:71:11","nodeType":"YulExpressionStatement","src":"16632:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16757:6:11","nodeType":"YulIdentifier","src":"16757:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"16770:9:11","nodeType":"YulIdentifier","src":"16770:9:11"},{"kind":"number","nativeSrc":"16781:2:11","nodeType":"YulLiteral","src":"16781:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16766:3:11","nodeType":"YulIdentifier","src":"16766:3:11"},"nativeSrc":"16766:18:11","nodeType":"YulFunctionCall","src":"16766:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16713:43:11","nodeType":"YulIdentifier","src":"16713:43:11"},"nativeSrc":"16713:72:11","nodeType":"YulFunctionCall","src":"16713:72:11"},"nativeSrc":"16713:72:11","nodeType":"YulExpressionStatement","src":"16713:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"16460:332:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16550:9:11","nodeType":"YulTypedName","src":"16550:9:11","type":""},{"name":"value1","nativeSrc":"16562:6:11","nodeType":"YulTypedName","src":"16562:6:11","type":""},{"name":"value0","nativeSrc":"16570:6:11","nodeType":"YulTypedName","src":"16570:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16581:4:11","nodeType":"YulTypedName","src":"16581:4:11","type":""}],"src":"16460:332:11"},{"body":{"nativeSrc":"16842:147:11","nodeType":"YulBlock","src":"16842:147:11","statements":[{"nativeSrc":"16852:25:11","nodeType":"YulAssignment","src":"16852:25:11","value":{"arguments":[{"name":"x","nativeSrc":"16875:1:11","nodeType":"YulIdentifier","src":"16875:1:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16857:17:11","nodeType":"YulIdentifier","src":"16857:17:11"},"nativeSrc":"16857:20:11","nodeType":"YulFunctionCall","src":"16857:20:11"},"variableNames":[{"name":"x","nativeSrc":"16852:1:11","nodeType":"YulIdentifier","src":"16852:1:11"}]},{"nativeSrc":"16886:25:11","nodeType":"YulAssignment","src":"16886:25:11","value":{"arguments":[{"name":"y","nativeSrc":"16909:1:11","nodeType":"YulIdentifier","src":"16909:1:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16891:17:11","nodeType":"YulIdentifier","src":"16891:17:11"},"nativeSrc":"16891:20:11","nodeType":"YulFunctionCall","src":"16891:20:11"},"variableNames":[{"name":"y","nativeSrc":"16886:1:11","nodeType":"YulIdentifier","src":"16886:1:11"}]},{"nativeSrc":"16920:16:11","nodeType":"YulAssignment","src":"16920:16:11","value":{"arguments":[{"name":"x","nativeSrc":"16931:1:11","nodeType":"YulIdentifier","src":"16931:1:11"},{"name":"y","nativeSrc":"16934:1:11","nodeType":"YulIdentifier","src":"16934:1:11"}],"functionName":{"name":"add","nativeSrc":"16927:3:11","nodeType":"YulIdentifier","src":"16927:3:11"},"nativeSrc":"16927:9:11","nodeType":"YulFunctionCall","src":"16927:9:11"},"variableNames":[{"name":"sum","nativeSrc":"16920:3:11","nodeType":"YulIdentifier","src":"16920:3:11"}]},{"body":{"nativeSrc":"16960:22:11","nodeType":"YulBlock","src":"16960:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16962:16:11","nodeType":"YulIdentifier","src":"16962:16:11"},"nativeSrc":"16962:18:11","nodeType":"YulFunctionCall","src":"16962:18:11"},"nativeSrc":"16962:18:11","nodeType":"YulExpressionStatement","src":"16962:18:11"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"16952:1:11","nodeType":"YulIdentifier","src":"16952:1:11"},{"name":"sum","nativeSrc":"16955:3:11","nodeType":"YulIdentifier","src":"16955:3:11"}],"functionName":{"name":"gt","nativeSrc":"16949:2:11","nodeType":"YulIdentifier","src":"16949:2:11"},"nativeSrc":"16949:10:11","nodeType":"YulFunctionCall","src":"16949:10:11"},"nativeSrc":"16946:36:11","nodeType":"YulIf","src":"16946:36:11"}]},"name":"checked_add_t_uint256","nativeSrc":"16798:191:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16829:1:11","nodeType":"YulTypedName","src":"16829:1:11","type":""},{"name":"y","nativeSrc":"16832:1:11","nodeType":"YulTypedName","src":"16832:1:11","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"16838:3:11","nodeType":"YulTypedName","src":"16838:3:11","type":""}],"src":"16798:191:11"},{"body":{"nativeSrc":"17058:80:11","nodeType":"YulBlock","src":"17058:80:11","statements":[{"nativeSrc":"17068:22:11","nodeType":"YulAssignment","src":"17068:22:11","value":{"arguments":[{"name":"offset","nativeSrc":"17083:6:11","nodeType":"YulIdentifier","src":"17083:6:11"}],"functionName":{"name":"mload","nativeSrc":"17077:5:11","nodeType":"YulIdentifier","src":"17077:5:11"},"nativeSrc":"17077:13:11","nodeType":"YulFunctionCall","src":"17077:13:11"},"variableNames":[{"name":"value","nativeSrc":"17068:5:11","nodeType":"YulIdentifier","src":"17068:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17126:5:11","nodeType":"YulIdentifier","src":"17126:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"17099:26:11","nodeType":"YulIdentifier","src":"17099:26:11"},"nativeSrc":"17099:33:11","nodeType":"YulFunctionCall","src":"17099:33:11"},"nativeSrc":"17099:33:11","nodeType":"YulExpressionStatement","src":"17099:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"16995:143:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17036:6:11","nodeType":"YulTypedName","src":"17036:6:11","type":""},{"name":"end","nativeSrc":"17044:3:11","nodeType":"YulTypedName","src":"17044:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17052:5:11","nodeType":"YulTypedName","src":"17052:5:11","type":""}],"src":"16995:143:11"},{"body":{"nativeSrc":"17221:274:11","nodeType":"YulBlock","src":"17221:274:11","statements":[{"body":{"nativeSrc":"17267:83:11","nodeType":"YulBlock","src":"17267:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17269:77:11","nodeType":"YulIdentifier","src":"17269:77:11"},"nativeSrc":"17269:79:11","nodeType":"YulFunctionCall","src":"17269:79:11"},"nativeSrc":"17269:79:11","nodeType":"YulExpressionStatement","src":"17269:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17242:7:11","nodeType":"YulIdentifier","src":"17242:7:11"},{"name":"headStart","nativeSrc":"17251:9:11","nodeType":"YulIdentifier","src":"17251:9:11"}],"functionName":{"name":"sub","nativeSrc":"17238:3:11","nodeType":"YulIdentifier","src":"17238:3:11"},"nativeSrc":"17238:23:11","nodeType":"YulFunctionCall","src":"17238:23:11"},{"kind":"number","nativeSrc":"17263:2:11","nodeType":"YulLiteral","src":"17263:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17234:3:11","nodeType":"YulIdentifier","src":"17234:3:11"},"nativeSrc":"17234:32:11","nodeType":"YulFunctionCall","src":"17234:32:11"},"nativeSrc":"17231:119:11","nodeType":"YulIf","src":"17231:119:11"},{"nativeSrc":"17360:128:11","nodeType":"YulBlock","src":"17360:128:11","statements":[{"nativeSrc":"17375:15:11","nodeType":"YulVariableDeclaration","src":"17375:15:11","value":{"kind":"number","nativeSrc":"17389:1:11","nodeType":"YulLiteral","src":"17389:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17379:6:11","nodeType":"YulTypedName","src":"17379:6:11","type":""}]},{"nativeSrc":"17404:74:11","nodeType":"YulAssignment","src":"17404:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17450:9:11","nodeType":"YulIdentifier","src":"17450:9:11"},{"name":"offset","nativeSrc":"17461:6:11","nodeType":"YulIdentifier","src":"17461:6:11"}],"functionName":{"name":"add","nativeSrc":"17446:3:11","nodeType":"YulIdentifier","src":"17446:3:11"},"nativeSrc":"17446:22:11","nodeType":"YulFunctionCall","src":"17446:22:11"},{"name":"dataEnd","nativeSrc":"17470:7:11","nodeType":"YulIdentifier","src":"17470:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"17414:31:11","nodeType":"YulIdentifier","src":"17414:31:11"},"nativeSrc":"17414:64:11","nodeType":"YulFunctionCall","src":"17414:64:11"},"variableNames":[{"name":"value0","nativeSrc":"17404:6:11","nodeType":"YulIdentifier","src":"17404:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"17144:351:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17191:9:11","nodeType":"YulTypedName","src":"17191:9:11","type":""},{"name":"dataEnd","nativeSrc":"17202:7:11","nodeType":"YulTypedName","src":"17202:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17214:6:11","nodeType":"YulTypedName","src":"17214:6:11","type":""}],"src":"17144:351:11"},{"body":{"nativeSrc":"17655:288:11","nodeType":"YulBlock","src":"17655:288:11","statements":[{"nativeSrc":"17665:26:11","nodeType":"YulAssignment","src":"17665:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"17677:9:11","nodeType":"YulIdentifier","src":"17677:9:11"},{"kind":"number","nativeSrc":"17688:2:11","nodeType":"YulLiteral","src":"17688:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17673:3:11","nodeType":"YulIdentifier","src":"17673:3:11"},"nativeSrc":"17673:18:11","nodeType":"YulFunctionCall","src":"17673:18:11"},"variableNames":[{"name":"tail","nativeSrc":"17665:4:11","nodeType":"YulIdentifier","src":"17665:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17745:6:11","nodeType":"YulIdentifier","src":"17745:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"17758:9:11","nodeType":"YulIdentifier","src":"17758:9:11"},{"kind":"number","nativeSrc":"17769:1:11","nodeType":"YulLiteral","src":"17769:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17754:3:11","nodeType":"YulIdentifier","src":"17754:3:11"},"nativeSrc":"17754:17:11","nodeType":"YulFunctionCall","src":"17754:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17701:43:11","nodeType":"YulIdentifier","src":"17701:43:11"},"nativeSrc":"17701:71:11","nodeType":"YulFunctionCall","src":"17701:71:11"},"nativeSrc":"17701:71:11","nodeType":"YulExpressionStatement","src":"17701:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17826:6:11","nodeType":"YulIdentifier","src":"17826:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"17839:9:11","nodeType":"YulIdentifier","src":"17839:9:11"},{"kind":"number","nativeSrc":"17850:2:11","nodeType":"YulLiteral","src":"17850:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17835:3:11","nodeType":"YulIdentifier","src":"17835:3:11"},"nativeSrc":"17835:18:11","nodeType":"YulFunctionCall","src":"17835:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17782:43:11","nodeType":"YulIdentifier","src":"17782:43:11"},"nativeSrc":"17782:72:11","nodeType":"YulFunctionCall","src":"17782:72:11"},"nativeSrc":"17782:72:11","nodeType":"YulExpressionStatement","src":"17782:72:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"17908:6:11","nodeType":"YulIdentifier","src":"17908:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"17921:9:11","nodeType":"YulIdentifier","src":"17921:9:11"},{"kind":"number","nativeSrc":"17932:2:11","nodeType":"YulLiteral","src":"17932:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17917:3:11","nodeType":"YulIdentifier","src":"17917:3:11"},"nativeSrc":"17917:18:11","nodeType":"YulFunctionCall","src":"17917:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17864:43:11","nodeType":"YulIdentifier","src":"17864:43:11"},"nativeSrc":"17864:72:11","nodeType":"YulFunctionCall","src":"17864:72:11"},"nativeSrc":"17864:72:11","nodeType":"YulExpressionStatement","src":"17864:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17501:442:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17611:9:11","nodeType":"YulTypedName","src":"17611:9:11","type":""},{"name":"value2","nativeSrc":"17623:6:11","nodeType":"YulTypedName","src":"17623:6:11","type":""},{"name":"value1","nativeSrc":"17631:6:11","nodeType":"YulTypedName","src":"17631:6:11","type":""},{"name":"value0","nativeSrc":"17639:6:11","nodeType":"YulTypedName","src":"17639:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17650:4:11","nodeType":"YulTypedName","src":"17650:4:11","type":""}],"src":"17501:442:11"},{"body":{"nativeSrc":"18103:288:11","nodeType":"YulBlock","src":"18103:288:11","statements":[{"nativeSrc":"18113:26:11","nodeType":"YulAssignment","src":"18113:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"18125:9:11","nodeType":"YulIdentifier","src":"18125:9:11"},{"kind":"number","nativeSrc":"18136:2:11","nodeType":"YulLiteral","src":"18136:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18121:3:11","nodeType":"YulIdentifier","src":"18121:3:11"},"nativeSrc":"18121:18:11","nodeType":"YulFunctionCall","src":"18121:18:11"},"variableNames":[{"name":"tail","nativeSrc":"18113:4:11","nodeType":"YulIdentifier","src":"18113:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18193:6:11","nodeType":"YulIdentifier","src":"18193:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"18206:9:11","nodeType":"YulIdentifier","src":"18206:9:11"},{"kind":"number","nativeSrc":"18217:1:11","nodeType":"YulLiteral","src":"18217:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18202:3:11","nodeType":"YulIdentifier","src":"18202:3:11"},"nativeSrc":"18202:17:11","nodeType":"YulFunctionCall","src":"18202:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18149:43:11","nodeType":"YulIdentifier","src":"18149:43:11"},"nativeSrc":"18149:71:11","nodeType":"YulFunctionCall","src":"18149:71:11"},"nativeSrc":"18149:71:11","nodeType":"YulExpressionStatement","src":"18149:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18274:6:11","nodeType":"YulIdentifier","src":"18274:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"18287:9:11","nodeType":"YulIdentifier","src":"18287:9:11"},{"kind":"number","nativeSrc":"18298:2:11","nodeType":"YulLiteral","src":"18298:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18283:3:11","nodeType":"YulIdentifier","src":"18283:3:11"},"nativeSrc":"18283:18:11","nodeType":"YulFunctionCall","src":"18283:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18230:43:11","nodeType":"YulIdentifier","src":"18230:43:11"},"nativeSrc":"18230:72:11","nodeType":"YulFunctionCall","src":"18230:72:11"},"nativeSrc":"18230:72:11","nodeType":"YulExpressionStatement","src":"18230:72:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"18356:6:11","nodeType":"YulIdentifier","src":"18356:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"18369:9:11","nodeType":"YulIdentifier","src":"18369:9:11"},{"kind":"number","nativeSrc":"18380:2:11","nodeType":"YulLiteral","src":"18380:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18365:3:11","nodeType":"YulIdentifier","src":"18365:3:11"},"nativeSrc":"18365:18:11","nodeType":"YulFunctionCall","src":"18365:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18312:43:11","nodeType":"YulIdentifier","src":"18312:43:11"},"nativeSrc":"18312:72:11","nodeType":"YulFunctionCall","src":"18312:72:11"},"nativeSrc":"18312:72:11","nodeType":"YulExpressionStatement","src":"18312:72:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"17949:442:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18059:9:11","nodeType":"YulTypedName","src":"18059:9:11","type":""},{"name":"value2","nativeSrc":"18071:6:11","nodeType":"YulTypedName","src":"18071:6:11","type":""},{"name":"value1","nativeSrc":"18079:6:11","nodeType":"YulTypedName","src":"18079:6:11","type":""},{"name":"value0","nativeSrc":"18087:6:11","nodeType":"YulTypedName","src":"18087:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18098:4:11","nodeType":"YulTypedName","src":"18098:4:11","type":""}],"src":"17949:442:11"},{"body":{"nativeSrc":"18425:152:11","nodeType":"YulBlock","src":"18425:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18442:1:11","nodeType":"YulLiteral","src":"18442:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"18445:77:11","nodeType":"YulLiteral","src":"18445:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18435:6:11","nodeType":"YulIdentifier","src":"18435:6:11"},"nativeSrc":"18435:88:11","nodeType":"YulFunctionCall","src":"18435:88:11"},"nativeSrc":"18435:88:11","nodeType":"YulExpressionStatement","src":"18435:88:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18539:1:11","nodeType":"YulLiteral","src":"18539:1:11","type":"","value":"4"},{"kind":"number","nativeSrc":"18542:4:11","nodeType":"YulLiteral","src":"18542:4:11","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"18532:6:11","nodeType":"YulIdentifier","src":"18532:6:11"},"nativeSrc":"18532:15:11","nodeType":"YulFunctionCall","src":"18532:15:11"},"nativeSrc":"18532:15:11","nodeType":"YulExpressionStatement","src":"18532:15:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18563:1:11","nodeType":"YulLiteral","src":"18563:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"18566:4:11","nodeType":"YulLiteral","src":"18566:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18556:6:11","nodeType":"YulIdentifier","src":"18556:6:11"},"nativeSrc":"18556:15:11","nodeType":"YulFunctionCall","src":"18556:15:11"},"nativeSrc":"18556:15:11","nodeType":"YulExpressionStatement","src":"18556:15:11"}]},"name":"panic_error_0x21","nativeSrc":"18397:180:11","nodeType":"YulFunctionDefinition","src":"18397:180:11"},{"body":{"nativeSrc":"18626:43:11","nodeType":"YulBlock","src":"18626:43:11","statements":[{"nativeSrc":"18636:27:11","nodeType":"YulAssignment","src":"18636:27:11","value":{"arguments":[{"name":"value","nativeSrc":"18651:5:11","nodeType":"YulIdentifier","src":"18651:5:11"},{"kind":"number","nativeSrc":"18658:4:11","nodeType":"YulLiteral","src":"18658:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"18647:3:11","nodeType":"YulIdentifier","src":"18647:3:11"},"nativeSrc":"18647:16:11","nodeType":"YulFunctionCall","src":"18647:16:11"},"variableNames":[{"name":"cleaned","nativeSrc":"18636:7:11","nodeType":"YulIdentifier","src":"18636:7:11"}]}]},"name":"cleanup_t_uint8","nativeSrc":"18583:86:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18608:5:11","nodeType":"YulTypedName","src":"18608:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"18618:7:11","nodeType":"YulTypedName","src":"18618:7:11","type":""}],"src":"18583:86:11"},{"body":{"nativeSrc":"18736:51:11","nodeType":"YulBlock","src":"18736:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"18753:3:11","nodeType":"YulIdentifier","src":"18753:3:11"},{"arguments":[{"name":"value","nativeSrc":"18774:5:11","nodeType":"YulIdentifier","src":"18774:5:11"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"18758:15:11","nodeType":"YulIdentifier","src":"18758:15:11"},"nativeSrc":"18758:22:11","nodeType":"YulFunctionCall","src":"18758:22:11"}],"functionName":{"name":"mstore","nativeSrc":"18746:6:11","nodeType":"YulIdentifier","src":"18746:6:11"},"nativeSrc":"18746:35:11","nodeType":"YulFunctionCall","src":"18746:35:11"},"nativeSrc":"18746:35:11","nodeType":"YulExpressionStatement","src":"18746:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"18675:112:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18724:5:11","nodeType":"YulTypedName","src":"18724:5:11","type":""},{"name":"pos","nativeSrc":"18731:3:11","nodeType":"YulTypedName","src":"18731:3:11","type":""}],"src":"18675:112:11"},{"body":{"nativeSrc":"18971:367:11","nodeType":"YulBlock","src":"18971:367:11","statements":[{"nativeSrc":"18981:27:11","nodeType":"YulAssignment","src":"18981:27:11","value":{"arguments":[{"name":"headStart","nativeSrc":"18993:9:11","nodeType":"YulIdentifier","src":"18993:9:11"},{"kind":"number","nativeSrc":"19004:3:11","nodeType":"YulLiteral","src":"19004:3:11","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18989:3:11","nodeType":"YulIdentifier","src":"18989:3:11"},"nativeSrc":"18989:19:11","nodeType":"YulFunctionCall","src":"18989:19:11"},"variableNames":[{"name":"tail","nativeSrc":"18981:4:11","nodeType":"YulIdentifier","src":"18981:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19062:6:11","nodeType":"YulIdentifier","src":"19062:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"19075:9:11","nodeType":"YulIdentifier","src":"19075:9:11"},{"kind":"number","nativeSrc":"19086:1:11","nodeType":"YulLiteral","src":"19086:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19071:3:11","nodeType":"YulIdentifier","src":"19071:3:11"},"nativeSrc":"19071:17:11","nodeType":"YulFunctionCall","src":"19071:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"19018:43:11","nodeType":"YulIdentifier","src":"19018:43:11"},"nativeSrc":"19018:71:11","nodeType":"YulFunctionCall","src":"19018:71:11"},"nativeSrc":"19018:71:11","nodeType":"YulExpressionStatement","src":"19018:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19139:6:11","nodeType":"YulIdentifier","src":"19139:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"19152:9:11","nodeType":"YulIdentifier","src":"19152:9:11"},{"kind":"number","nativeSrc":"19163:2:11","nodeType":"YulLiteral","src":"19163:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19148:3:11","nodeType":"YulIdentifier","src":"19148:3:11"},"nativeSrc":"19148:18:11","nodeType":"YulFunctionCall","src":"19148:18:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"19099:39:11","nodeType":"YulIdentifier","src":"19099:39:11"},"nativeSrc":"19099:68:11","nodeType":"YulFunctionCall","src":"19099:68:11"},"nativeSrc":"19099:68:11","nodeType":"YulExpressionStatement","src":"19099:68:11"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19221:6:11","nodeType":"YulIdentifier","src":"19221:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"19234:9:11","nodeType":"YulIdentifier","src":"19234:9:11"},{"kind":"number","nativeSrc":"19245:2:11","nodeType":"YulLiteral","src":"19245:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19230:3:11","nodeType":"YulIdentifier","src":"19230:3:11"},"nativeSrc":"19230:18:11","nodeType":"YulFunctionCall","src":"19230:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"19177:43:11","nodeType":"YulIdentifier","src":"19177:43:11"},"nativeSrc":"19177:72:11","nodeType":"YulFunctionCall","src":"19177:72:11"},"nativeSrc":"19177:72:11","nodeType":"YulExpressionStatement","src":"19177:72:11"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"19303:6:11","nodeType":"YulIdentifier","src":"19303:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"19316:9:11","nodeType":"YulIdentifier","src":"19316:9:11"},{"kind":"number","nativeSrc":"19327:2:11","nodeType":"YulLiteral","src":"19327:2:11","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19312:3:11","nodeType":"YulIdentifier","src":"19312:3:11"},"nativeSrc":"19312:18:11","nodeType":"YulFunctionCall","src":"19312:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"19259:43:11","nodeType":"YulIdentifier","src":"19259:43:11"},"nativeSrc":"19259:72:11","nodeType":"YulFunctionCall","src":"19259:72:11"},"nativeSrc":"19259:72:11","nodeType":"YulExpressionStatement","src":"19259:72:11"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"18793:545:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18919:9:11","nodeType":"YulTypedName","src":"18919:9:11","type":""},{"name":"value3","nativeSrc":"18931:6:11","nodeType":"YulTypedName","src":"18931:6:11","type":""},{"name":"value2","nativeSrc":"18939:6:11","nodeType":"YulTypedName","src":"18939:6:11","type":""},{"name":"value1","nativeSrc":"18947:6:11","nodeType":"YulTypedName","src":"18947:6:11","type":""},{"name":"value0","nativeSrc":"18955:6:11","nodeType":"YulTypedName","src":"18955:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18966:4:11","nodeType":"YulTypedName","src":"18966:4:11","type":""}],"src":"18793:545:11"}]},"contents":"{\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct AtomicSwap.InitiateSwapMeta\n    function abi_decode_t_struct$_InitiateSwapMeta_$1379_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 256) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_struct$_InitiateSwapMeta_$1379_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_InitiateSwapMeta_$1379_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 256))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__to_t_bytes32_t_uint256_t_address_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1289":[{"length":32,"start":1296},{"length":32,"start":4892}]},"linkReferences":{},"object":"60806040526004361061012e5760003560e01c806394f1825b116100ab578063eb84e7f21161006f578063eb84e7f2146103d3578063f2fde38b14610417578063f4611fae14610440578063fb0c75491461047d578063fe2510ee146104a8578063ffdfa6de146104d157610135565b806394f1825b146102fd57806395ccea6714610328578063b401eb5614610351578063c4ddaaa41461036d578063dd781188146103aa57610135565b806378dc3356116100f257806378dc3356146102135780637ecebe001461023c5780638c8c2003146102795780638da5cb5b146102b6578063902d7236146102e157610135565b80633644e5151461013a5780633da0e66e1461016557806342655a4c146101a857806347899a0b146101d3578063715018a6146101fc57610135565b3661013557005b600080fd5b34801561014657600080fd5b5061014f61050e565b60405161015c91906127b9565b60405180910390f35b34801561017157600080fd5b5061018c6004803603810190610187919061280a565b610532565b60405161019f97969594939291906128ac565b60405180910390f35b3480156101b457600080fd5b506101bd61060a565b6040516101ca91906127b9565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f5919061291b565b61062e565b005b34801561020857600080fd5b50610211610b81565b005b34801561021f57600080fd5b5061023a6004803603810190610235919061291b565b610b95565b005b34801561024857600080fd5b50610263600480360381019061025e9190612987565b610fd6565b60405161027091906129b4565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b919061280a565b610fee565b6040516102ad91906129cf565b60405180910390f35b3480156102c257600080fd5b506102cb6110ac565b6040516102d891906129ea565b60405180910390f35b6102fb60048036038101906102f69190612a31565b6110d6565b005b34801561030957600080fd5b506103126110fa565b60405161031f91906129b4565b60405180910390f35b34801561033457600080fd5b5061034f600480360381019061034a9190612a98565b611101565b005b61036b60048036038101906103669190612b62565b61122d565b005b34801561037957600080fd5b50610394600480360381019061038f919061280a565b61155e565b6040516103a191906129cf565b60405180910390f35b3480156103b657600080fd5b506103d160048036038101906103cc9190612bc4565b61157e565b005b3480156103df57600080fd5b506103fa60048036038101906103f5919061280a565b6115cf565b60405161040e989796959493929190612c3f565b60405180910390f35b34801561042357600080fd5b5061043e60048036038101906104399190612987565b611691565b005b34801561044c57600080fd5b506104676004803603810190610462919061280a565b611717565b60405161047491906129cf565b60405180910390f35b34801561048957600080fd5b506104926117d4565b60405161049f91906129b4565b60405180910390f35b3480156104b457600080fd5b506104cf60048036038101906104ca919061280a565b6117da565b005b3480156104dd57600080fd5b506104f860048036038101906104f3919061280a565b611c43565b60405161050591906129cf565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600080600080600080600460008a815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836005015484600101548560060160009054906101000a900460ff168660060160019054906101000a900460ff16975097509750975097509750975050919395979092949650565b7fdae6e6c77828941043676793d78986b77a85f6a115edd49e62d3e4e0911ef44181565b610636611c63565b6000600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106d7576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff1615610720576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615610769576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015442106107a6576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82826040516020016107b89190612cde565b6040516020818303038152906040528051906020012014610805576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461088e576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610917576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a5d5760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600501546040516109da90612d2a565b60006040518083038185875af1925050503d8060008114610a17576040519150601f19603f3d011682016040523d82523d6000602084013e610a1c565b606091505b5050905080610a57576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610ad5565b610ad48160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610b6c93929190612d3f565b60405180910390a350610b7d611d28565b5050565b610b89611d32565b610b936000611db9565b565b610b9d611c63565b6000600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c3e576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff1615610c87576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615610cd0576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600101544210610d0d576040517f7a6fcaa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282604051602001610d1f9190612cde565b6040516020818303038152906040528051906020012014610d6c576040517fabab6bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610eb25760008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260050154604051610e2f90612d2a565b60006040518083038185875af1925050503d8060008114610e6c576040519150601f19603f3d011682016040523d82523d6000602084013e610e71565b606091505b5050905080610eac576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610f2a565b610f298160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f7101a42199d5184c26c61de81f21606338bab569912efbd88059560729c877018360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846005015486604051610fc193929190612d3f565b60405180910390a350610fd2611d28565b5050565b60026020528060005260406000206000915090505481565b600080600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061107357508060060160009054906101000a900460ff165b8061108c57508060060160019054906101000a900460ff165b1561109b5760009150506110a7565b80600101544210159150505b919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110de611c63565b6110ec848484600085611e7f565b6110f4611d28565b50505050565b62093a8081565b611109611d32565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f65760006111476110ac565b73ffffffffffffffffffffffffffffffffffffffff168260405161116a90612d2a565b60006040518083038185875af1925050503d80600081146111a7576040519150601f19603f3d011682016040523d82523d6000602084013e6111ac565b606091505b50509050806111f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e790612dd3565b60405180910390fd5b50611229565b6112286112016110ac565b828473ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b5050565b611235611c63565b8260e00135421115611273576040517f0819bdcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007fdae6e6c77828941043676793d78986b77a85f6a115edd49e62d3e4e0911ef4418460000160208101906112a99190612987565b856020013586604001358760600160208101906112c69190612987565b8860800160208101906112d99190612987565b8960a001358a60c001358b60e0013560405160200161130099989796959493929190612df3565b60405160208183030381529060405280519060200120905060007f00000000000000000000000000000000000000000000000000000000000000008260405160200161134d929190612ed7565b6040516020818303038152906040528051906020012090506003600082815260200190815260200160002060009054906101000a900460ff16156113bd576040517f900bb2c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061141685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508361239490919063ffffffff16565b905085600001602081019061142b9190612987565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461148f576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600260008760000160208101906114d29190612987565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061151d90612f3d565b919050555061154e866020013587604001358860600160208101906115429190612987565b60008a60a00135611e7f565b505050611559611d28565b505050565b60036020528060005260406000206000915054906101000a900460ff1681565b611586611c63565b6115938585858585611e7f565b6115c03330838573ffffffffffffffffffffffffffffffffffffffff166123c0909392919063ffffffff16565b6115c8611d28565b5050505050565b60046020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905088565b611699611d32565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361170b5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161170291906129ea565b60405180910390fd5b61171481611db9565b50565b600080600460008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061179c57508060060160009054906101000a900460ff165b806117b557508060060160019054906101000a900460ff165b156117c45760009150506117cf565b806001015442109150505b919050565b610e1081565b6117e2611c63565b6000600460008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611883576040517f5ec69df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160009054906101000a900460ff16156118cc576040517ff6c6618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060060160019054906101000a900460ff1615611915576040517fa2640b2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010154421015611953576040517f621e25c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119dc576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160016101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b225760008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260050154604051611a9f90612d2a565b60006040518083038185875af1925050503d8060008114611adc576040519150601f19603f3d011682016040523d82523d6000602084013e611ae1565b606091505b5050905080611b1c576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50611b9a565b611b998160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ca99092919063ffffffff16565b5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827fa19ac6ff80a8c71a18b3fd648fa480fa092eceb40ca2af1fadc2a1cc6e1baf7b8360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460050154604051611c2f929190612f85565b60405180910390a350611c40611d28565b50565b60056020528060005260406000206000915054906101000a900460ff1681565b600260005403611c9f576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b611d23838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611cdc929190612f85565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612442565b505050565b6001600081905550565b611d3a6124e4565b73ffffffffffffffffffffffffffffffffffffffff16611d586110ac565b73ffffffffffffffffffffffffffffffffffffffff1614611db757611d7b6124e4565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611dae91906129ea565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6005600086815260200190815260200160002060009054906101000a900460ff1615611ed7576040517fe9204a0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1042611ee59190612fae565b841080611eff575062093a8042611efc9190612fae565b84115b15611f36576040517ff8d10e8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f9c576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008103611fd6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361204457803414612043576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461212c57808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016120b291906129ea565b602060405180830381865afa1580156120cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f39190612ff7565b101561212b576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6040518061010001604052808681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016000151581526020016000151581525060046000878152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff02191690831515021790555090505060016005600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16867ff7fed894f2fc26a47c345a04b644fb954bf11c27c2eec80f3f7ffb2cb07ea74285858960405161238593929190613024565b60405180910390a45050505050565b6000806000806123a486866124ec565b9250925092506123b48282612548565b82935050505092915050565b61243c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016123f59392919061305b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612442565b50505050565b600080602060008451602086016000885af180612465576040513d6000823e3d81fd5b3d92506000519150506000821461248057600181141561249c565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b156124de57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016124d591906129ea565b60405180910390fd5b50505050565b600033905090565b600080600060418451036125315760008060006020870151925060408701519150606087015160001a9050612523888285856126ac565b955095509550505050612541565b60006002855160001b9250925092505b9250925092565b6000600381111561255c5761255b613092565b5b82600381111561256f5761256e613092565b5b03156126a8576001600381111561258957612588613092565b5b82600381111561259c5761259b613092565b5b036125d3576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156125e7576125e6613092565b5b8260038111156125fa576125f9613092565b5b0361263f578060001c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161263691906129b4565b60405180910390fd5b60038081111561265257612651613092565b5b82600381111561266557612664613092565b5b036126a757806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161269e91906127b9565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156126ec576000600385925092509250612796565b60006001888888886040516000815260200160405260405161271194939291906130dd565b6020604051602081039080840390855afa158015612733573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361278757600060016000801b93509350935050612796565b8060008060001b935093509350505b9450945094915050565b6000819050919050565b6127b3816127a0565b82525050565b60006020820190506127ce60008301846127aa565b92915050565b600080fd5b600080fd5b6127e7816127a0565b81146127f257600080fd5b50565b600081359050612804816127de565b92915050565b6000602082840312156128205761281f6127d4565b5b600061282e848285016127f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061286282612837565b9050919050565b61287281612857565b82525050565b6000819050919050565b61288b81612878565b82525050565b60008115159050919050565b6128a681612891565b82525050565b600060e0820190506128c1600083018a612869565b6128ce6020830189612869565b6128db6040830188612869565b6128e86060830187612882565b6128f56080830186612882565b61290260a083018561289d565b61290f60c083018461289d565b98975050505050505050565b60008060408385031215612932576129316127d4565b5b6000612940858286016127f5565b9250506020612951858286016127f5565b9150509250929050565b61296481612857565b811461296f57600080fd5b50565b6000813590506129818161295b565b92915050565b60006020828403121561299d5761299c6127d4565b5b60006129ab84828501612972565b91505092915050565b60006020820190506129c96000830184612882565b92915050565b60006020820190506129e4600083018461289d565b92915050565b60006020820190506129ff6000830184612869565b92915050565b612a0e81612878565b8114612a1957600080fd5b50565b600081359050612a2b81612a05565b92915050565b60008060008060808587031215612a4b57612a4a6127d4565b5b6000612a59878288016127f5565b9450506020612a6a87828801612a1c565b9350506040612a7b87828801612972565b9250506060612a8c87828801612a1c565b91505092959194509250565b60008060408385031215612aaf57612aae6127d4565b5b6000612abd85828601612972565b9250506020612ace85828601612a1c565b9150509250929050565b600080fd5b60006101008284031215612af457612af3612ad8565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612b2257612b21612afd565b5b8235905067ffffffffffffffff811115612b3f57612b3e612b02565b5b602083019150836001820283011115612b5b57612b5a612b07565b5b9250929050565b60008060006101208486031215612b7c57612b7b6127d4565b5b6000612b8a86828701612add565b93505061010084013567ffffffffffffffff811115612bac57612bab6127d9565b5b612bb886828701612b0c565b92509250509250925092565b600080600080600060a08688031215612be057612bdf6127d4565b5b6000612bee888289016127f5565b9550506020612bff88828901612a1c565b9450506040612c1088828901612972565b9350506060612c2188828901612972565b9250506080612c3288828901612a1c565b9150509295509295909350565b600061010082019050612c55600083018b6127aa565b612c62602083018a612882565b612c6f6040830189612869565b612c7c6060830188612869565b612c896080830187612869565b612c9660a0830186612882565b612ca360c083018561289d565b612cb060e083018461289d565b9998505050505050505050565b6000819050919050565b612cd8612cd3826127a0565b612cbd565b82525050565b6000612cea8284612cc7565b60208201915081905092915050565b600081905092915050565b50565b6000612d14600083612cf9565b9150612d1f82612d04565b600082019050919050565b6000612d3582612d07565b9150819050919050565b6000606082019050612d546000830186612869565b612d616020830185612882565b612d6e60408301846127aa565b949350505050565b600082825260208201905092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000612dbd601383612d76565b9150612dc882612d87565b602082019050919050565b60006020820190508181036000830152612dec81612db0565b9050919050565b600061012082019050612e09600083018c6127aa565b612e16602083018b612869565b612e23604083018a6127aa565b612e306060830189612882565b612e3d6080830188612869565b612e4a60a0830187612869565b612e5760c0830186612882565b612e6460e0830185612882565b612e72610100830184612882565b9a9950505050505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ec1600283612e80565b9150612ecc82612e8b565b600282019050919050565b6000612ee282612eb4565b9150612eee8285612cc7565b602082019150612efe8284612cc7565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f4882612878565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f7a57612f79612f0e565b5b600182019050919050565b6000604082019050612f9a6000830185612869565b612fa76020830184612882565b9392505050565b6000612fb982612878565b9150612fc483612878565b9250828201905080821115612fdc57612fdb612f0e565b5b92915050565b600081519050612ff181612a05565b92915050565b60006020828403121561300d5761300c6127d4565b5b600061301b84828501612fe2565b91505092915050565b60006060820190506130396000830186612869565b6130466020830185612882565b6130536040830184612882565b949350505050565b60006060820190506130706000830186612869565b61307d6020830185612869565b61308a6040830184612882565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b6130d7816130c1565b82525050565b60006080820190506130f260008301876127aa565b6130ff60208301866130ce565b61310c60408301856127aa565b61311960608301846127aa565b9594505050505056fea2646970667358221220fd5dcda3a991b4be37a2b0622f8c9fd1fde4238f88345da5f8867c7d250d964c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94F1825B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xEB84E7F2 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEB84E7F2 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xF4611FAE EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xFB0C7549 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xFE2510EE EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xFFDFA6DE EQ PUSH2 0x4D1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x94F1825B EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xB401EB56 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xC4DDAAA4 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xDD781188 EQ PUSH2 0x3AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x78DC3356 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x78DC3356 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x8C8C2003 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x902D7236 EQ PUSH2 0x2E1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x3DA0E66E EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x42655A4C EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x47899A0B EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FC JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x291B JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0xB81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x291B JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH2 0x1101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2B62 JUMP JUMPDEST PUSH2 0x122D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40E SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH2 0x1691 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x17DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH32 0xDAE6E6C77828941043676793D78986B77A85F6A115EDD49E62D3E4E0911EF441 DUP2 JUMP JUMPDEST PUSH2 0x636 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x9DA SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xAD4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xB6C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xB7D PUSH2 0x1D28 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB89 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0xB93 PUSH1 0x0 PUSH2 0x1DB9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB9D PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7A6FCAA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH32 0xABAB6BD700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xE2F SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x7101A42199D5184C26C61DE81F21606338BAB569912EFBD88059560729C87701 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xFC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xFD2 PUSH2 0x1D28 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1073 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x108C JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x109B JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x10A7 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x10EC DUP5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1E7F JUMP JUMPDEST PUSH2 0x10F4 PUSH2 0x1D28 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x1109 PUSH2 0x1D32 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F6 JUMPI PUSH1 0x0 PUSH2 0x1147 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x116A SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E7 SWAP1 PUSH2 0x2DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x1201 PUSH2 0x10AC JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1235 PUSH2 0x1C63 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x819BDCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xDAE6E6C77828941043676793D78986B77A85F6A115EDD49E62D3E4E0911EF441 DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD CALLDATALOAD DUP7 PUSH1 0x40 ADD CALLDATALOAD DUP8 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST DUP9 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST DUP10 PUSH1 0xA0 ADD CALLDATALOAD DUP11 PUSH1 0xC0 ADD CALLDATALOAD DUP12 PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1300 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x134D SWAP3 SWAP2 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x900BB2C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH2 0x2394 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x151D SWAP1 PUSH2 0x2F3D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x154E DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP8 PUSH1 0x40 ADD CALLDATALOAD DUP9 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1542 SWAP2 SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x0 DUP11 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1E7F JUMP JUMPDEST POP POP POP PUSH2 0x1559 PUSH2 0x1D28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1586 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1593 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1E7F JUMP JUMPDEST PUSH2 0x15C0 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x23C0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15C8 PUSH2 0x1D28 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x1699 PUSH2 0x1D32 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1702 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1714 DUP2 PUSH2 0x1DB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x179C JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x17B5 JUMPI POP DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x17C4 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x17CF JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x17E2 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5EC69DF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x18CC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF6C6618700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1915 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2640B2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x621E25C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1A9F SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1ADC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x1B99 DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x5 ADD SLOAD DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xA19AC6FF80A8C71A18B3FD648FA480FA092ECEB40CA2AF1FADC2A1CC6E1BAF7B DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1C2F SWAP3 SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1C40 PUSH2 0x1D28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1C9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D23 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1CDC SWAP3 SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2442 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D3A PUSH2 0x24E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D58 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DB7 JUMPI PUSH2 0x1D7B PUSH2 0x24E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAE SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1ED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE9204A0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 TIMESTAMP PUSH2 0x1EE5 SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST DUP5 LT DUP1 PUSH2 0x1EFF JUMPI POP PUSH3 0x93A80 TIMESTAMP PUSH2 0x1EFC SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST DUP5 GT JUMPDEST ISZERO PUSH2 0x1F36 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8D10E8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x9C8D2CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2044 JUMPI DUP1 CALLVALUE EQ PUSH2 0x2043 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x212C JUMPI DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B2 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20F3 SWAP2 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST LT ISZERO PUSH2 0x212B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0xF7FED894F2FC26A47C345A04B644FB954BF11C27C2EEC80F3F7FFB2CB07EA742 DUP6 DUP6 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2385 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x23A4 DUP7 DUP7 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x23B4 DUP3 DUP3 PUSH2 0x2548 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x243C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x23F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x305B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2442 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x2465 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x2480 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x249C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x24DE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D5 SWAP2 SWAP1 PUSH2 0x29EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2531 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2523 DUP9 DUP3 DUP6 DUP6 PUSH2 0x26AC JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255C JUMPI PUSH2 0x255B PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x256F JUMPI PUSH2 0x256E PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x26A8 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x259C JUMPI PUSH2 0x259B PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25E7 JUMPI PUSH2 0x25E6 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25FA JUMPI PUSH2 0x25F9 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x263F JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2636 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2652 JUMPI PUSH2 0x2651 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2665 JUMPI PUSH2 0x2664 PUSH2 0x3092 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x26A7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269E SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x26EC JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2711 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2733 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2787 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2796 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B3 DUP2 PUSH2 0x27A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27E7 DUP2 PUSH2 0x27A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x27F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2804 DUP2 PUSH2 0x27DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2820 JUMPI PUSH2 0x281F PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x282E DUP5 DUP3 DUP6 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2862 DUP3 PUSH2 0x2837 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2872 DUP2 PUSH2 0x2857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288B DUP2 PUSH2 0x2878 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A6 DUP2 PUSH2 0x2891 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x28C1 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x28CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x28DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x28E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x28F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2902 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x289D JUMP JUMPDEST PUSH2 0x290F PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x289D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2932 JUMPI PUSH2 0x2931 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2940 DUP6 DUP3 DUP7 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2951 DUP6 DUP3 DUP7 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2964 DUP2 PUSH2 0x2857 JUMP JUMPDEST DUP2 EQ PUSH2 0x296F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2981 DUP2 PUSH2 0x295B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x299D JUMPI PUSH2 0x299C PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29AB DUP5 DUP3 DUP6 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A0E DUP2 PUSH2 0x2878 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A2B DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A4B JUMPI PUSH2 0x2A4A PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A59 DUP8 DUP3 DUP9 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A6A DUP8 DUP3 DUP9 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A7B DUP8 DUP3 DUP9 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2A8C DUP8 DUP3 DUP9 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AAF JUMPI PUSH2 0x2AAE PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2ABD DUP6 DUP3 DUP7 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2ACE DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF4 JUMPI PUSH2 0x2AF3 PUSH2 0x2AD8 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B22 JUMPI PUSH2 0x2B21 PUSH2 0x2AFD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3F JUMPI PUSH2 0x2B3E PUSH2 0x2B02 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2B07 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B7C JUMPI PUSH2 0x2B7B PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B8A DUP7 DUP3 DUP8 ADD PUSH2 0x2ADD JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BAC JUMPI PUSH2 0x2BAB PUSH2 0x27D9 JUMP JUMPDEST JUMPDEST PUSH2 0x2BB8 DUP7 DUP3 DUP8 ADD PUSH2 0x2B0C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BE0 JUMPI PUSH2 0x2BDF PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BEE DUP9 DUP3 DUP10 ADD PUSH2 0x27F5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2BFF DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2C10 DUP9 DUP3 DUP10 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2C21 DUP9 DUP3 DUP10 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2C32 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2C55 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x2C62 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2C6F PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2C7C PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2C89 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2C96 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2CA3 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x289D JUMP JUMPDEST PUSH2 0x2CB0 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x289D JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD8 PUSH2 0x2CD3 DUP3 PUSH2 0x27A0 JUMP JUMPDEST PUSH2 0x2CBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CEA DUP3 DUP5 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D14 PUSH1 0x0 DUP4 PUSH2 0x2CF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1F DUP3 PUSH2 0x2D04 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D35 DUP3 PUSH2 0x2D07 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D54 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2D61 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2D6E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBD PUSH1 0x13 DUP4 PUSH2 0x2D76 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC8 DUP3 PUSH2 0x2D87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DEC DUP2 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x2E09 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x2E16 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2E23 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x2E30 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2E3D PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2E4A PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2E57 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2E64 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x2E72 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC1 PUSH1 0x2 DUP4 PUSH2 0x2E80 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ECC DUP3 PUSH2 0x2E8B JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE2 DUP3 PUSH2 0x2EB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEE DUP3 DUP6 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2EFE DUP3 DUP5 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F48 DUP3 PUSH2 0x2878 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2F7A JUMPI PUSH2 0x2F79 PUSH2 0x2F0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x2FA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB9 DUP3 PUSH2 0x2878 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP4 PUSH2 0x2878 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FDC JUMPI PUSH2 0x2FDB PUSH2 0x2F0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FF1 DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x300D JUMPI PUSH2 0x300C PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x301B DUP5 DUP3 DUP6 ADD PUSH2 0x2FE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3039 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x3046 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2882 JUMP JUMPDEST PUSH2 0x3053 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3070 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x307D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x308A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D7 DUP2 PUSH2 0x30C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x30F2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x30FF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30CE JUMP JUMPDEST PUSH2 0x310C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27AA JUMP JUMPDEST PUSH2 0x3119 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TSTORE 0xCD LOG3 0xA9 SWAP2 0xB4 0xBE CALLDATACOPY LOG2 0xB0 PUSH3 0x2F8C9F 0xD1 REVERT 0xE4 0x23 DUP16 DUP9 CALLVALUE TSTORE 0xA5 0xF8 DUP7 PUSH29 0x7D250D964C64736F6C6343000818003300000000000000000000000000 ","sourceMap":"577:16181:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15635:504;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1135:219;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11273:1623;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;9641:1334:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1484:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14846:300;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4550:242:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3698:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16334:320;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5014:1625;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1593:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7250:395;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3402:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14375:301:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3599:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13022:1181;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3502:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:41;;;:::o;15635:504::-;15702:17;15729;15756:13;15779:14;15803:16;15829:14;15853:13;15883:17;15903:5;:15;15909:8;15903:15;;;;;;;;;;;15883:35;;15949:4;:14;;;;;;;;;;;;15977:4;:14;;;;;;;;;;;;16005:4;:10;;;;;;;;;;;;16029:4;:11;;;16054:4;:13;;;16081:4;:14;;;;;;;;;;;;16109:4;:13;;;;;;;;;;;;15928:204;;;;;;;;;;;;;;;15635:504;;;;;;;;;:::o;1135:219::-;1184:170;1135:219;:::o;11273:1623::-;2500:21:7;:19;:21::i;:::-;11372:17:10::1;11392:5;:15;11398:8;11392:15;;;;;;;;;;;11372:35;;11456:1;11430:28;;:4;:14;;;;;;;;;;;;:28;;::::0;11426:80:::1;;11481:14;;;;;;;;;;;;;;11426:80;11528:4;:14;;;;;;;;;;;;11524:74;;;11565:22;;;;;;;;;;;;;;11524:74;11620:4;:13;;;;;;;;;;;;11616:72;;;11656:21;;;;;;;;;;;;;;11616:72;11729:4;:13;;;11710:15;:32;11706:87;;11765:17;;;;;;;;;;;;;;11706:87;11925:8;11913:6;11896:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;11886:35;;;;;;:47;11882:100;;11956:15;;;;;;;;;;;;;;11882:100;12076:4;:14;;;;;;;;;;;;12062:28;;:10;:28;;;12058:84;;12113:18;;;;;;;;;;;;;;12058:84;12255:4;:14;;;;;;;;;;;;12241:28;;:10;:28;;;12237:84;;12292:18;;;;;;;;;;;;;;12237:84;12356:4;12339;:14;;;:21;;;;;;;;;;;;;;;;;;12470:1;12448:24;;:4;:10;;;;;;;;;;;;:24;;::::0;12444:350:::1;;12517:12;12535:4;:14;;;;;;;;;;;;:19;;12562:4;:11;;;12535:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12516:62;;;12597:7;12592:70;;12631:16;;;;;;;;;;;;;;12592:70;12474:198;12444:350;;;12723:60;12755:4;:14;;;;;;;;;;;;12771:4;:11;;;12730:4;:10;;;;;;;;;;;;12723:31;;;;:60;;;;;:::i;:::-;12444:350;12841:4;:14;;;;;;;;;;;;12817:72;;12831:8;12817:72;12857:4;:10;;;;;;;;;;;;12869:4;:11;;;12882:6;12817:72;;;;;;;;:::i;:::-;;;;;;;;11362:1534;2542:20:7::0;:18;:20::i;:::-;11273:1623:10;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;9641:1334:10:-;2500:21:7;:19;:21::i;:::-;9729:17:10::1;9749:5;:15;9755:8;9749:15;;;;;;;;;;;9729:35;;9813:1;9787:28;;:4;:14;;;;;;;;;;;;:28;;::::0;9783:80:::1;;9838:14;;;;;;;;;;;;;;9783:80;9885:4;:14;;;;;;;;;;;;9881:74;;;9922:22;;;;;;;;;;;;;;9881:74;9977:4;:13;;;;;;;;;;;;9973:72;;;10013:21;;;;;;;;;;;;;;9973:72;10086:4;:13;;;10067:15;:32;10063:87;;10122:17;;;;;;;;;;;;;;10063:87;10282:8;10270:6;10253:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;10243:35;;;;;;:47;10239:100;;10313:15;;;;;;;;;;;;;;10239:100;10460:4;10443;:14;;;:21;;;;;;;;;;;;;;;;;;10549:1;10527:24;;:4;:10;;;;;;;;;;;;:24;;::::0;10523:350:::1;;10596:12;10614:4;:14;;;;;;;;;;;;:19;;10641:4;:11;;;10614:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10595:62;;;10676:7;10671:70;;10710:16;;;;;;;;;;;;;;10671:70;10553:198;10523:350;;;10802:60;10834:4;:14;;;;;;;;;;;;10850:4;:11;;;10809:4;:10;;;;;;;;;;;;10802:31;;;;:60;;;;;:::i;:::-;10523:350;10920:4;:14;;;;;;;;;;;;10896:72;;10910:8;10896:72;10936:4;:10;;;;;;;;;;;;10948:4;:11;;;10961:6;10896:72;;;;;;;;:::i;:::-;;;;;;;;9719:1256;2542:20:7::0;:18;:20::i;:::-;9641:1334:10;;:::o;1484:41::-;;;;;;;;;;;;;;;;;:::o;14846:300::-;14906:4;14922:17;14942:5;:15;14948:8;14942:15;;;;;;;;;;;14922:35;;15006:1;14980:28;;:4;:14;;;;;;;;;;;;:28;;;:46;;;;15012:4;:14;;;;;;;;;;;;14980:46;:63;;;;15030:4;:13;;;;;;;;;;;;14980:63;14976:106;;;15066:5;15059:12;;;;;14976:106;15126:4;:13;;;15107:15;:32;;15100:39;;;14846:300;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4550:242:10:-;2500:21:7;:19;:21::i;:::-;4721:64:10::1;4735:8;4745;4755:9;4774:1;4778:6;4721:13;:64::i;:::-;2542:20:7::0;:18;:20::i;:::-;4550:242:10;;;;:::o;3698:45::-;3737:6;3698:45;:::o;16334:320::-;1531:13:0;:11;:13::i;:::-;16442:1:10::1;16425:19;;:5;:19;;::::0;16421:227:::1;;16461:12;16479:7;:5;:7::i;:::-;:12;;16499:6;16479:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16460:50;;;16532:7;16524:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;16446:128;16421:227;;;16594:43;16621:7;:5;:7::i;:::-;16630:6;16601:5;16594:26;;;;:43;;;;;:::i;:::-;16421:227;16334:320:::0;;:::o;5014:1625::-;2500:21:7;:19;:21::i;:::-;5223:8:10::1;:17;;;5205:15;:35;5201:91;;;5263:18;;;;;;;;;;;;;;5201:91;5489:18;1184:170;5601:8;:18;;;;;;;;;;:::i;:::-;5637:8;:17;;;5672:8;:17;;;5707:8;:18;;;;;;;;;;:::i;:::-;5743:8;:14;;;;;;;;;;:::i;:::-;5775:8;:15;;;5808:8;:14;;;5840:8;:17;;;5533:338;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5510:371;;;;;;5489:392;;5900:12;5967:16;5985:10;5938:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5915:91;;;;;;5900:106;;6073:18;:24;6092:4;6073:24;;;;;;;;;;;;;;;;;;;;;6069:84;;;6120:22;;;;;;;;;;;;;;6069:84;6199:14;6216:23;6229:9;;6216:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;:12;;:23;;;;:::i;:::-;6199:40;;6263:8;:18;;;;;;;;;;:::i;:::-;6253:28;;:6;:28;;;6249:84;;6304:18;;;;;;;;;;;;;;6249:84;6432:4;6405:18;:24;6424:4;6405:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;6446:6;:26;6453:8;:18;;;;;;;;;;:::i;:::-;6446:26;;;;;;;;;;;;;;;;:28;;;;;;;;;:::i;:::-;;;;;;6532:100;6546:8;:17;;;6565:8;:17;;;6584:8;:18;;;;;;;;;;:::i;:::-;6612:1;6616:8;:15;;;6532:13;:100::i;:::-;5154:1485;;;2542:20:7::0;:18;:20::i;:::-;5014:1625:10;;;:::o;1593:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;7250:395::-;2500:21:7;:19;:21::i;:::-;7441:59:10::1;7455:8;7465;7475:9;7486:5;7493:6;7441:13;:59::i;:::-;7573:65;7604:10;7624:4;7631:6;7580:5;7573:30;;;;:65;;;;;;:::i;:::-;2542:20:7::0;:18;:20::i;:::-;7250:395:10;;;;;:::o;3402:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;14375:301:10:-;14437:4;14453:17;14473:5;:15;14479:8;14473:15;;;;;;;;;;;14453:35;;14537:1;14511:28;;:4;:14;;;;;;;;;;;;:28;;;:46;;;;14543:4;:14;;;;;;;;;;;;14511:46;:63;;;;14561:4;:13;;;;;;;;;;;;14511:63;14507:106;;;14597:5;14590:12;;;;;14507:106;14656:4;:13;;;14638:15;:31;14631:38;;;14375:301;;;;:::o;3599:46::-;3638:7;3599:46;:::o;13022:1181::-;2500:21:7;:19;:21::i;:::-;13092:17:10::1;13112:5;:15;13118:8;13112:15;;;;;;;;;;;13092:35;;13176:1;13150:28;;:4;:14;;;;;;;;;;;;:28;;::::0;13146:80:::1;;13201:14;;;;;;;;;;;;;;13146:80;13248:4;:14;;;;;;;;;;;;13244:74;;;13285:22;;;;;;;;;;;;;;13244:74;13340:4;:13;;;;;;;;;;;;13336:72;;;13376:21;;;;;;;;;;;;;;13336:72;13448:4;:13;;;13430:15;:31;13426:89;;;13484:20;;;;;;;;;;;;;;13426:89;13592:4;:14;;;;;;;;;;;;13578:28;;:10;:28;;;13574:84;;13629:18;;;;;;;;;;;;;;13574:84;13692:4;13676;:13;;;:20;;;;;;;;;;;;;;;;;;13786:1;13764:24;;:4;:10;;;;;;;;;;;;:24;;::::0;13760:350:::1;;13833:12;13851:4;:14;;;;;;;;;;;;:19;;13878:4;:11;;;13851:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13832:62;;;13913:7;13908:70;;13947:16;;;;;;;;;;;;;;13908:70;13790:198;13760:350;;;14039:60;14071:4;:14;;;;;;;;;;;;14087:4;:11;;;14046:4;:10;;;;;;;;;;;;14039:31;;;;:60;;;;;:::i;:::-;13760:350;14156:4;:14;;;;;;;;;;;;14133:63;;14146:8;14133:63;14172:4;:10;;;;;;;;;;;;14184:4;:11;;;14133:63;;;;;;;:::i;:::-;;;;;;;;13082:1121;2542:20:7::0;:18;:20::i;:::-;13022:1181:10;:::o;3502:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;1219:160:5:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2888:208:7:-;1857:1;3068:7;:21;;;;2888:208::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7988:1468:10:-;8166:12;:22;8179:8;8166:22;;;;;;;;;;;;;;;;;;;;;8162:81;;;8211:21;;;;;;;;;;;;;;8162:81;3638:7;8276:15;:30;;;;:::i;:::-;8265:8;:41;:86;;;;3737:6;8321:15;:30;;;;:::i;:::-;8310:8;:41;8265:86;8261:141;;;8374:17;;;;;;;;;;;;;;8261:141;8445:1;8424:23;;:9;:23;;;8420:79;;8470:18;;;;;;;;;;;;;;8420:79;8531:1;8521:6;:11;8517:64;;8555:15;;;;;;;;;;;;;;8517:64;8681:1;8664:19;;:5;:19;;;8660:129;;8716:6;8703:9;:19;8699:80;;8749:15;;;;;;;;;;;;;;8699:80;8660:129;8869:1;8852:19;;:5;:19;;;8848:160;;8929:6;8898:5;8891:23;;;8915:10;8891:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;8887:111;;;8962:21;;;;;;;;;;;;;;8887:111;8848:160;9044:262;;;;;;;;9073:8;9044:262;;;;9105:8;9044:262;;;;9138:10;9044:262;;;;;;9173:9;9044:262;;;;;;9203:5;9044:262;;;;;;9230:6;9044:262;;;;9261:5;9044:262;;;;;;9290:5;9044:262;;;;;9026:5;:15;9032:8;9026:15;;;;;;;;;;;:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:4;9325:12;:22;9338:8;9325:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;9414:9;9378:71;;9402:10;9378:71;;9392:8;9378:71;9425:5;9432:6;9440:8;9378:71;;;;;;;;:::i;:::-;;;;;;;;7988:1468;;;;;:::o;3714:255:8:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;2129:778:8:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;5203:1551::-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7:77:11:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:77::-;1772:7;1801:5;1790:16;;1735:77;;;:::o;1818:118::-;1905:24;1923:5;1905:24;:::i;:::-;1900:3;1893:37;1818:118;;:::o;1942:90::-;1976:7;2019:5;2012:13;2005:21;1994:32;;1942:90;;;:::o;2038:109::-;2119:21;2134:5;2119:21;:::i;:::-;2114:3;2107:34;2038:109;;:::o;2153:862::-;2402:4;2440:3;2429:9;2425:19;2417:27;;2454:71;2522:1;2511:9;2507:17;2498:6;2454:71;:::i;:::-;2535:72;2603:2;2592:9;2588:18;2579:6;2535:72;:::i;:::-;2617;2685:2;2674:9;2670:18;2661:6;2617:72;:::i;:::-;2699;2767:2;2756:9;2752:18;2743:6;2699:72;:::i;:::-;2781:73;2849:3;2838:9;2834:19;2825:6;2781:73;:::i;:::-;2864:67;2926:3;2915:9;2911:19;2902:6;2864:67;:::i;:::-;2941;3003:3;2992:9;2988:19;2979:6;2941:67;:::i;:::-;2153:862;;;;;;;;;;:::o;3021:474::-;3089:6;3097;3146:2;3134:9;3125:7;3121:23;3117:32;3114:119;;;3152:79;;:::i;:::-;3114:119;3272:1;3297:53;3342:7;3333:6;3322:9;3318:22;3297:53;:::i;:::-;3287:63;;3243:117;3399:2;3425:53;3470:7;3461:6;3450:9;3446:22;3425:53;:::i;:::-;3415:63;;3370:118;3021:474;;;;;:::o;3501:122::-;3574:24;3592:5;3574:24;:::i;:::-;3567:5;3564:35;3554:63;;3613:1;3610;3603:12;3554:63;3501:122;:::o;3629:139::-;3675:5;3713:6;3700:20;3691:29;;3729:33;3756:5;3729:33;:::i;:::-;3629:139;;;;:::o;3774:329::-;3833:6;3882:2;3870:9;3861:7;3857:23;3853:32;3850:119;;;3888:79;;:::i;:::-;3850:119;4008:1;4033:53;4078:7;4069:6;4058:9;4054:22;4033:53;:::i;:::-;4023:63;;3979:117;3774:329;;;;:::o;4109:222::-;4202:4;4240:2;4229:9;4225:18;4217:26;;4253:71;4321:1;4310:9;4306:17;4297:6;4253:71;:::i;:::-;4109:222;;;;:::o;4337:210::-;4424:4;4462:2;4451:9;4447:18;4439:26;;4475:65;4537:1;4526:9;4522:17;4513:6;4475:65;:::i;:::-;4337:210;;;;:::o;4553:222::-;4646:4;4684:2;4673:9;4669:18;4661:26;;4697:71;4765:1;4754:9;4750:17;4741:6;4697:71;:::i;:::-;4553:222;;;;:::o;4781:122::-;4854:24;4872:5;4854:24;:::i;:::-;4847:5;4844:35;4834:63;;4893:1;4890;4883:12;4834:63;4781:122;:::o;4909:139::-;4955:5;4993:6;4980:20;4971:29;;5009:33;5036:5;5009:33;:::i;:::-;4909:139;;;;:::o;5054:765::-;5140:6;5148;5156;5164;5213:3;5201:9;5192:7;5188:23;5184:33;5181:120;;;5220:79;;:::i;:::-;5181:120;5340:1;5365:53;5410:7;5401:6;5390:9;5386:22;5365:53;:::i;:::-;5355:63;;5311:117;5467:2;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;:::i;:::-;5483:63;;5438:118;5595:2;5621:53;5666:7;5657:6;5646:9;5642:22;5621:53;:::i;:::-;5611:63;;5566:118;5723:2;5749:53;5794:7;5785:6;5774:9;5770:22;5749:53;:::i;:::-;5739:63;;5694:118;5054:765;;;;;;;:::o;5825:474::-;5893:6;5901;5950:2;5938:9;5929:7;5925:23;5921:32;5918:119;;;5956:79;;:::i;:::-;5918:119;6076:1;6101:53;6146:7;6137:6;6126:9;6122:22;6101:53;:::i;:::-;6091:63;;6047:117;6203:2;6229:53;6274:7;6265:6;6254:9;6250:22;6229:53;:::i;:::-;6219:63;;6174:118;5825:474;;;;;:::o;6305:117::-;6414:1;6411;6404:12;6470:241;6552:5;6593:3;6584:6;6579:3;6575:16;6571:26;6568:113;;;6600:79;;:::i;:::-;6568:113;6699:6;6690:15;;6470:241;;;;:::o;6717:117::-;6826:1;6823;6816:12;6840:117;6949:1;6946;6939:12;6963:117;7072:1;7069;7062:12;7099:552;7156:8;7166:6;7216:3;7209:4;7201:6;7197:17;7193:27;7183:122;;7224:79;;:::i;:::-;7183:122;7337:6;7324:20;7314:30;;7367:18;7359:6;7356:30;7353:117;;;7389:79;;:::i;:::-;7353:117;7503:4;7495:6;7491:17;7479:29;;7557:3;7549:4;7541:6;7537:17;7527:8;7523:32;7520:41;7517:128;;;7564:79;;:::i;:::-;7517:128;7099:552;;;;;:::o;7657:746::-;7772:6;7780;7788;7837:3;7825:9;7816:7;7812:23;7808:33;7805:120;;;7844:79;;:::i;:::-;7805:120;7964:1;7989:89;8070:7;8061:6;8050:9;8046:22;7989:89;:::i;:::-;7979:99;;7935:153;8155:3;8144:9;8140:19;8127:33;8187:18;8179:6;8176:30;8173:117;;;8209:79;;:::i;:::-;8173:117;8322:64;8378:7;8369:6;8358:9;8354:22;8322:64;:::i;:::-;8304:82;;;;8098:298;7657:746;;;;;:::o;8409:911::-;8504:6;8512;8520;8528;8536;8585:3;8573:9;8564:7;8560:23;8556:33;8553:120;;;8592:79;;:::i;:::-;8553:120;8712:1;8737:53;8782:7;8773:6;8762:9;8758:22;8737:53;:::i;:::-;8727:63;;8683:117;8839:2;8865:53;8910:7;8901:6;8890:9;8886:22;8865:53;:::i;:::-;8855:63;;8810:118;8967:2;8993:53;9038:7;9029:6;9018:9;9014:22;8993:53;:::i;:::-;8983:63;;8938:118;9095:2;9121:53;9166:7;9157:6;9146:9;9142:22;9121:53;:::i;:::-;9111:63;;9066:118;9223:3;9250:53;9295:7;9286:6;9275:9;9271:22;9250:53;:::i;:::-;9240:63;;9194:119;8409:911;;;;;;;;:::o;9326:973::-;9603:4;9641:3;9630:9;9626:19;9618:27;;9655:71;9723:1;9712:9;9708:17;9699:6;9655:71;:::i;:::-;9736:72;9804:2;9793:9;9789:18;9780:6;9736:72;:::i;:::-;9818;9886:2;9875:9;9871:18;9862:6;9818:72;:::i;:::-;9900;9968:2;9957:9;9953:18;9944:6;9900:72;:::i;:::-;9982:73;10050:3;10039:9;10035:19;10026:6;9982:73;:::i;:::-;10065;10133:3;10122:9;10118:19;10109:6;10065:73;:::i;:::-;10148:67;10210:3;10199:9;10195:19;10186:6;10148:67;:::i;:::-;10225;10287:3;10276:9;10272:19;10263:6;10225:67;:::i;:::-;9326:973;;;;;;;;;;;:::o;10305:79::-;10344:7;10373:5;10362:16;;10305:79;;;:::o;10390:157::-;10495:45;10515:24;10533:5;10515:24;:::i;:::-;10495:45;:::i;:::-;10490:3;10483:58;10390:157;;:::o;10553:256::-;10665:3;10680:75;10751:3;10742:6;10680:75;:::i;:::-;10780:2;10775:3;10771:12;10764:19;;10800:3;10793:10;;10553:256;;;;:::o;10815:147::-;10916:11;10953:3;10938:18;;10815:147;;;;:::o;10968:114::-;;:::o;11088:398::-;11247:3;11268:83;11349:1;11344:3;11268:83;:::i;:::-;11261:90;;11360:93;11449:3;11360:93;:::i;:::-;11478:1;11473:3;11469:11;11462:18;;11088:398;;;:::o;11492:379::-;11676:3;11698:147;11841:3;11698:147;:::i;:::-;11691:154;;11862:3;11855:10;;11492:379;;;:::o;11877:442::-;12026:4;12064:2;12053:9;12049:18;12041:26;;12077:71;12145:1;12134:9;12130:17;12121:6;12077:71;:::i;:::-;12158:72;12226:2;12215:9;12211:18;12202:6;12158:72;:::i;:::-;12240;12308:2;12297:9;12293:18;12284:6;12240:72;:::i;:::-;11877:442;;;;;;:::o;12325:169::-;12409:11;12443:6;12438:3;12431:19;12483:4;12478:3;12474:14;12459:29;;12325:169;;;;:::o;12500:::-;12640:21;12636:1;12628:6;12624:14;12617:45;12500:169;:::o;12675:366::-;12817:3;12838:67;12902:2;12897:3;12838:67;:::i;:::-;12831:74;;12914:93;13003:3;12914:93;:::i;:::-;13032:2;13027:3;13023:12;13016:19;;12675:366;;;:::o;13047:419::-;13213:4;13251:2;13240:9;13236:18;13228:26;;13300:9;13294:4;13290:20;13286:1;13275:9;13271:17;13264:47;13328:131;13454:4;13328:131;:::i;:::-;13320:139;;13047:419;;;:::o;13472:1108::-;13789:4;13827:3;13816:9;13812:19;13804:27;;13841:71;13909:1;13898:9;13894:17;13885:6;13841:71;:::i;:::-;13922:72;13990:2;13979:9;13975:18;13966:6;13922:72;:::i;:::-;14004;14072:2;14061:9;14057:18;14048:6;14004:72;:::i;:::-;14086;14154:2;14143:9;14139:18;14130:6;14086:72;:::i;:::-;14168:73;14236:3;14225:9;14221:19;14212:6;14168:73;:::i;:::-;14251;14319:3;14308:9;14304:19;14295:6;14251:73;:::i;:::-;14334;14402:3;14391:9;14387:19;14378:6;14334:73;:::i;:::-;14417;14485:3;14474:9;14470:19;14461:6;14417:73;:::i;:::-;14500;14568:3;14557:9;14553:19;14544:6;14500:73;:::i;:::-;13472:1108;;;;;;;;;;;;:::o;14586:148::-;14688:11;14725:3;14710:18;;14586:148;;;;:::o;14740:214::-;14880:66;14876:1;14868:6;14864:14;14857:90;14740:214;:::o;14960:400::-;15120:3;15141:84;15223:1;15218:3;15141:84;:::i;:::-;15134:91;;15234:93;15323:3;15234:93;:::i;:::-;15352:1;15347:3;15343:11;15336:18;;14960:400;;;:::o;15366:663::-;15607:3;15629:148;15773:3;15629:148;:::i;:::-;15622:155;;15787:75;15858:3;15849:6;15787:75;:::i;:::-;15887:2;15882:3;15878:12;15871:19;;15900:75;15971:3;15962:6;15900:75;:::i;:::-;16000:2;15995:3;15991:12;15984:19;;16020:3;16013:10;;15366:663;;;;;:::o;16035:180::-;16083:77;16080:1;16073:88;16180:4;16177:1;16170:15;16204:4;16201:1;16194:15;16221:233;16260:3;16283:24;16301:5;16283:24;:::i;:::-;16274:33;;16329:66;16322:5;16319:77;16316:103;;16399:18;;:::i;:::-;16316:103;16446:1;16439:5;16435:13;16428:20;;16221:233;;;:::o;16460:332::-;16581:4;16619:2;16608:9;16604:18;16596:26;;16632:71;16700:1;16689:9;16685:17;16676:6;16632:71;:::i;:::-;16713:72;16781:2;16770:9;16766:18;16757:6;16713:72;:::i;:::-;16460:332;;;;;:::o;16798:191::-;16838:3;16857:20;16875:1;16857:20;:::i;:::-;16852:25;;16891:20;16909:1;16891:20;:::i;:::-;16886:25;;16934:1;16931;16927:9;16920:16;;16955:3;16952:1;16949:10;16946:36;;;16962:18;;:::i;:::-;16946:36;16798:191;;;;:::o;16995:143::-;17052:5;17083:6;17077:13;17068:22;;17099:33;17126:5;17099:33;:::i;:::-;16995:143;;;;:::o;17144:351::-;17214:6;17263:2;17251:9;17242:7;17238:23;17234:32;17231:119;;;17269:79;;:::i;:::-;17231:119;17389:1;17414:64;17470:7;17461:6;17450:9;17446:22;17414:64;:::i;:::-;17404:74;;17360:128;17144:351;;;;:::o;17501:442::-;17650:4;17688:2;17677:9;17673:18;17665:26;;17701:71;17769:1;17758:9;17754:17;17745:6;17701:71;:::i;:::-;17782:72;17850:2;17839:9;17835:18;17826:6;17782:72;:::i;:::-;17864;17932:2;17921:9;17917:18;17908:6;17864:72;:::i;:::-;17501:442;;;;;;:::o;17949:::-;18098:4;18136:2;18125:9;18121:18;18113:26;;18149:71;18217:1;18206:9;18202:17;18193:6;18149:71;:::i;:::-;18230:72;18298:2;18287:9;18283:18;18274:6;18230:72;:::i;:::-;18312;18380:2;18369:9;18365:18;18356:6;18312:72;:::i;:::-;17949:442;;;;;;:::o;18397:180::-;18445:77;18442:1;18435:88;18542:4;18539:1;18532:15;18566:4;18563:1;18556:15;18583:86;18618:7;18658:4;18651:5;18647:16;18636:27;;18583:86;;;:::o;18675:112::-;18758:22;18774:5;18758:22;:::i;:::-;18753:3;18746:35;18675:112;;:::o;18793:545::-;18966:4;19004:3;18993:9;18989:19;18981:27;;19018:71;19086:1;19075:9;19071:17;19062:6;19018:71;:::i;:::-;19099:68;19163:2;19152:9;19148:18;19139:6;19099:68;:::i;:::-;19177:72;19245:2;19234:9;19230:18;19221:6;19177:72;:::i;:::-;19259;19327:2;19316:9;19312:18;19303:6;19259:72;:::i;:::-;18793:545;;;;;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","INITIATE_SWAP_TYPEHASH()":"42655a4c","MAX_TIMELOCK()":"94f1825b","MIN_TIMELOCK()":"fb0c7549","canComplete(bytes32)":"f4611fae","canRefund(bytes32)":"8c8c2003","completeSwap(bytes32,bytes32)":"78dc3356","completeSwapAsInitiator(bytes32,bytes32)":"47899a0b","emergencyWithdraw(address,uint256)":"95ccea67","getSwap(bytes32)":"3da0e66e","hashlockUsed(bytes32)":"ffdfa6de","initiateSwap(bytes32,uint256,address,uint256)":"902d7236","initiateSwapMeta((address,bytes32,uint256,address,address,uint256,uint256,uint256),bytes)":"b401eb56","initiateTokenSwap(bytes32,uint256,address,address,uint256)":"dd781188","nonces(address)":"7ecebe00","owner()":"8da5cb5b","refundSwap(bytes32)":"fe2510ee","renounceOwnership()":"715018a6","swaps(bytes32)":"eb84e7f2","transferOwnership(address)":"f2fde38b","usedMetaSignatures(bytes32)":"c4ddaaa4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HashlockAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimelock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAlreadyCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAlreadyRefunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimelockExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimelockNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"SwapCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"}],\"name\":\"SwapInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SwapRefunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIATE_SWAP_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"canComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"canRefund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"completeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"completeSwapAsInitiator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"getSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashlockUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct AtomicSwap.InitiateSwapMeta\",\"name\":\"metaData\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"initiateSwapMeta\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateTokenSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"refundSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"swaps\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedMetaSignatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Implements atomic swap functionality with hashlock and timelock This is the core contract for cross-chain swaps between Ethereum and Aptos Supports both ETH and ERC-20 tokens\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"canComplete(bytes32)\":{\"details\":\"Checks if a swap can be completed\",\"params\":{\"hashlock\":\"The hash of the secret\"},\"returns\":{\"_0\":\"bool True if the swap can be completed\"}},\"canRefund(bytes32)\":{\"details\":\"Checks if a swap can be refunded\",\"params\":{\"hashlock\":\"The hash of the secret\"},\"returns\":{\"_0\":\"bool True if the swap can be refunded\"}},\"completeSwap(bytes32,bytes32)\":{\"details\":\"Completes a swap by providing the secret\",\"params\":{\"hashlock\":\"The hash of the secret\",\"secret\":\"The secret that generates the hashlock\"}},\"completeSwapAsInitiator(bytes32,bytes32)\":{\"details\":\"Completes a swap by the initiator (for cross-chain atomic swaps) This allows the initiator to complete their own swap when they are also the recipient\",\"params\":{\"hashlock\":\"The hash of the secret\",\"secret\":\"The secret that generates the hashlock\"}},\"emergencyWithdraw(address,uint256)\":{\"details\":\"Allows the owner to withdraw any stuck tokens (emergency only)\",\"params\":{\"amount\":\"The amount to withdraw\",\"token\":\"The token address to withdraw\"}},\"getSwap(bytes32)\":{\"details\":\"Gets the details of a swap\",\"params\":{\"hashlock\":\"The hash of the secret\"},\"returns\":{\"amount\":\"The amount of tokens\",\"completed\":\"Whether the swap has been completed\",\"initiator\":\"The address that initiated the swap\",\"recipient\":\"The address that will receive the tokens\",\"refunded\":\"Whether the swap has been refunded\",\"timelock\":\"The expiration timestamp\",\"token\":\"The token address\"}},\"initiateSwap(bytes32,uint256,address,uint256)\":{\"details\":\"Initiates a new atomic swap with ETH\",\"params\":{\"amount\":\"The amount of ETH to swap\",\"hashlock\":\"The hash of the secret only (keccak256(secret))\",\"recipient\":\"The address that will receive the tokens\",\"timelock\":\"The expiration timestamp\"}},\"initiateSwapMeta((address,bytes32,uint256,address,address,uint256,uint256,uint256),bytes)\":{\"details\":\"Meta-transaction version of initiateSwap - allows gasless swap initiation\",\"params\":{\"metaData\":\"The swap initiation data signed by the user\",\"signature\":\"The user's signature\"}},\"initiateTokenSwap(bytes32,uint256,address,address,uint256)\":{\"details\":\"Initiates a new atomic swap with ERC-20 tokens\",\"params\":{\"amount\":\"The amount of tokens to swap\",\"hashlock\":\"The hash of the secret only (keccak256(secret))\",\"recipient\":\"The address that will receive the tokens\",\"timelock\":\"The expiration timestamp\",\"token\":\"The ERC-20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"refundSwap(bytes32)\":{\"details\":\"Refunds a swap after the timelock expires\",\"params\":{\"hashlock\":\"The hash of the secret\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AtomicSwap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AtomicSwap.sol\":\"AtomicSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/AtomicSwap.sol\":{\"keccak256\":\"0xc1bdb6b51a2ead949a92e48a53a7d36ccfcebcd83f7020ee130a39958d9c26cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3034a5351cafdfab71720dead1d3a5c26a999e040a0ff5e6da6b4ef8a4090e55\",\"dweb:/ipfs/QmYv2YswAh4xPytZcNLYV6GD9pJrDAPzecMW9zxvkdevDA\"]}},\"version\":1}"}}}}}